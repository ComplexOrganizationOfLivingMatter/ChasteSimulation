//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: noble_varghese_kohl_noble_1998_basic
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Thu May  5 09:15:42 2016
//! 
//! <autogenerated>

#include "NobleVargheseKohlNoble1998aBackwardEuler.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<53; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
#define COVERAGE_IGNORE
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
#define COVERAGE_IGNORE
            _oob_0 = true;
#undef COVERAGE_IGNORE
        }
        return _oob_0;
    }
#undef COVERAGE_IGNORE

    ~CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables(const CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables&);
    CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables& operator= (const CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables&);
    CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 53;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][53];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 0.001 * (3.0 * (((fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((30.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (1.0 - exp((-((var_chaste_interface__membrane__V + 24.0) - 5.0)) * 0.25)))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 0.001 * (3.0 * ((((fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((30.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (1.0 - exp((-((var_chaste_interface__membrane__V + 24.0) - 5.0)) * 0.25)))) *  -1.0) - (((fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((12.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (exp(((var_chaste_interface__membrane__V + 24.0) - 5.0) * 0.10000000000000001) - 1.0))) * 1.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 0.001 * (0.29999999999999999 * (((fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 25.0 : ((6.25 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 0.001 * (0.29999999999999999 * ((((fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 25.0 : ((6.25 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0))) *  -1.0) - ((12.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25))) * 1.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 0.001 * ((20.0 * exp( -0.125 * ((var_chaste_interface__membrane__V + 75.0) - 0.0))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 0.001 * (((20.0 * exp( -0.125 * ((var_chaste_interface__membrane__V + 75.0) - 0.0))) *  -1.0) - ((2000.0 / (1.0 + (320.0 * exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V + 75.0) - 0.0))))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 0.001 * (((fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * (var_chaste_interface__membrane__V + 41.0)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 41.0))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 0.001 * ((((fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * (var_chaste_interface__membrane__V + 41.0)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 41.0))))) *  -1.0) - ((8000.0 * exp( -0.056000000000000001 * (var_chaste_interface__membrane__V + 66.0))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = 0.001 * ((50.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 5.0)) * 0.1111111111111111))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 0.001 * (((50.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 5.0)) * 0.1111111111111111))) *  -1.0) - ((0.050000000000000003 * exp((-(var_chaste_interface__membrane__V - 20.0)) * 0.066666666666666666)) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = 0.001 * (((50.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 5.0)) * 0.1111111111111111))) *  -1.0) - ((0.40000000000000002 * exp(-pow((var_chaste_interface__membrane__V + 30.0) * 0.033333333333333333, 3.0))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = 0.001 * ((14.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 40.0)) * 0.1111111111111111))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = 0.001 * (((14.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 40.0)) * 0.1111111111111111))) *  -1.0) - ((1.0 * exp((-var_chaste_interface__membrane__V) * 0.022222222222222223)) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = 0.001 * (333.0 * (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__V + 4.0)) * 0.20000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = 0.001 * ((0.033000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.058823529411764705)) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 0.001 * (((0.033000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.058823529411764705)) *  -1.0) - ((33.0 / (1.0 + exp( -0.125 * (var_chaste_interface__membrane__V + 10.0)))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = 0.018716945411372737 * exp((0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] =  -5.8022530775255481 * (0.0032258064516129032 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = pow(1.0 + exp((0.044642857139999999 * var_chaste_interface__membrane__V) + 0.40178571429999999), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = exp((0.044642857139999999 * var_chaste_interface__membrane__V) + 0.40178571429999999);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 0.00050000000000000001 / pow(1.0 + exp(( -0.125 * var_chaste_interface__membrane__V) - 6.5), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = exp(( -0.125 * var_chaste_interface__membrane__V) - 6.5);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 1.0 / (1.0 + exp((0.044642857139999999 * var_chaste_interface__membrane__V) + 0.40178571429999999));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = 140.0 * exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = 0.0032258064516129032 * (1.0 / (1.0 - exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = (((-((-var_chaste_interface__membrane__V) + 50.0)) * 9309421124.3716221) * 1.4465406742646261e-08) * (1.040582726326743e-05 / pow(1.0 - exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = ((((-((-var_chaste_interface__membrane__V) + 50.0)) * 9309421124.3716221) * 1.4465406742646261e-08) * (1.040582726326743e-05 * (1.0 / (1.0 - exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07))))) * (140.0 * exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] = 2.0 * exp(2.0 * ((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = 0.0032258064516129032 * (1.0 / (1.0 - exp(2.0 * ((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] = 1.0 / pow(1.0 - exp(2.0 * ((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = exp(2.0 * ((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] = 4.0 * exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = ((((-((-var_chaste_interface__membrane__V) + 50.0)) * 9309421124.3716221) * 1.4465406742646261e-08) * (1.040582726326743e-05 * (1.0 / (1.0 - exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07))))) * (4.0 * exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] = (0.0040000000000000001 / (1.0 + exp(( -0.125 * var_chaste_interface__membrane__V) - 6.5))) * 8314.4719999999998;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] = ((((-((-var_chaste_interface__membrane__V) + 50.0)) * 96485.341499999995) * 0.00012027221933034354) * (0.0032258064516129032 * (1.0 / (1.0 - exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07))))) * 6.4993004051833214;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][36] = exp((0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][37] = exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473) * 2744000.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][38] = (0.00049950000000000005 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473)) * 2744000.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][39] = 1.0 / (1.0 - exp((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][40] = (0.0032258064516129032 * (1.0 / (1.0 - exp(2.0 * ((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07))))) * 42.240905756816083;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][41] = (4.9999999999999998e-07 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473)) * 2744000.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][42] = (((-((-var_chaste_interface__membrane__V) + 50.0)) * 96485.341499999995) * 0.00012027221933034354) * ((0.0032258064516129032 * (1.0 / (1.0 - exp(2.0 * ((((-var_chaste_interface__membrane__V) + 50.0) * 96485.341499999995) * 3.8797490106562429e-07))))) * 42.240905756816083);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][43] = 1.0 + exp((var_chaste_interface__membrane__V + 9.0) * 0.044642857142857144);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][44] = 0.0040000000000000001 / (1.0 + exp((-(var_chaste_interface__membrane__V + 52.0)) * 0.125));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][45] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][46] = 2.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][47] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][48] = 4.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][49] = 140.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][50] = exp((var_chaste_interface__membrane__V * 48242.670749999997) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][51] = exp((var_chaste_interface__membrane__V *  -48242.670749999997) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][52] = 0.0 * exp(0.080000000000000002 * (var_chaste_interface__membrane__V - 40.0));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[53];
    
    // Lookup tables
    double (*_lookup_table_0)[53];
    
};

std::auto_ptr<CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables> CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__membrane__stim_amplitude = 0.001 * (( -3.0 / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<12>(
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::~CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler()
    {
    }
    
    AbstractLookupTableCollection* CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::GetLookupTableCollection()
    {
        return CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance();
    }
    
    double CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = rY[8];
        // Units: dimensionless; Initial value: 0.9349197
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = rY[9];
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[14];
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[15];
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[16];
        // Units: millimolar; Initial value: 1.4e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = rY[17];
        // Units: millimolar; Initial value: 1.88e-5
        
        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.14285714285714285 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 120606.67687499999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = ((((0.0020999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + (0.0012999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)) * 1.0) / _lt_0_row[43]) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = 0.0025999999999999999 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(8.1999999999999993 / (var_chaste_interface__intracellular_potassium_concentration__K_i + (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i))))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[48]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 19.297068299999999) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[48]); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_persistent_sodium_current__i_p_Na = _lt_0_row[44] * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[49]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 96.485341500000004) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[49]); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (((_lt_0_row[50] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[51] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * 0.00049950000000000005) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (((_lt_0_row[50] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[51] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) * 4.9999999999999998e-07) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[45]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[46]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 38594.136599999998) * 3.8797490106562429e-07) / _lt_0_row[45]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[46]); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_persistent_sodium_current__i_p_Na + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds + var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_calcium_background_current__i_b_Ca) / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rResidual[12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = rCurrentGuess[0];
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = rCurrentGuess[1];
        double var_chaste_interface__calcium_release__ActFrac = rCurrentGuess[2];
        double var_chaste_interface__calcium_release__ProdFrac = rCurrentGuess[3];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rCurrentGuess[4];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rCurrentGuess[5];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = rCurrentGuess[6];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rCurrentGuess[7];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rCurrentGuess[8];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rCurrentGuess[9];
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rCurrentGuess[10];
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rCurrentGuess[11];
        
        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.14285714285714285 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 120606.67687499999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = ((((0.0020999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + (0.0012999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)) * 1.0) / _lt_0_row[43]) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = 0.0025999999999999999 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(8.1999999999999993 / (var_chaste_interface__intracellular_potassium_concentration__K_i + (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i))))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[48]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 19.297068299999999) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[48]); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_persistent_sodium_current__i_p_Na = _lt_0_row[44] * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[49]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 96.485341500000004) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[49]); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (((_lt_0_row[50] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[51] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * 0.00049950000000000005) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (((_lt_0_row[50] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[51] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) * 4.9999999999999998e-07) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[45]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[46]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 38594.136599999998) * 3.8797490106562429e-07) / _lt_0_row[45]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[46]); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_sarcoplasmic_reticulum_calcium_pump__K_2 = var_chaste_interface__intracellular_calcium_concentration__Ca_i + (var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00023999999999999998) + 0.00041999999999999996; // millimolar
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = ((var_chaste_interface__intracellular_calcium_concentration__Ca_i / var_sarcoplasmic_reticulum_calcium_pump__K_2) * 0.40000000000000002) - (((var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00023999999999999998) / var_sarcoplasmic_reticulum_calcium_pump__K_2) * 0.029999999999999999); // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * (var_chaste_interface__intracellular_calcium_concentration__Ca_up - var_chaste_interface__intracellular_calcium_concentration__Ca_rel); // millimolar_per_second
        const double var_calcium_release__i_rel = ((pow(var_chaste_interface__calcium_release__ActFrac / (var_chaste_interface__calcium_release__ActFrac + 0.25), 2.0) * 250.0) + 0.050000000000000003) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_release__CaiReg = var_chaste_interface__intracellular_calcium_concentration__Ca_i / (var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.00050000000000000001); // dimensionless
        const double var_calcium_release__RegBindSite = var_calcium_release__CaiReg + ((1.0 - var_calcium_release__CaiReg) * (var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (var_chaste_interface__intracellular_calcium_concentration__Ca_ds + 0.01))); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + (500.0 * pow(var_calcium_release__RegBindSite, 2.0)); // per_second
        const double var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop)) - (200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop); // 'millimole per litre per second'
        const double var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod)) - (50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod); // 'millimole per litre per second'
        const double d_dt_chaste_interface__L_type_Ca_channel_f2_gate__f2 = 0.001 * (1.0 - (1.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i / (100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) + var_chaste_interface__L_type_Ca_channel_f2_gate__f2))); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = 0.001 * (20.0 * (1.0 - ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) + var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds))); // 'per millisecond'
        const double d_dt_chaste_interface__calcium_release__ActFrac = 0.001 * ((((1.0 - var_chaste_interface__calcium_release__ActFrac) - var_chaste_interface__calcium_release__ProdFrac) * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * (_lt_0_row[52] + (500.0 * pow(var_calcium_release__RegBindSite, 2.0)))) - (var_chaste_interface__calcium_release__ActFrac * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * var_calcium_release__InactRate)); // 'per millisecond'
        const double d_dt_chaste_interface__calcium_release__ProdFrac = 0.001 * ((var_chaste_interface__calcium_release__ActFrac * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * var_calcium_release__InactRate) - (((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * 1.0 * var_chaste_interface__calcium_release__ProdFrac)); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_sodium_concentration__Na_i = 0.001 * ( -0.63182746016849234 * (var_fast_sodium_current__i_Na + var_persistent_sodium_current__i_p_Na + var_sodium_background_current__i_b_Na + (3.0 * var_sodium_potassium_pump__i_NaK) + (3.0 * var_sodium_calcium_exchanger__i_NaCa_cyt) + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_potassium_concentration__K_i = 0.001 * ( -0.63182746016849234 * ((var_time_independent_potassium_current__i_K1 + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_transient_outward_current__i_to) - (2.0 * var_sodium_potassium_pump__i_NaK))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i = 0.001 * ((((( -0.31591373008424617 * (((var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_calcium_background_current__i_b_Ca) - (2.0 * var_sodium_calcium_exchanger__i_NaCa_cyt)) - (2.0 * var_sodium_calcium_exchanger__i_NaCa_ds))) + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 1.0) + ((var_calcium_release__i_rel * 0.10000000000000001) * 2.0408163265306123)) - var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time) - var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time) - var_sarcoplasmic_reticulum_calcium_pump__i_up); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_ds = 0.001 * ((( -1.0 * var_L_type_Ca_channel__i_Ca_L_Ca_ds) * 3.159137300842461) - (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 10.0)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up = 0.001 * ((49.0 * var_sarcoplasmic_reticulum_calcium_pump__i_up) - var_calcium_translocation__i_trans); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel = 0.001 * ((0.099999999999999992 * var_calcium_translocation__i_trans) - var_calcium_release__i_rel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time; // 'millimole per litre per millisecond'
        
        rResidual[0] = rCurrentGuess[0] - rY[8] - mDt*d_dt_chaste_interface__L_type_Ca_channel_f2_gate__f2;
        rResidual[1] = rCurrentGuess[1] - rY[9] - mDt*d_dt_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds;
        rResidual[2] = rCurrentGuess[2] - rY[12] - mDt*d_dt_chaste_interface__calcium_release__ActFrac;
        rResidual[3] = rCurrentGuess[3] - rY[13] - mDt*d_dt_chaste_interface__calcium_release__ProdFrac;
        rResidual[11] = rCurrentGuess[11] - rY[14] - mDt*d_dt_chaste_interface__intracellular_sodium_concentration__Na_i;
        rResidual[10] = rCurrentGuess[10] - rY[15] - mDt*d_dt_chaste_interface__intracellular_potassium_concentration__K_i;
        rResidual[7] = rCurrentGuess[7] - rY[16] - mDt*d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i;
        rResidual[6] = rCurrentGuess[6] - rY[17] - mDt*d_dt_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        rResidual[9] = rCurrentGuess[9] - rY[18] - mDt*d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up;
        rResidual[8] = rCurrentGuess[8] - rY[19] - mDt*d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        rResidual[4] = rCurrentGuess[4] - rY[20] - mDt*d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
        rResidual[5] = rCurrentGuess[5] - rY[21] - mDt*d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
    }
    
    void CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rJacobian[12][12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = rCurrentGuess[0];
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = rCurrentGuess[1];
        double var_chaste_interface__calcium_release__ActFrac = rCurrentGuess[2];
        double var_chaste_interface__calcium_release__ProdFrac = rCurrentGuess[3];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rCurrentGuess[4];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rCurrentGuess[5];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = rCurrentGuess[6];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rCurrentGuess[7];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rCurrentGuess[8];
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rCurrentGuess[9];
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rCurrentGuess[10];
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rCurrentGuess[11];
        
        const double var_chaste_interface__environment__dt = mDt;

        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_environment__dt = 0.001 * var_chaste_interface__environment__dt; // second
        const double var_t14 = pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0); // dimensionless
        const double var_t15 = 2.0 * var_t14; // dimensionless
        const double var_t26 = var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 2744000.0; // dimensionless
        const double var_t32 = 1.0 + (0.0 * (var_t26 + var_t15)); // dimensionless
        const double var_t33 = 1.0 / var_t32; // dimensionless
        const double var_t36 = 1.0 + (144.92753619999999 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds); // dimensionless
        const double var_t37 = 1.0 / var_t36; // dimensionless
        const double var_t42 = var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0; // dimensionless
        const double var_t48 = 1.0 + (0.0 * (var_t42 + var_t15)); // dimensionless
        const double var_t49 = 1.0 / var_t48; // dimensionless
        const double var_t52 = 1.0 + (144.92753619999999 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // dimensionless
        const double var_t53 = 1.0 / var_t52; // dimensionless
        const double var_t58 = (0.0020999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + (0.0012999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2); // dimensionless
        const double var_t68 = 1.0 / var_chaste_interface__intracellular_potassium_concentration__K_i; // dimensionless
        const double var_t72 = 26.713760659695648 * log(4.0 * var_t68); // dimensionless
        const double var_t73 = var_chaste_interface__membrane__V - var_t72; // dimensionless
        const double var_t84 = 1.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i; // dimensionless
        const double var_t101 = exp(((1.25 * ((var_chaste_interface__membrane__V - var_t72) - 10.0)) * 96485.341499999995) * 3.8797490106562429e-07); // dimensionless
        const double var_t102 = 1.0 + var_t101; // dimensionless
        const double var_t103 = 1.0 / var_t102; // dimensionless
        const double var_t109 = 0.0025999999999999999 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2.0); // dimensionless
        const double var_t111 = var_t58 * _lt_0_row[22]; // dimensionless
        const double var_t114 = 0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0); // dimensionless
        const double var_t116 = (0.0050000000000000001 * var_t114) * var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_t118 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2.0) * var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_t120 = (2.5 * var_t118) * var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_t124 = 1.0 / pow(var_t102, 2.0); // dimensionless
        const double var_t148 = (var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833214) - _lt_0_row[23]; // dimensionless
        const double var_t153 = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f; // dimensionless
        const double var_t154 = var_t153 * var_chaste_interface__L_type_Ca_channel_f2_gate__f2; // dimensionless
        const double var_t155 = 0.0 * var_t154; // dimensionless
        const double var_t182 = var_t153 * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds; // dimensionless
        const double var_t183 = 0.001 * var_t182; // dimensionless
        const double var_t187 = 0.0 * var_t154; // dimensionless
        const double var_t197 = (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816083) - _lt_0_row[28]; // dimensionless
        const double var_t198 = _lt_0_row[29] * var_t197; // dimensionless
        const double var_t202 = 0.0 * var_chaste_interface__L_type_Ca_channel_d_gate__d; // dimensionless
        const double var_t224 = 0.10000000000000001 * var_chaste_interface__L_type_Ca_channel_d_gate__d; // dimensionless
        const double var_t225 = var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds; // dimensionless
        const double var_t236 = (var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833214) - _lt_0_row[32]; // dimensionless
        const double var_t241 = 0.0 * var_t154; // dimensionless
        const double var_t254 = 0.00020000000000000001 * var_t182; // dimensionless
        const double var_t270 = 1.0 / (var_chaste_interface__intracellular_potassium_concentration__K_i + (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i)); // dimensionless
        const double var_t285 = 1.0 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)); // dimensionless
        const double var_t342 = (-var_t153) * ((-var_chaste_interface__membrane__V) + 50.0); // dimensionless
        const double var_t362 = var_t109 * 8314.4719999999998; // dimensionless
        const double var_t366 = ((var_t362 * 0.0032129232812012176) * var_t270) * 0.029999999999999999; // dimensionless
        const double var_t370 = 40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i; // dimensionless
        const double var_t373 = 0.55999999999999994 / var_t370; // dimensionless
        const double var_t378 = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / pow(var_t370, 2.0); // dimensionless
        const double var_t381 = ((var_t120 * 2577486.3199999998) * 1.0364268649036186e-05) * var_t285; // dimensionless
        const double var_t383 = 0.0032129232812012176 * var_t84; // dimensionless
        const double var_t384 = 4.9886831999999997 * var_t383; // dimensionless
        const double var_t386 = _lt_0_row[34] * var_t383; // dimensionless
        const double var_t389 = var_t155 * _lt_0_row[35]; // dimensionless
        const double var_t390 = var_t183 * _lt_0_row[35]; // dimensionless
        const double var_t391 = _lt_0_row[36] * var_t14; // dimensionless
        const double var_t393 = 3.0 * var_t84; // dimensionless
        const double var_t397 = ((((0.00049950000000000005 * var_t391) * var_t393) * 2.0) * var_t49) * var_t53; // dimensionless
        const double var_t398 = var_t391 * 2.0; // dimensionless
        const double var_t401 = var_t398 - (_lt_0_row[37] * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // dimensionless
        const double var_t403 = 1.0 / pow(var_t48, 2.0); // dimensionless
        const double var_t410 = ((0.0 * var_t14) * 3.0) * var_t84; // dimensionless
        const double var_t411 = (((0.00049950000000000005 * var_t401) * var_t403) * var_t53) * var_t410; // dimensionless
        const double var_t416 = ((((4.9999999999999998e-07 * var_t391) * var_t393) * 2.0) * var_t33) * var_t37; // dimensionless
        const double var_t418 = var_t398 - (_lt_0_row[37] * var_chaste_interface__intracellular_calcium_concentration__Ca_ds); // dimensionless
        const double var_t420 = 1.0 / pow(var_t32, 2.0); // dimensionless
        const double var_t424 = (((4.9999999999999998e-07 * var_t418) * var_t420) * var_t37) * var_t410; // dimensionless
        const double var_t454 = (_lt_0_row[38] * var_t49) * var_t53; // dimensionless
        const double var_t459 = (((0.00049950000000000005 * var_t401) * var_t403) * var_t53) * 0.0; // dimensionless
        const double var_t464 = ((0.00049950000000000005 * var_t401) * var_t49) / pow(var_t52, 2.0); // dimensionless
        const double var_t690 = 100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i; // dimensionless
        const double var_t696 = 0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds; // dimensionless
        const double var_t733 = var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.00050000000000000001; // dimensionless
        const double var_t734 = 1.0 / var_t733; // dimensionless
        const double var_t735 = var_chaste_interface__intracellular_calcium_concentration__Ca_i * var_t734; // dimensionless
        const double var_t736 = 1.0 - var_t735; // dimensionless
        const double var_t737 = var_t736 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds; // dimensionless
        const double var_t738 = var_chaste_interface__intracellular_calcium_concentration__Ca_ds + 0.01; // dimensionless
        const double var_t739 = 1.0 / var_t738; // dimensionless
        const double var_t741 = var_t735 + (var_t737 * var_t739); // dimensionless
        const double var_t742 = pow(var_t741, 2.0); // dimensionless
        const double var_t747 = 60.0 + (500.0 * var_t742); // dimensionless
        const double var_t753 = (500.0 * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0)) * var_t742; // dimensionless
        const double var_t754 = ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * var_t747; // dimensionless
        const double var_t756 = ((1.0 - var_chaste_interface__calcium_release__ActFrac) - var_chaste_interface__calcium_release__ProdFrac) * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0); // dimensionless
        const double var_t759 = var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow(var_t733, 2.0); // dimensionless
        const double var_t764 = var_t741 * ((var_t734 - var_t759) + ((((-var_t734) + var_t759) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * var_t739)); // dimensionless
        const double var_t766 = var_chaste_interface__calcium_release__ActFrac * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0); // dimensionless
        const double var_t767 = var_t766 * var_t764; // dimensionless
        const double var_t774 = var_t741 * ((var_t736 * var_t739) - (var_t737 / pow(var_t738, 2.0))); // dimensionless
        const double var_t776 = var_t766 * var_t774; // dimensionless
        const double var_t816 = ((var_t342 * 3.8797490106562429e-07) * _lt_0_row[39]) * var_t148; // dimensionless
        const double var_t873 = ((var_t342 * 3.8797490106562429e-07) * _lt_0_row[39]) * var_t236; // dimensionless
        const double var_t915 = ((-var_chaste_interface__L_type_Ca_channel_f_gate__f) * ((-var_chaste_interface__membrane__V) + 50.0)) * 0.00012027221933034354; // dimensionless
        const double var_t919 = var_chaste_interface__calcium_release__ActFrac + 0.25; // dimensionless
        const double var_t920 = pow(var_t919, 2.0); // dimensionless
        const double var_t921 = 1.0 / var_t920; // dimensionless
        const double var_t924 = pow(var_chaste_interface__calcium_release__ActFrac, 2.0); // dimensionless
        const double var_t930 = (2.0 * (((var_chaste_interface__calcium_release__ActFrac * var_t921) * 250.0) - (((var_t924 / var_t920) / var_t919) * 250.0))) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // dimensionless
        const double var_t945 = 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod); // dimensionless
        const double var_t947 = 100000.0 * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop); // dimensionless
        const double var_t948 = var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00029999999999999997; // dimensionless
        const double var_t953 = ((var_chaste_interface__intracellular_calcium_concentration__Ca_i + ((var_t948 * 0.40000000000000002) * 2.0)) + 0.00011999999999999999) + 0.00029999999999999997; // dimensionless
        const double var_t954 = 1.0 / var_t953; // dimensionless
        const double var_t955 = var_t954 * 0.40000000000000002; // dimensionless
        const double var_t957 = 1.0 / pow(var_t953, 2.0); // dimensionless
        const double var_t959 = (var_chaste_interface__intracellular_calcium_concentration__Ca_i * var_t957) * 0.40000000000000002; // dimensionless
        const double var_t963 = (((var_t948 * 0.40000000000000002) * 2.0) * var_t957) * 0.029999999999999999; // dimensionless
        const double var_t988 = (((var_t959 * 0.00011999999999999999) * 2.0) + ((0.00023999999999999998 * var_t954) * 0.029999999999999999)) - (((((var_chaste_interface__intracellular_calcium_concentration__Ca_up * 8.9999999999999985e-08) * 0.16000000000000003) * 4.0) * var_t957) * 0.029999999999999999); // dimensionless
        const double var_t990 = (var_t924 * var_t921) * 250.0; // dimensionless
        const double var_t995 = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) + 50.0; // dimensionless
        const double var_t997 = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) + 200.0; // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_environment__dt *  -1.0);
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = 0.0;
        rJacobian[0][7] = -(var_environment__dt * (( -1.0 / var_t690) + (var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow(var_t690, 2.0))));
        rJacobian[0][8] = 0.0;
        rJacobian[0][9] = 0.0;
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (var_environment__dt *  -20.0);
        rJacobian[1][2] = 0.0;
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = -(var_environment__dt * (20.0 * (( -1.0 / var_t696) + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds / pow(var_t696, 2.0)))));
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = 0.0;
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = 0.0;
        rJacobian[2][2] = 1.0 - (var_environment__dt * ((-var_t753) - var_t754));
        rJacobian[2][3] = -(var_environment__dt * (-var_t753));
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = -(var_environment__dt * (((1000.0 * var_t756) * var_t774) - (1000.0 * var_t776)));
        rJacobian[2][7] = -(var_environment__dt * (((1000.0 * var_t756) * var_t764) - (1000.0 * var_t767)));
        rJacobian[2][8] = 0.0;
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = 0.0;
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = -(var_environment__dt * var_t754);
        rJacobian[3][3] = 1.0 - (var_environment__dt * (-((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0)));
        rJacobian[3][4] = 0.0;
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = -(var_environment__dt * (1000.0 * var_t776));
        rJacobian[3][7] = -(var_environment__dt * (1000.0 * var_t767));
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = 0.0;
        rJacobian[3][11] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (var_environment__dt * (-var_t995));
        rJacobian[4][5] = 0.0;
        rJacobian[4][6] = 0.0;
        rJacobian[4][7] = -(var_environment__dt * var_t945);
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = 0.0;
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (var_environment__dt * (-var_t997));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = -(var_environment__dt * var_t947);
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = 0.0;
        rJacobian[5][10] = 0.0;
        rJacobian[5][11] = 0.0;
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = -(var_environment__dt * ((( -0.63661977250000001 * var_t224) * var_t915) * (var_t198 * 1915180.486609058)));
        rJacobian[6][2] = 0.0;
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = 0.0;
        rJacobian[6][6] = 1.0 - (var_environment__dt *  -10.0);
        rJacobian[6][7] = -(var_environment__dt * ((((((0.63661977250000001 * var_t224) * var_t225) * ((-var_chaste_interface__membrane__V) + 50.0)) * 0.00012027221933034354) * _lt_0_row[40]) * 1915180.486609058));
        rJacobian[6][8] = 0.0;
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[7][0] = -(var_environment__dt * ((( -0.63661977199999997 * (191518.0486609058 * var_t202)) * var_t915) * var_t198));
        rJacobian[7][1] = 0.0;
        rJacobian[7][2] = -(var_environment__dt * ((var_t930 * 0.10000000000000001) * 2.0408163265306123));
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = -(var_environment__dt * var_t995);
        rJacobian[7][5] = -(var_environment__dt * var_t997);
        rJacobian[7][6] = -(var_environment__dt * (( -0.31591372994308869 * (((2.0 * ((_lt_0_row[41] * var_t33) * var_t37)) + (2.0 * ((((4.9999999999999998e-07 * var_t418) * var_t420) * var_t37) * 0.0))) + (289.85507239999998 * (((4.9999999999999998e-07 * var_t418) * var_t33) / pow(var_t36, 2.0))))) + 1.0));
        rJacobian[7][7] = 1.0 - (var_environment__dt * (((((( -0.31591372994308869 * ((((((4.0 * var_t187) * _lt_0_row[42]) + (0.0033392200824619565 / var_chaste_interface__intracellular_calcium_concentration__Ca_i)) + (2.0 * var_t454)) + (2.0 * var_t459)) + (289.85507239999998 * var_t464))) - var_t945) - var_t947) - var_t955) + var_t959) - var_t963));
        rJacobian[7][8] = -(var_environment__dt * (((var_t990 + 0.050000000000000003) * 0.10000000000000001) * 2.0408163265306123));
        rJacobian[7][9] = -(var_environment__dt * var_t988);
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = -(var_environment__dt * ( -0.63182745988617739 * ((((-var_t397) + var_t411) - var_t416) + var_t424)));
        rJacobian[8][0] = 0.0;
        rJacobian[8][1] = 0.0;
        rJacobian[8][2] = -(var_environment__dt * (-var_t930));
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = 0.0;
        rJacobian[8][6] = 0.0;
        rJacobian[8][7] = 0.0;
        rJacobian[8][8] = 1.0 - (var_environment__dt * (( -5.0 - var_t990) - 0.050000000000000003));
        rJacobian[8][9] = -(var_environment__dt * 5.0);
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[9][0] = 0.0;
        rJacobian[9][1] = 0.0;
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = 0.0;
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = -(var_environment__dt * (49.0 * ((var_t955 - var_t959) + var_t963)));
        rJacobian[9][8] = -(var_environment__dt * 50.0);
        rJacobian[9][9] = 1.0 - (var_environment__dt * (( -49.0 * var_t988) - 50.0));
        rJacobian[9][10] = 0.0;
        rJacobian[9][11] = 0.0;
        rJacobian[10][0] = -(var_environment__dt * ( -0.0 * var_t873));
        rJacobian[10][1] = -(var_environment__dt * ( -12.192417651069437 * var_t873));
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = 0.0;
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = 0.0;
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = 0.0;
        rJacobian[10][10] = 1.0 - (var_environment__dt * ( -0.63182746008467194 * ((((((((3.8162515228136638 * var_t68) * var_t103) - ((((0.17857142857142855 * var_t73) * var_t124) * var_t68) * var_t101)) + (((var_t111 * 8314.4719999999998) * 0.0032129232812012176) * var_t68)) + ((var_t362 * 0.0032129232812012176) * var_t270)) + (var_t241 * _lt_0_row[35])) + (var_t254 * _lt_0_row[35])) + (((var_t116 * 2577486.3199999998) * 1.0364268649036186e-05) * var_t68))));
        rJacobian[10][11] = -(var_environment__dt * ( -0.63182746008467194 * ((var_t366 - (2.0 * var_t373)) + (2.0 * var_t378))));
        rJacobian[11][0] = -(var_environment__dt * ( -0.0 * var_t816));
        rJacobian[11][1] = -(var_environment__dt * ( -60.962088255347183 * var_t816));
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = 0.0;
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = 0.0;
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = -(var_environment__dt * ( -0.63182746008467194 * ((( -3.0 * var_t454) - (3.0 * var_t459)) - (434.7826086 * var_t464))));
        rJacobian[11][8] = 0.0;
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = -(var_environment__dt * (((( -1.9645288607438555e-06 * var_t118) * var_chaste_interface__fast_sodium_current_h_gate__h) * 2577486.3199999998) * var_t285));
        rJacobian[11][11] = 1.0 - (var_environment__dt * ( -0.63182746008467194 * ((((((((var_t381 + var_t386) + var_t384) + (3.0 * var_t373)) - (3.0 * var_t378)) + (3.0 * var_t397)) - (3.0 * var_t411)) + var_t389) + var_t390)));
    }
    
    void CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = rY[8];
        // Units: dimensionless; Initial value: 0.9349197
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = rY[9];
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[14];
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[15];
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[16];
        // Units: millimolar; Initial value: 1.4e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = rY[17];
        // Units: millimolar; Initial value: 1.88e-5
        
        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.14285714285714285 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 120606.67687499999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = ((((0.0020999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + (0.0012999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)) * 1.0) / _lt_0_row[43]) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = 0.0025999999999999999 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(8.1999999999999993 / (var_chaste_interface__intracellular_potassium_concentration__K_i + (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i))))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[48]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 19.297068299999999) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[48]); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_persistent_sodium_current__i_p_Na = _lt_0_row[44] * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[49]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 96.485341500000004) * 3.8797490106562429e-07) / _lt_0_row[47]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[49]); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (((_lt_0_row[50] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[51] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * 0.00049950000000000005) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (((_lt_0_row[50] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[51] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) * 4.9999999999999998e-07) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[45]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[46]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 38594.136599999998) * 3.8797490106562429e-07) / _lt_0_row[45]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[46]); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double d_dt_chaste_interface__membrane__V = 0.001 * (( -1.0 / var_membrane__Cm) * ((1000.0 * ((var_chaste_interface__membrane__i_Stim * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance())) + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_persistent_sodium_current__i_p_Na + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds + var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_calcium_background_current__i_b_Ca)); // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__membrane__V;
    }
    
    void CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        
        const double var_chaste_interface__environment__dt = mDt;

        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        
        rY[6] = (var_chaste_interface__L_type_Ca_channel_d_gate__d + (_lt_0_row[0] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[1] * var_chaste_interface__environment__dt));
        rY[7] = (var_chaste_interface__L_type_Ca_channel_f_gate__f + (_lt_0_row[2] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[3] * var_chaste_interface__environment__dt));
        rY[5] = (var_chaste_interface__fast_sodium_current_h_gate__h + (_lt_0_row[4] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[5] * var_chaste_interface__environment__dt));
        rY[4] = (var_chaste_interface__fast_sodium_current_m_gate__m + (_lt_0_row[6] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[7] * var_chaste_interface__environment__dt));
        rY[1] = (var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 + (_lt_0_row[8] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[9] * var_chaste_interface__environment__dt));
        rY[2] = (var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 + (_lt_0_row[8] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[10] * var_chaste_interface__environment__dt));
        rY[3] = (var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs + (_lt_0_row[11] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[12] * var_chaste_interface__environment__dt));
        rY[11] = (var_chaste_interface__transient_outward_current_r_gate__r + (_lt_0_row[13] * var_chaste_interface__environment__dt)) / (1.0 - ( -0.33300000000000002 * var_chaste_interface__environment__dt));
        rY[10] = (var_chaste_interface__transient_outward_current_s_gate__s + (_lt_0_row[14] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[15] * var_chaste_interface__environment__dt));
        
        double _guess[12] = {rY[8],rY[9],rY[12],rY[13],rY[20],rY[21],rY[17],rY[16],rY[19],rY[18],rY[15],rY[14]};
        CardiacNewtonSolver<12,CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<12,CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[8] = _guess[0];
        rY[9] = _guess[1];
        rY[12] = _guess[2];
        rY[13] = _guess[3];
        rY[20] = _guess[4];
        rY[21] = _guess[5];
        rY[17] = _guess[6];
        rY[16] = _guess[7];
        rY[19] = _guess[8];
        rY[18] = _guess[9];
        rY[15] = _guess[10];
        rY[14] = _guess[11];
    }
    
template<>
void OdeSystemInformation<CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "noble_varghese_kohl_noble_1998_basic";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-92.849333);

    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr1_gate__xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.03e-5);

    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr2_gate__xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2e-7);

    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001302);

    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0016203);

    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9944036);

    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("L_type_Ca_channel_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9349197);

    this->mVariableNames.push_back("L_type_Ca_channel_f2ds_gate__f2ds");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9651958);

    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9948645);

    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0042614);

    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4068154);

    this->mVariableNames.push_back("intracellular_sodium_concentration__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.3321223);

    this->mVariableNames.push_back("intracellular_potassium_concentration__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.5644281);

    this->mVariableNames.push_back("intracellular_calcium_concentration_Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.4e-5);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_ds");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.88e-5);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.4531889);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.4481927);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0005555);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003542);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellNobleVargheseKohlNoble1998aFromCellMLBackwardEuler)
