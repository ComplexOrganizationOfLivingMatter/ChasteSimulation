//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: difrancesco_noble_model_1985
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Thu May  5 09:14:33 2016
//! 
//! <autogenerated>

#include "DiFrancescoNoble1985Opt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellDiFrancescoNoble1985FromCellMLOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellDiFrancescoNoble1985FromCellMLOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellDiFrancescoNoble1985FromCellMLOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<28; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
#define COVERAGE_IGNORE
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
#define COVERAGE_IGNORE
            _oob_0 = true;
#undef COVERAGE_IGNORE
        }
        return _oob_0;
    }
#undef COVERAGE_IGNORE

    ~CellDiFrancescoNoble1985FromCellMLOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellDiFrancescoNoble1985FromCellMLOpt_LookupTables(const CellDiFrancescoNoble1985FromCellMLOpt_LookupTables&);
    CellDiFrancescoNoble1985FromCellMLOpt_LookupTables& operator= (const CellDiFrancescoNoble1985FromCellMLOpt_LookupTables&);
    CellDiFrancescoNoble1985FromCellMLOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 28;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][28];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = exp((-var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 1.0 - exp( -0.20000000000000001 * (var_chaste_interface__membrane__V + 10.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = exp((0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = exp((var_chaste_interface__membrane__V * 0.5) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = exp((var_chaste_interface__membrane__V *  -0.5) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = ((var_chaste_interface__membrane__V - 50.0) * 60.0) / (26.713760659695648 * (1.0 - exp(((var_chaste_interface__membrane__V - 50.0) *  -2.0) * 0.037433890822745473)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 2.0 * exp(( -2.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = ((var_chaste_interface__membrane__V - 50.0) * 0.14999999999999999) / (26.713760659695648 * (1.0 - exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = ((var_chaste_interface__membrane__V - 50.0) * 0.14999999999999999) / (26.713760659695648 * (1.0 - exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = 140.0 * exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = 0.050000000000000003 * exp( -0.067000000000000004 * ((var_chaste_interface__membrane__V + 52.0) - 10.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = (fabs((var_chaste_interface__membrane__V + 52.0) - 10.0) < 1.0000000000000001e-05) ? 2.5 : ((1.0 * ((var_chaste_interface__membrane__V + 52.0) - 10.0)) / (1.0 - exp( -0.20000000000000001 * ((var_chaste_interface__membrane__V + 52.0) - 10.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = (0.5 * exp(0.082600000000000007 * (var_chaste_interface__membrane__V + 50.0))) / (1.0 + exp(0.057000000000000002 * (var_chaste_interface__membrane__V + 50.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = (1.3 * exp( -0.059999999999999998 * (var_chaste_interface__membrane__V + 20.0))) / (1.0 + exp( -0.040000000000000001 * (var_chaste_interface__membrane__V + 20.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = 0.033000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.058823529411764705);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = 33.0 / (1.0 + exp((-(var_chaste_interface__membrane__V + 10.0)) * 0.125));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = (fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * (var_chaste_interface__membrane__V + 41.0)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 41.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 8000.0 * exp( -0.056000000000000001 * (var_chaste_interface__membrane__V + 66.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 20.0 * exp( -0.125 * (var_chaste_interface__membrane__V + 75.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = 2000.0 / ((320.0 * exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 75.0))) + 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = (fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((30.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (1.0 - exp(( -1.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) * 0.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = (fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((12.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (exp(((var_chaste_interface__membrane__V + 24.0) - 5.0) * 0.10000000000000001) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = (fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 25.0 : ((6.25 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 50.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = (0.625 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = 5.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<CellDiFrancescoNoble1985FromCellMLOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[28];
    
    // Lookup tables
    double (*_lookup_table_0)[28];
    
};

std::auto_ptr<CellDiFrancescoNoble1985FromCellMLOpt_LookupTables> CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::mpInstance;

    CellDiFrancescoNoble1985FromCellMLOpt::CellDiFrancescoNoble1985FromCellMLOpt(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                16,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellDiFrancescoNoble1985FromCellMLOpt>::Instance();
        Init();

    }
    
    CellDiFrancescoNoble1985FromCellMLOpt::~CellDiFrancescoNoble1985FromCellMLOpt()
    {
    }
    
    AbstractLookupTableCollection* CellDiFrancescoNoble1985FromCellMLOpt::GetLookupTableCollection()
    {
        return CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::Instance();
    }
    
    double CellDiFrancescoNoble1985FromCellMLOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = rY[1];
        // Units: dimensionless; Initial value: 0.2
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[3];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.8
        double var_chaste_interface__second_inward_current_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0.005
        double var_chaste_interface__second_inward_current_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__second_inward_current_f2_gate__f2 = rY[8];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__intracellular_sodium_concentration__Nai = rY[9];
        // Units: millimolar; Initial value: 8
        double var_chaste_interface__intracellular_calcium_concentration__Cai = rY[10];
        // Units: millimolar; Initial value: 5e-5
        double var_chaste_interface__extracellular_potassium_concentration__Kc = rY[14];
        // Units: millimolar; Initial value: 4
        double var_chaste_interface__intracellular_potassium_concentration__Ki = rY[15];
        // Units: millimolar; Initial value: 140
        
        // Lookup table indexing
        const bool _oob_0 = CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_membrane__C = 0.074999999999999997; // microF
        const double var_hyperpolarising_activated_current__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_hyperpolarising_activated_current__i_fNa = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_hyperpolarising_activated_current__E_K = 26.713760659695648 * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__i_fK = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K); // nanoA
        const double var_hyperpolarising_activated_current__i_f = var_hyperpolarising_activated_current__i_fNa + var_hyperpolarising_activated_current__i_fK; // nanoA
        const double var_time_dependent_potassium_current__i_K = var_chaste_interface__time_dependent_potassium_current_x_gate__x * ((180.0 * (var_chaste_interface__intracellular_potassium_concentration__Ki - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[0]))) * 0.0071428571428571426); // nanoA
        const double var_time_independent_potassium_current__i_K1 = (((920.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 210.0)) * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V + 10.0) - var_hyperpolarising_activated_current__E_K) * 2.0) * 0.037433890822745473)); // nanoA
        const double var_transient_outward_current__i_to = ((((var_chaste_interface__transient_outward_current_s_gate__s * 0.28000000000000003 * (0.20000000000000001 + (var_chaste_interface__extracellular_potassium_concentration__Kc / (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc))) * var_chaste_interface__intracellular_calcium_concentration__Cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_calcium_concentration__Cai)) * (var_chaste_interface__membrane__V + 10.0)) / _lt_0_row[1]) * ((var_chaste_interface__intracellular_potassium_concentration__Ki * _lt_0_row[2]) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[3])); // nanoA
        const double var_sodium_background_current__i_Na_b = 0.17999999999999999 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_calcium_background_current__i_Ca_b = 0.02 * (var_chaste_interface__membrane__V - (log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Cai) * 13.356880329847824)); // nanoA
        const double var_sodium_potassium_pump__i_p = (((125.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc)) * var_chaste_interface__intracellular_sodium_concentration__Nai) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai); // nanoA
        const double var_Na_Ca_exchanger__i_NaCa = (0.02 * ((_lt_0_row[4] * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * 2.0) - (_lt_0_row[5] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Cai))) / ((1.0 + (0.001 * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Cai * 144.92753623188406))); // nanoA
        const double var_fast_sodium_current__i_Na = 750.0 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log((140.0 + (0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc)) / (var_chaste_interface__intracellular_sodium_concentration__Nai + (0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki))))); // nanoA
        const double var_second_inward_current__i_siCa = _lt_0_row[6] * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 42.240905756816083) - _lt_0_row[7]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siNa = _lt_0_row[10] * ((var_chaste_interface__intracellular_sodium_concentration__Nai * 6.4993004051833214) - _lt_0_row[11]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siK = _lt_0_row[8] * ((var_chaste_interface__intracellular_potassium_concentration__Ki * 6.4993004051833214) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[9])) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_si = var_second_inward_current__i_siCa + var_second_inward_current__i_siK + var_second_inward_current__i_siNa; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_hyperpolarising_activated_current__i_f + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_sodium_background_current__i_Na_b + var_calcium_background_current__i_Ca_b + var_sodium_potassium_pump__i_p + var_Na_Ca_exchanger__i_NaCa + var_fast_sodium_current__i_Na + var_second_inward_current__i_si) / var_membrane__C) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellDiFrancescoNoble1985FromCellMLOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = rY[1];
        // Units: dimensionless; Initial value: 0.2
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[3];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.8
        double var_chaste_interface__second_inward_current_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0.005
        double var_chaste_interface__second_inward_current_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__second_inward_current_f2_gate__f2 = rY[8];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__intracellular_sodium_concentration__Nai = rY[9];
        // Units: millimolar; Initial value: 8
        double var_chaste_interface__intracellular_calcium_concentration__Cai = rY[10];
        // Units: millimolar; Initial value: 5e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[11];
        // Units: millimolar; Initial value: 2
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[12];
        // Units: millimolar; Initial value: 1
        double var_chaste_interface__intracellular_calcium_concentration__p = rY[13];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__extracellular_potassium_concentration__Kc = rY[14];
        // Units: millimolar; Initial value: 4
        double var_chaste_interface__intracellular_potassium_concentration__Ki = rY[15];
        // Units: millimolar; Initial value: 140
        
        
        // Lookup table indexing
        const bool _oob_0 = CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_hyperpolarising_activated_current__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_hyperpolarising_activated_current__i_fNa = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_hyperpolarising_activated_current__E_K = 26.713760659695648 * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__i_fK = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K); // nanoA
        const double var_time_dependent_potassium_current__i_K = var_chaste_interface__time_dependent_potassium_current_x_gate__x * ((180.0 * (var_chaste_interface__intracellular_potassium_concentration__Ki - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[0]))) * 0.0071428571428571426); // nanoA
        const double var_time_independent_potassium_current__i_K1 = (((920.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 210.0)) * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V + 10.0) - var_hyperpolarising_activated_current__E_K) * 2.0) * 0.037433890822745473)); // nanoA
        const double var_transient_outward_current__i_to = ((((var_chaste_interface__transient_outward_current_s_gate__s * 0.28000000000000003 * (0.20000000000000001 + (var_chaste_interface__extracellular_potassium_concentration__Kc / (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc))) * var_chaste_interface__intracellular_calcium_concentration__Cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_calcium_concentration__Cai)) * (var_chaste_interface__membrane__V + 10.0)) / _lt_0_row[1]) * ((var_chaste_interface__intracellular_potassium_concentration__Ki * _lt_0_row[2]) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[3])); // nanoA
        const double var_sodium_background_current__i_Na_b = 0.17999999999999999 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_calcium_background_current__i_Ca_b = 0.02 * (var_chaste_interface__membrane__V - (log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Cai) * 13.356880329847824)); // nanoA
        const double var_sodium_potassium_pump__i_p = (((125.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc)) * var_chaste_interface__intracellular_sodium_concentration__Nai) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai); // nanoA
        const double var_Na_Ca_exchanger__i_NaCa = (0.02 * ((_lt_0_row[4] * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * 2.0) - (_lt_0_row[5] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Cai))) / ((1.0 + (0.001 * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Cai * 144.92753623188406))); // nanoA
        const double var_fast_sodium_current__i_Na = 750.0 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log((140.0 + (0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc)) / (var_chaste_interface__intracellular_sodium_concentration__Nai + (0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki))))); // nanoA
        const double var_second_inward_current__i_siCa = _lt_0_row[6] * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 42.240905756816083) - _lt_0_row[7]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siNa = _lt_0_row[10] * ((var_chaste_interface__intracellular_sodium_concentration__Nai * 6.4993004051833214) - _lt_0_row[11]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siK = _lt_0_row[8] * ((var_chaste_interface__intracellular_potassium_concentration__Ki * 6.4993004051833214) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[9])) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_intracellular_calcium_concentration__i_up = 21824.470085405861 * var_chaste_interface__intracellular_calcium_concentration__Cai * (5.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_up); // nanoA
        const double var_intracellular_calcium_concentration__i_tr = 27.280587606757326 * var_chaste_interface__intracellular_calcium_concentration__p * (var_chaste_interface__intracellular_calcium_concentration__Ca_up - var_chaste_interface__intracellular_calcium_concentration__Ca_rel); // nanoA
        const double var_intracellular_calcium_concentration__i_rel = (1091.223504270293 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel * pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0)) / (pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0) + 9.9999999999999995e-07); // nanoA
        const double var_extracellular_potassium_concentration__i_mK = (var_time_independent_potassium_current__i_K1 + var_time_dependent_potassium_current__i_K + var_hyperpolarising_activated_current__i_fK + var_second_inward_current__i_siK + var_transient_outward_current__i_to) - (2.0 * var_sodium_potassium_pump__i_p); // nanoA
        const double d_dt_chaste_interface__hyperpolarising_activated_current_y_gate__y = 0.001 * ((_lt_0_row[12] * (1.0 - var_chaste_interface__hyperpolarising_activated_current_y_gate__y)) - (_lt_0_row[13] * var_chaste_interface__hyperpolarising_activated_current_y_gate__y)); // 'per millisecond'
        const double d_dt_chaste_interface__time_dependent_potassium_current_x_gate__x = 0.001 * ((_lt_0_row[14] * (1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x)) - (_lt_0_row[15] * var_chaste_interface__time_dependent_potassium_current_x_gate__x)); // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = 0.001 * ((_lt_0_row[16] * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s)) - (_lt_0_row[17] * var_chaste_interface__transient_outward_current_s_gate__s)); // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = 0.001 * ((_lt_0_row[18] * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m)) - (_lt_0_row[19] * var_chaste_interface__fast_sodium_current_m_gate__m)); // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = 0.001 * ((_lt_0_row[20] * (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h)) - (_lt_0_row[21] * var_chaste_interface__fast_sodium_current_h_gate__h)); // 'per millisecond'
        const double d_dt_chaste_interface__second_inward_current_d_gate__d = 0.001 * ((_lt_0_row[22] * (1.0 - var_chaste_interface__second_inward_current_d_gate__d)) - (_lt_0_row[23] * var_chaste_interface__second_inward_current_d_gate__d)); // 'per millisecond'
        const double d_dt_chaste_interface__second_inward_current_f_gate__f = 0.001 * ((_lt_0_row[24] * (1.0 - var_chaste_interface__second_inward_current_f_gate__f)) - (_lt_0_row[25] * var_chaste_interface__second_inward_current_f_gate__f)); // 'per millisecond'
        const double d_dt_chaste_interface__second_inward_current_f2_gate__f2 = 0.001 * (5.0 - (var_chaste_interface__second_inward_current_f2_gate__f2 * (5.0 + ((var_chaste_interface__intracellular_calcium_concentration__Cai * 5.0) * 1000.0)))); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_sodium_concentration__Nai = 0.001 * (( -1.0 * (var_fast_sodium_current__i_Na + var_sodium_background_current__i_Na_b + var_hyperpolarising_activated_current__i_fNa + var_second_inward_current__i_siNa + (var_sodium_potassium_pump__i_p * 3.0) + ((var_Na_Ca_exchanger__i_NaCa * 3.0) * 1.0))) * 0.00073312203858270474); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Cai = 0.001 * (( -1.0 * ((((var_second_inward_current__i_siCa + var_calcium_background_current__i_Ca_b) - ((2.0 * var_Na_Ca_exchanger__i_NaCa) * 1.0)) - var_intracellular_calcium_concentration__i_rel) + var_intracellular_calcium_concentration__i_up)) * 0.00036656101929135237); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up = 0.001 * ((1.0 * (var_intracellular_calcium_concentration__i_up - var_intracellular_calcium_concentration__i_tr)) * 0.0073312203858270459); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel = 0.001 * ((1.0 * (var_intracellular_calcium_concentration__i_tr - var_intracellular_calcium_concentration__i_rel)) * 0.018328050964567619); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__p = 0.001 * ((_lt_0_row[26] * (1.0 - var_chaste_interface__intracellular_calcium_concentration__p)) - (_lt_0_row[27] * var_chaste_interface__intracellular_calcium_concentration__p)); // 'per millisecond'
        const double d_dt_chaste_interface__extracellular_potassium_concentration__Kc = 0.001 * (( -0.69999999999999996 * (var_chaste_interface__extracellular_potassium_concentration__Kc - 4.0)) + ((1.0 * var_extracellular_potassium_concentration__i_mK) * 0.0066014449993861057)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_potassium_concentration__Ki = 0.001 * (( -1.0 * var_extracellular_potassium_concentration__i_mK) * 0.00073312203858270474); // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__C = 0.074999999999999997; // microF
            const double var_chaste_interface__membrane__i_pulse = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            const double var_hyperpolarising_activated_current__i_f = var_hyperpolarising_activated_current__i_fNa + var_hyperpolarising_activated_current__i_fK; // nanoA
            const double var_second_inward_current__i_si = var_second_inward_current__i_siCa + var_second_inward_current__i_siK + var_second_inward_current__i_siNa; // nanoA
            d_dt_chaste_interface__membrane__V = 0.001 * ((-(var_hyperpolarising_activated_current__i_f + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_sodium_background_current__i_Na_b + var_calcium_background_current__i_Ca_b + var_sodium_potassium_pump__i_p + var_Na_Ca_exchanger__i_NaCa + var_fast_sodium_current__i_Na + var_second_inward_current__i_si + (1000.0 * ((var_chaste_interface__membrane__i_pulse * var_membrane__C) / HeartConfig::Instance()->GetCapacitance())))) / var_membrane__C); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rDY[1] = d_dt_chaste_interface__hyperpolarising_activated_current_y_gate__y;
        rDY[2] = d_dt_chaste_interface__time_dependent_potassium_current_x_gate__x;
        rDY[3] = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        rDY[4] = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        rDY[5] = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        rDY[6] = d_dt_chaste_interface__second_inward_current_d_gate__d;
        rDY[7] = d_dt_chaste_interface__second_inward_current_f_gate__f;
        rDY[8] = d_dt_chaste_interface__second_inward_current_f2_gate__f2;
        rDY[9] = d_dt_chaste_interface__intracellular_sodium_concentration__Nai;
        rDY[10] = d_dt_chaste_interface__intracellular_calcium_concentration__Cai;
        rDY[11] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up;
        rDY[12] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        rDY[13] = d_dt_chaste_interface__intracellular_calcium_concentration__p;
        rDY[14] = d_dt_chaste_interface__extracellular_potassium_concentration__Kc;
        rDY[15] = d_dt_chaste_interface__intracellular_potassium_concentration__Ki;
    }
    
template<>
void OdeSystemInformation<CellDiFrancescoNoble1985FromCellMLOpt>::Initialise(void)
{
    this->mSystemName = "difrancesco_noble_model_1985";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-87);

    this->mVariableNames.push_back("hyperpolarising_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2);

    this->mVariableNames.push_back("time_dependent_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01);

    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01);

    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8);

    this->mVariableNames.push_back("second_inward_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.005);

    this->mVariableNames.push_back("second_inward_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("second_inward_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("intracellular_sodium_concentration__Nai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Cai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5e-5);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("intracellular_calcium_concentration__p");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("extracellular_potassium_concentration__Kc");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4);

    this->mVariableNames.push_back("intracellular_potassium_concentration__Ki");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellDiFrancescoNoble1985FromCellMLOpt)
