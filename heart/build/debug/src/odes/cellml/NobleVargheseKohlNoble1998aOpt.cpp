//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: noble_varghese_kohl_noble_1998_basic
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Thu May  5 09:15:17 2016
//! 
//! <autogenerated>

#include "NobleVargheseKohlNoble1998aOpt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<36; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
#define COVERAGE_IGNORE
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
#define COVERAGE_IGNORE
            _oob_0 = true;
#undef COVERAGE_IGNORE
        }
        return _oob_0;
    }
#undef COVERAGE_IGNORE

    ~CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables(const CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables&);
    CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables& operator= (const CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables&);
    CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 36;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][36];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 1.0 + exp((var_chaste_interface__membrane__V + 9.0) * 0.044642857142857144);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 0.0040000000000000001 / (1.0 + exp((-(var_chaste_interface__membrane__V + 52.0)) * 0.125));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 2.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 4.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 140.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 2.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = 4.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = 1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = 140.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = exp((var_chaste_interface__membrane__V * 48242.670749999997) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = exp((var_chaste_interface__membrane__V *  -48242.670749999997) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = exp((var_chaste_interface__membrane__V * 48242.670749999997) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = exp((var_chaste_interface__membrane__V *  -48242.670749999997) * 3.8797490106562429e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = 50.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 5.0)) * 0.1111111111111111));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 0.050000000000000003 * exp((-(var_chaste_interface__membrane__V - 20.0)) * 0.066666666666666666);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 50.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 5.0)) * 0.1111111111111111));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = 0.40000000000000002 * exp(-pow((var_chaste_interface__membrane__V + 30.0) * 0.033333333333333333, 3.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 14.0 / (1.0 + exp((-(var_chaste_interface__membrane__V - 40.0)) * 0.1111111111111111));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = 1.0 * exp((-var_chaste_interface__membrane__V) * 0.022222222222222223);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = (fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * (var_chaste_interface__membrane__V + 41.0)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 41.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 8000.0 * exp( -0.056000000000000001 * (var_chaste_interface__membrane__V + 66.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = 20.0 * exp( -0.125 * ((var_chaste_interface__membrane__V + 75.0) - 0.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = 2000.0 / (1.0 + (320.0 * exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V + 75.0) - 0.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] = (fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((30.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (1.0 - exp((-((var_chaste_interface__membrane__V + 24.0) - 5.0)) * 0.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = (fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((12.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (exp(((var_chaste_interface__membrane__V + 24.0) - 5.0) * 0.10000000000000001) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] = (fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 25.0 : ((6.25 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = 12.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] = 0.033000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.058823529411764705);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = 33.0 / (1.0 + exp( -0.125 * (var_chaste_interface__membrane__V + 10.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__V + 4.0)) * 0.20000000000000001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] = 0.0 * exp(0.080000000000000002 * (var_chaste_interface__membrane__V - 40.0));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[36];
    
    // Lookup tables
    double (*_lookup_table_0)[36];
    
};

std::auto_ptr<CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables> CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> CellNobleVargheseKohlNoble1998aFromCellMLOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__membrane__stim_amplitude = 0.001 * (( -3.0 / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    CellNobleVargheseKohlNoble1998aFromCellMLOpt::CellNobleVargheseKohlNoble1998aFromCellMLOpt(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellNobleVargheseKohlNoble1998aFromCellMLOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    CellNobleVargheseKohlNoble1998aFromCellMLOpt::~CellNobleVargheseKohlNoble1998aFromCellMLOpt()
    {
    }
    
    AbstractLookupTableCollection* CellNobleVargheseKohlNoble1998aFromCellMLOpt::GetLookupTableCollection()
    {
        return CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::Instance();
    }
    
    double CellNobleVargheseKohlNoble1998aFromCellMLOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = rY[8];
        // Units: dimensionless; Initial value: 0.9349197
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = rY[9];
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[14];
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[15];
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[16];
        // Units: millimolar; Initial value: 1.4e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = rY[17];
        // Units: millimolar; Initial value: 1.88e-5
        
        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.14285714285714285 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 120606.67687499999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = ((((0.0020999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + (0.0012999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)) * 1.0) / _lt_0_row[0]) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = 0.0025999999999999999 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(8.1999999999999993 / (var_chaste_interface__intracellular_potassium_concentration__K_i + (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i))))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[4]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[5]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 19.297068299999999) * 3.8797490106562429e-07) / _lt_0_row[10]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[11]); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_persistent_sodium_current__i_p_Na = _lt_0_row[1] * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[6]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[7]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 96.485341500000004) * 3.8797490106562429e-07) / _lt_0_row[12]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[13]); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (((_lt_0_row[14] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[15] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * 0.00049950000000000005) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (((_lt_0_row[16] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[17] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) * 4.9999999999999998e-07) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[2]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[3]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 38594.136599999998) * 3.8797490106562429e-07) / _lt_0_row[8]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[9]); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_persistent_sodium_current__i_p_Na + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds + var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_calcium_background_current__i_b_Ca) / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellNobleVargheseKohlNoble1998aFromCellMLOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = rY[1];
        // Units: dimensionless; Initial value: 1.03e-5
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = rY[2];
        // Units: dimensionless; Initial value: 2e-7
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = rY[3];
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[6];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[7];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = rY[8];
        // Units: dimensionless; Initial value: 0.9349197
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = rY[9];
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[10];
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[11];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__calcium_release__ActFrac = rY[12];
        // Units: dimensionless; Initial value: 0.0042614
        double var_chaste_interface__calcium_release__ProdFrac = rY[13];
        // Units: dimensionless; Initial value: 0.4068154
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[14];
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[15];
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[16];
        // Units: millimolar; Initial value: 1.4e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = rY[17];
        // Units: millimolar; Initial value: 1.88e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[18];
        // Units: millimolar; Initial value: 0.4531889
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[19];
        // Units: millimolar; Initial value: 0.4481927
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rY[20];
        // Units: millimolar; Initial value: 0.0005555
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rY[21];
        // Units: millimolar; Initial value: 0.0003542
        
        
        // Lookup table indexing
        const bool _oob_0 = CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellNobleVargheseKohlNoble1998aFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.14285714285714285 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 120606.67687499999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = ((((0.0020999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + (0.0012999999999999999 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)) * 1.0) / _lt_0_row[0]) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = 0.0025999999999999999 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(8.1999999999999993 / (var_chaste_interface__intracellular_potassium_concentration__K_i + (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i))))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[4]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[5]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 19.297068299999999) * 3.8797490106562429e-07) / _lt_0_row[10]) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - _lt_0_row[11]); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_persistent_sodium_current__i_p_Na = _lt_0_row[1] * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[6]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[7]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 96.485341500000004) * 3.8797490106562429e-07) / _lt_0_row[12]) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - _lt_0_row[13]); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (((_lt_0_row[14] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[15] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * 0.00049950000000000005) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (((_lt_0_row[16] * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (_lt_0_row[17] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) * 4.9999999999999998e-07) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * (var_chaste_interface__membrane__V - 50.0) * 0.0) * 3.8797490106562429e-07) / _lt_0_row[2]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[3]); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * (var_chaste_interface__membrane__V - 50.0) * 38594.136599999998) * 3.8797490106562429e-07) / _lt_0_row[8]) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - _lt_0_row[9]); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_sarcoplasmic_reticulum_calcium_pump__K_2 = var_chaste_interface__intracellular_calcium_concentration__Ca_i + (var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00023999999999999998) + 0.00041999999999999996; // millimolar
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = ((var_chaste_interface__intracellular_calcium_concentration__Ca_i / var_sarcoplasmic_reticulum_calcium_pump__K_2) * 0.40000000000000002) - (((var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00023999999999999998) / var_sarcoplasmic_reticulum_calcium_pump__K_2) * 0.029999999999999999); // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * (var_chaste_interface__intracellular_calcium_concentration__Ca_up - var_chaste_interface__intracellular_calcium_concentration__Ca_rel); // millimolar_per_second
        const double var_calcium_release__i_rel = ((pow(var_chaste_interface__calcium_release__ActFrac / (var_chaste_interface__calcium_release__ActFrac + 0.25), 2.0) * 250.0) + 0.050000000000000003) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_release__CaiReg = var_chaste_interface__intracellular_calcium_concentration__Ca_i / (var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.00050000000000000001); // dimensionless
        const double var_calcium_release__RegBindSite = var_calcium_release__CaiReg + ((1.0 - var_calcium_release__CaiReg) * (var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (var_chaste_interface__intracellular_calcium_concentration__Ca_ds + 0.01))); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + (500.0 * pow(var_calcium_release__RegBindSite, 2.0)); // per_second
        const double var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop)) - (200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop); // 'millimole per litre per second'
        const double var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod)) - (50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod); // 'millimole per litre per second'
        const double d_dt_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = 0.001 * ((_lt_0_row[18] * (1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1)) - (_lt_0_row[19] * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1)); // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = 0.001 * ((_lt_0_row[20] * (1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)) - (_lt_0_row[21] * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2)); // 'per millisecond'
        const double d_dt_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = 0.001 * ((_lt_0_row[22] * (1.0 - var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs)) - (_lt_0_row[23] * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs)); // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = 0.001 * ((_lt_0_row[24] * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m)) - (_lt_0_row[25] * var_chaste_interface__fast_sodium_current_m_gate__m)); // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = 0.001 * ((_lt_0_row[26] * (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h)) - (_lt_0_row[27] * var_chaste_interface__fast_sodium_current_h_gate__h)); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d = 0.001 * (3.0 * ((_lt_0_row[28] * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d)) - (_lt_0_row[29] * var_chaste_interface__L_type_Ca_channel_d_gate__d))); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f = 0.001 * (0.29999999999999999 * ((_lt_0_row[30] * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f)) - (_lt_0_row[31] * var_chaste_interface__L_type_Ca_channel_f_gate__f))); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f2_gate__f2 = 0.001 * (1.0 - (1.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i / (100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) + var_chaste_interface__L_type_Ca_channel_f2_gate__f2))); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = 0.001 * (20.0 * (1.0 - ((var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds)) + var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds))); // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = 0.001 * ((_lt_0_row[32] * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s)) - (_lt_0_row[33] * var_chaste_interface__transient_outward_current_s_gate__s)); // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_r_gate__r = 0.001 * (333.0 * (_lt_0_row[34] - var_chaste_interface__transient_outward_current_r_gate__r)); // 'per millisecond'
        const double d_dt_chaste_interface__calcium_release__ActFrac = 0.001 * ((((1.0 - var_chaste_interface__calcium_release__ActFrac) - var_chaste_interface__calcium_release__ProdFrac) * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * (_lt_0_row[35] + (500.0 * pow(var_calcium_release__RegBindSite, 2.0)))) - (var_chaste_interface__calcium_release__ActFrac * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * var_calcium_release__InactRate)); // 'per millisecond'
        const double d_dt_chaste_interface__calcium_release__ProdFrac = 0.001 * ((var_chaste_interface__calcium_release__ActFrac * ((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * var_calcium_release__InactRate) - (((var_chaste_interface__membrane__V <  -50.0) ? 5.0 : 1.0) * 1.0 * var_chaste_interface__calcium_release__ProdFrac)); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_sodium_concentration__Na_i = 0.001 * ( -0.63182746016849234 * (var_fast_sodium_current__i_Na + var_persistent_sodium_current__i_p_Na + var_sodium_background_current__i_b_Na + (3.0 * var_sodium_potassium_pump__i_NaK) + (3.0 * var_sodium_calcium_exchanger__i_NaCa_cyt) + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_potassium_concentration__K_i = 0.001 * ( -0.63182746016849234 * ((var_time_independent_potassium_current__i_K1 + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_transient_outward_current__i_to) - (2.0 * var_sodium_potassium_pump__i_NaK))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i = 0.001 * ((((( -0.31591373008424617 * (((var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_calcium_background_current__i_b_Ca) - (2.0 * var_sodium_calcium_exchanger__i_NaCa_cyt)) - (2.0 * var_sodium_calcium_exchanger__i_NaCa_ds))) + (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 1.0) + ((var_calcium_release__i_rel * 0.10000000000000001) * 2.0408163265306123)) - var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time) - var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time) - var_sarcoplasmic_reticulum_calcium_pump__i_up); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_ds = 0.001 * ((( -1.0 * var_L_type_Ca_channel__i_Ca_L_Ca_ds) * 3.159137300842461) - (var_chaste_interface__intracellular_calcium_concentration__Ca_ds * 10.0)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up = 0.001 * ((49.0 * var_sarcoplasmic_reticulum_calcium_pump__i_up) - var_calcium_translocation__i_trans); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel = 0.001 * ((0.099999999999999992 * var_calcium_translocation__i_trans) - var_calcium_release__i_rel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__Cm = 9.5000000000000005e-05; // microF
            const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            d_dt_chaste_interface__membrane__V = 0.001 * (( -1.0 / var_membrane__Cm) * ((1000.0 * ((var_chaste_interface__membrane__i_Stim * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance())) + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_persistent_sodium_current__i_p_Na + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds + var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_calcium_background_current__i_b_Ca)); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rDY[1] = d_dt_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1;
        rDY[2] = d_dt_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2;
        rDY[3] = d_dt_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs;
        rDY[4] = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        rDY[5] = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        rDY[6] = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d;
        rDY[7] = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f;
        rDY[8] = d_dt_chaste_interface__L_type_Ca_channel_f2_gate__f2;
        rDY[9] = d_dt_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds;
        rDY[10] = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        rDY[11] = d_dt_chaste_interface__transient_outward_current_r_gate__r;
        rDY[12] = d_dt_chaste_interface__calcium_release__ActFrac;
        rDY[13] = d_dt_chaste_interface__calcium_release__ProdFrac;
        rDY[14] = d_dt_chaste_interface__intracellular_sodium_concentration__Na_i;
        rDY[15] = d_dt_chaste_interface__intracellular_potassium_concentration__K_i;
        rDY[16] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i;
        rDY[17] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        rDY[18] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up;
        rDY[19] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        rDY[20] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
        rDY[21] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
    }
    
template<>
void OdeSystemInformation<CellNobleVargheseKohlNoble1998aFromCellMLOpt>::Initialise(void)
{
    this->mSystemName = "noble_varghese_kohl_noble_1998_basic";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-92.849333);

    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr1_gate__xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.03e-5);

    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr2_gate__xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2e-7);

    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001302);

    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0016203);

    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9944036);

    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("L_type_Ca_channel_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9349197);

    this->mVariableNames.push_back("L_type_Ca_channel_f2ds_gate__f2ds");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9651958);

    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9948645);

    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0042614);

    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4068154);

    this->mVariableNames.push_back("intracellular_sodium_concentration__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.3321223);

    this->mVariableNames.push_back("intracellular_potassium_concentration__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.5644281);

    this->mVariableNames.push_back("intracellular_calcium_concentration_Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.4e-5);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_ds");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.88e-5);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.4531889);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.4481927);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0005555);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003542);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellNobleVargheseKohlNoble1998aFromCellMLOpt)
