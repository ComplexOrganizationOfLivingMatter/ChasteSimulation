//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: Maleckar2008
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Thu May  5 09:11:52 2016
//! 
//! <autogenerated>

#include "Maleckar2008Opt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellMaleckar2008FromCellMLOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellMaleckar2008FromCellMLOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellMaleckar2008FromCellMLOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<28; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellMaleckar2008FromCellMLOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
#define COVERAGE_IGNORE
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
#define COVERAGE_IGNORE
            _oob_0 = true;
#undef COVERAGE_IGNORE
        }
        return _oob_0;
    }
#undef COVERAGE_IGNORE

    ~CellMaleckar2008FromCellMLOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellMaleckar2008FromCellMLOpt_LookupTables(const CellMaleckar2008FromCellMLOpt_LookupTables&);
    CellMaleckar2008FromCellMLOpt_LookupTables& operator= (const CellMaleckar2008FromCellMLOpt_LookupTables&);
    CellMaleckar2008FromCellMLOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 28;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellMaleckar2008FromCellMLOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][28];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = exp((var_chaste_interface__membrane__V * 96487.0) * 3.9287619594951718e-07) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 55.0) * 0.041666666666666664));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = exp((var_chaste_interface__membrane__V * 43419.150000000001) * 3.9287619594951718e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = exp((var_chaste_interface__membrane__V *  -53067.850000000006) * 3.9287619594951718e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 0.051700000000000003 + (0.4516 / (1.0 + exp((var_chaste_interface__membrane__V + 59.530000000000001) * 0.058207217694994179)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 27.120000000000001) *  -0.12180267965895249));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = (4.1999999999999998e-05 * exp((-((var_chaste_interface__membrane__V + 25.57) * 0.034722222222222224)) * ((var_chaste_interface__membrane__V + 25.57) * 0.034722222222222224))) + 2.4000000000000001e-05;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 63.600000000000001) * 0.18867924528301888));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = (0.029999999999999999 * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 35.100000000000001) * 0.3125)))) + 0.00029999999999999997;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 63.600000000000001) * 0.18867924528301888));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = (0.12 * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 35.100000000000001) * 0.3125)))) + 0.0030000000000000001;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 9.0) *  -0.17241379310344829));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = (0.0027000000000000001 * exp((-((var_chaste_interface__membrane__V + 35.0) * 0.033333333333333333)) * ((var_chaste_interface__membrane__V + 35.0) * 0.033333333333333333))) + 0.002;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 27.399999999999999) * 0.14084507042253522));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = (0.161 * exp((((-(var_chaste_interface__membrane__V + 40.0)) * (var_chaste_interface__membrane__V + 40.0)) * 0.069444444444444448) * 0.069444444444444448)) + 0.01;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 27.399999999999999) * 0.14084507042253522));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = (1.3323 * exp((((-(var_chaste_interface__membrane__V + 40.0)) * (var_chaste_interface__membrane__V + 40.0)) * 0.070422535211267609) * 0.070422535211267609)) + 0.062600000000000003;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 1.0) *  -0.090909090909090912));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = (0.0035000000000000001 * exp((((-var_chaste_interface__membrane__V) * var_chaste_interface__membrane__V) * 0.033333333333333333) * 0.033333333333333333)) + 0.0015;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 40.5) * 0.086956521739130432));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = (0.025635000000000002 * exp((-((var_chaste_interface__membrane__V + 52.450000000000003) * 0.062961587135688515)) * ((var_chaste_interface__membrane__V + 52.450000000000003) * 0.062961587135688515))) + 0.01414;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__V + 6.0)) * 0.11627906976744186));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = (0.0089999999999999993 / (1.0 + exp((var_chaste_interface__membrane__V + 5.0) * 0.083333333333333329))) + 0.00050000000000000001;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 7.5) * 0.10000000000000001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = (0.58999999999999997 / (1.0 + exp((var_chaste_interface__membrane__V + 60.0) * 0.10000000000000001))) + 3.0499999999999998;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 19.899999999999999) *  -0.07874015748031496));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = 0.69999999999999996 + (0.40000000000000002 * exp((-((var_chaste_interface__membrane__V - 20.0) * 0.050000000000000003)) * ((var_chaste_interface__membrane__V - 20.0) * 0.050000000000000003)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = 0.031179999999999999 + (0.21718000000000001 * exp((-((var_chaste_interface__membrane__V + 20.137599999999999) * 0.045045856682102377)) * ((var_chaste_interface__membrane__V + 20.137599999999999) * 0.045045856682102377)));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<CellMaleckar2008FromCellMLOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[28];
    
    // Lookup tables
    double (*_lookup_table_0)[28];
    
};

std::auto_ptr<CellMaleckar2008FromCellMLOpt_LookupTables> CellMaleckar2008FromCellMLOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> CellMaleckar2008FromCellMLOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm = 0.050000000000000003; // nanoF
        const double var_chaste_interface__membrane__stim_offset = 100.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 6.0; // millisecond
        const double var_chaste_interface__membrane__stim_amplitude = 0.001 * (( -310.0 / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    CellMaleckar2008FromCellMLOpt::CellMaleckar2008FromCellMLOpt(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                30,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellMaleckar2008FromCellMLOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        this->mParameters[0] = 0; // (c,delayed_rectifier_K_currents_pa_gate__AZD) [dimensionless]
        this->mParameters[1] = 1e-24; // (c,ACh_dependent_K_current__ACh) [millimolar]
        this->mParameters[2] = 1.0; // (c,L_type_Ca_channel__ScaleFactorGCaL) [dimensionless]
        this->mParameters[3] = 1.0; // (c,inward_rectifier__ScaleFactorGK1) [dimensionless]
        this->mParameters[4] = 1.0; // (c,ultra_rapid_K_current__ScaleFactorGKur) [dimensionless]
        this->mParameters[5] = 1.0; // (c,Na_Ca_ion_exchanger_current__ScaleFactorGNaCa) [dimensionless]
        this->mParameters[6] = 1.0; // (c,sodium_potassium_pump__ScaleFactorGNaK) [dimensionless]
        this->mParameters[7] = 1.0; // (c,delayed_rectifier_K_currents__ScaleFactorGkr) [dimensionless]
        this->mParameters[8] = 1.0; // (c,delayed_rectifier_K_currents__ScaleFactorGks) [dimensionless]
        this->mParameters[9] = 1.0; // (c,sodium_current__ScaleFactorGna) [dimensionless]
        this->mParameters[10] = 1.0; // (c,Ca_independent_transient_outward_K_current__ScaleFactorIto) [dimensionless]
    }
    
    CellMaleckar2008FromCellMLOpt::~CellMaleckar2008FromCellMLOpt()
    {
    }
    
    AbstractLookupTableCollection* CellMaleckar2008FromCellMLOpt::GetLookupTableCollection()
    {
        return CellMaleckar2008FromCellMLOpt_LookupTables::Instance();
    }
    
    double CellMaleckar2008FromCellMLOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -73.941851
        double var_chaste_interface__sodium_current_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.003325
        double var_chaste_interface__sodium_current_h1_gate__h1 = rY[2];
        // Units: dimensionless; Initial value: 0.875262
        double var_chaste_interface__sodium_current_h2_gate__h2 = rY[3];
        // Units: dimensionless; Initial value: 0.870692
        double var_chaste_interface__L_type_Ca_channel_d_L_gate__d_L = rY[4];
        // Units: dimensionless; Initial value: 0.000014
        double var_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1 = rY[5];
        // Units: dimensionless; Initial value: 0.998578
        double var_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2 = rY[6];
        // Units: dimensionless; Initial value: 0.998561
        double var_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 0.001098
        double var_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s = rY[8];
        // Units: dimensionless; Initial value: 0.948202
        double var_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur = rY[9];
        // Units: dimensionless; Initial value: 0.000371
        double var_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur = rY[10];
        // Units: dimensionless; Initial value: 0.966869
        double var_chaste_interface__delayed_rectifier_K_currents_n_gate__n = rY[11];
        // Units: dimensionless; Initial value: 0.004661
        double var_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa = rY[12];
        // Units: dimensionless; Initial value: 0.000054
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[13];
        // Units: millimolar; Initial value: 8.488527
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = rY[14];
        // Units: millimolar; Initial value: 6.5e-5
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[15];
        // Units: millimolar; Initial value: 129.502075
        double var_chaste_interface__intracellular_ion_concentrations__Ca_d = rY[16];
        // Units: millimolar; Initial value: 7.1e-5
        double var_chaste_interface__cleft_space_ion_concentrations__Na_c = rY[22];
        // Units: millimolar; Initial value: 130.019282
        double var_chaste_interface__cleft_space_ion_concentrations__Ca_c = rY[23];
        // Units: millimolar; Initial value: 1.814418
        double var_chaste_interface__cleft_space_ion_concentrations__K_c = rY[24];
        // Units: millimolar; Initial value: 5.588239
        
        // Lookup table indexing
        const bool _oob_0 = CellMaleckar2008FromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellMaleckar2008FromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_membrane__Cm = 0.050000000000000003; // nanoF
        const double var_sodium_current__E_Na = 26.380041870925613 * log(var_chaste_interface__cleft_space_ion_concentrations__Na_c / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_sodium_current__i_Na = (((mParameters[9] * var_chaste_interface__sodium_current_m_gate__m * var_chaste_interface__sodium_current_m_gate__m * var_chaste_interface__sodium_current_m_gate__m * ((0.90000000000000002 * var_chaste_interface__sodium_current_h1_gate__h1) + (0.10000000000000001 * var_chaste_interface__sodium_current_h2_gate__h2)) * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__membrane__V * 16757534.1042) * 3.9287619594951718e-07) * (exp(((var_chaste_interface__membrane__V - var_sodium_current__E_Na) * 96487.0) * 3.9287619594951718e-07) - 1.0)) / _lt_0_row[0]; // picoA
        const double var_L_type_Ca_channel__f_Ca = var_chaste_interface__intracellular_ion_concentrations__Ca_d / (var_chaste_interface__intracellular_ion_concentrations__Ca_d + 0.025000000000000001); // dimensionless
        const double var_L_type_Ca_channel__i_Ca_L = mParameters[2] * 6.75 * var_chaste_interface__L_type_Ca_channel_d_L_gate__d_L * ((var_L_type_Ca_channel__f_Ca * var_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1) + ((1.0 - var_L_type_Ca_channel__f_Ca) * var_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2)) * (var_chaste_interface__membrane__V - 60.0); // picoA
        const double var_Ca_independent_transient_outward_K_current__E_K = 26.380041870925613 * log(var_chaste_interface__cleft_space_ion_concentrations__K_c / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_Ca_independent_transient_outward_K_current__i_t = mParameters[10] * 8.25 * var_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r * var_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_ultra_rapid_K_current__i_Kur = mParameters[4] * 2.25 * var_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur * var_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_inward_rectifier__i_K1 = (mParameters[3] * 3.1000000000000001 * pow(var_chaste_interface__cleft_space_ion_concentrations__K_c * 1.0, 0.44569999999999999) * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K) + 3.6000000000000001) * 144730.5) * 3.9287619594951718e-07)); // picoA
        const double var_delayed_rectifier_K_currents__i_Kr = mParameters[7] * 0.5 * ((1.0 - (1.0 / (1.0 + exp((-(mParameters[0] - 0.59999999999999998)) * 8.3333333333333339)))) * 1.0067451927917044) * var_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa * _lt_0_row[1] * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_delayed_rectifier_K_currents__i_Ks = mParameters[8] * 1.0 * var_chaste_interface__delayed_rectifier_K_currents_n_gate__n * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_background_currents__i_B_Na = 0.060599 * (var_chaste_interface__membrane__V - var_sodium_current__E_Na); // picoA
        const double var_background_currents__i_B_Ca = 0.078681000000000001 * (var_chaste_interface__membrane__V - (13.190020935462806 * log(var_chaste_interface__cleft_space_ion_concentrations__Ca_c / var_chaste_interface__intracellular_ion_concentrations__Ca_i))); // picoA
        const double var_sodium_potassium_pump__pow_Na_i_15 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 1.5); // millimolar15
        const double var_sodium_potassium_pump__i_NaK = (((((mParameters[6] * 68.549999999999997 * var_chaste_interface__cleft_space_ion_concentrations__K_c) / (var_chaste_interface__cleft_space_ion_concentrations__K_c + 1.0)) * var_sodium_potassium_pump__pow_Na_i_15) / (var_sodium_potassium_pump__pow_Na_i_15 + 36.482900000000001)) * (var_chaste_interface__membrane__V + 150.0)) / (var_chaste_interface__membrane__V + 200.0); // picoA
        const double var_sarcolemmal_calcium_pump_current__i_CaP = (4.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i) / (var_chaste_interface__intracellular_ion_concentrations__Ca_i + 0.00020000000000000001); // picoA
        const double var_Na_Ca_ion_exchanger_current__i_NaCa = mParameters[5] * ((0.037484200000000002 * ((var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__cleft_space_ion_concentrations__Ca_c * _lt_0_row[2]) - (var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__intracellular_ion_concentrations__Ca_i * _lt_0_row[3]))) / (1.0 + (0.00029999999999999997 * ((var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__intracellular_ion_concentrations__Ca_i) + (var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__cleft_space_ion_concentrations__Ca_c))))); // picoA
        const double var_ACh_dependent_K_current__i_KACh = (10000.0 / (1.0 + (9.1365200000000009 / pow(mParameters[1], 0.47781099999999999)))) * _lt_0_row[4] * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K) * var_membrane__Cm; // picoA
        const double var_chaste_interface__membrane__i_Stim = 0.0;
        const double var_membrane__I = var_sodium_current__i_Na + var_L_type_Ca_channel__i_Ca_L + var_Ca_independent_transient_outward_K_current__i_t + var_ultra_rapid_K_current__i_Kur + var_inward_rectifier__i_K1 + var_delayed_rectifier_K_currents__i_Kr + var_delayed_rectifier_K_currents__i_Ks + var_background_currents__i_B_Na + var_background_currents__i_B_Ca + var_sodium_potassium_pump__i_NaK + var_sarcolemmal_calcium_pump_current__i_CaP + var_Na_Ca_ion_exchanger_current__i_NaCa + var_ACh_dependent_K_current__i_KACh + (1000.0 * ((var_chaste_interface__membrane__i_Stim * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance())); // picoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_membrane__I) / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellMaleckar2008FromCellMLOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -73.941851
        double var_chaste_interface__sodium_current_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.003325
        double var_chaste_interface__sodium_current_h1_gate__h1 = rY[2];
        // Units: dimensionless; Initial value: 0.875262
        double var_chaste_interface__sodium_current_h2_gate__h2 = rY[3];
        // Units: dimensionless; Initial value: 0.870692
        double var_chaste_interface__L_type_Ca_channel_d_L_gate__d_L = rY[4];
        // Units: dimensionless; Initial value: 0.000014
        double var_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1 = rY[5];
        // Units: dimensionless; Initial value: 0.998578
        double var_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2 = rY[6];
        // Units: dimensionless; Initial value: 0.998561
        double var_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 0.001098
        double var_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s = rY[8];
        // Units: dimensionless; Initial value: 0.948202
        double var_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur = rY[9];
        // Units: dimensionless; Initial value: 0.000371
        double var_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur = rY[10];
        // Units: dimensionless; Initial value: 0.966869
        double var_chaste_interface__delayed_rectifier_K_currents_n_gate__n = rY[11];
        // Units: dimensionless; Initial value: 0.004661
        double var_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa = rY[12];
        // Units: dimensionless; Initial value: 0.000054
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[13];
        // Units: millimolar; Initial value: 8.488527
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = rY[14];
        // Units: millimolar; Initial value: 6.5e-5
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[15];
        // Units: millimolar; Initial value: 129.502075
        double var_chaste_interface__intracellular_ion_concentrations__Ca_d = rY[16];
        // Units: millimolar; Initial value: 7.1e-5
        double var_chaste_interface__intracellular_Ca_buffering__O_C = rY[17];
        // Units: dimensionless; Initial value: 0.026604
        double var_chaste_interface__intracellular_Ca_buffering__O_TC = rY[18];
        // Units: dimensionless; Initial value: 0.012843
        double var_chaste_interface__intracellular_Ca_buffering__O_TMgC = rY[19];
        // Units: dimensionless; Initial value: 0.190077
        double var_chaste_interface__intracellular_Ca_buffering__O_TMgMg = rY[20];
        // Units: dimensionless; Initial value: 0.714719
        double var_chaste_interface__cleft_space_ion_concentrations__Na_c = rY[22];
        // Units: millimolar; Initial value: 130.019282
        double var_chaste_interface__cleft_space_ion_concentrations__Ca_c = rY[23];
        // Units: millimolar; Initial value: 1.814418
        double var_chaste_interface__cleft_space_ion_concentrations__K_c = rY[24];
        // Units: millimolar; Initial value: 5.588239
        double var_chaste_interface__Ca_handling_by_the_SR__Ca_rel = rY[25];
        // Units: millimolar; Initial value: 0.630471
        double var_chaste_interface__Ca_handling_by_the_SR__Ca_up = rY[26];
        // Units: millimolar; Initial value: 0.646226
        double var_chaste_interface__Ca_handling_by_the_SR__O_Calse = rY[27];
        // Units: dimensionless; Initial value: 0.43071
        double var_chaste_interface__Ca_handling_by_the_SR__F1 = rY[28];
        // Units: dimensionless; Initial value: 0.45453
        double var_chaste_interface__Ca_handling_by_the_SR__F2 = rY[29];
        // Units: dimensionless; Initial value: 0.002665
        
        
        // Lookup table indexing
        const bool _oob_0 = CellMaleckar2008FromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellMaleckar2008FromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__Cm = 0.050000000000000003; // nanoF
        const double var_sodium_current__E_Na = 26.380041870925613 * log(var_chaste_interface__cleft_space_ion_concentrations__Na_c / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_sodium_current__i_Na = (((mParameters[9] * var_chaste_interface__sodium_current_m_gate__m * var_chaste_interface__sodium_current_m_gate__m * var_chaste_interface__sodium_current_m_gate__m * ((0.90000000000000002 * var_chaste_interface__sodium_current_h1_gate__h1) + (0.10000000000000001 * var_chaste_interface__sodium_current_h2_gate__h2)) * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__membrane__V * 16757534.1042) * 3.9287619594951718e-07) * (exp(((var_chaste_interface__membrane__V - var_sodium_current__E_Na) * 96487.0) * 3.9287619594951718e-07) - 1.0)) / _lt_0_row[0]; // picoA
        const double var_L_type_Ca_channel__f_Ca = var_chaste_interface__intracellular_ion_concentrations__Ca_d / (var_chaste_interface__intracellular_ion_concentrations__Ca_d + 0.025000000000000001); // dimensionless
        const double var_L_type_Ca_channel__i_Ca_L = mParameters[2] * 6.75 * var_chaste_interface__L_type_Ca_channel_d_L_gate__d_L * ((var_L_type_Ca_channel__f_Ca * var_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1) + ((1.0 - var_L_type_Ca_channel__f_Ca) * var_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2)) * (var_chaste_interface__membrane__V - 60.0); // picoA
        const double var_Ca_independent_transient_outward_K_current__E_K = 26.380041870925613 * log(var_chaste_interface__cleft_space_ion_concentrations__K_c / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_Ca_independent_transient_outward_K_current__i_t = mParameters[10] * 8.25 * var_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r * var_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_ultra_rapid_K_current__i_Kur = mParameters[4] * 2.25 * var_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur * var_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_inward_rectifier__i_K1 = (mParameters[3] * 3.1000000000000001 * pow(var_chaste_interface__cleft_space_ion_concentrations__K_c * 1.0, 0.44569999999999999) * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K) + 3.6000000000000001) * 144730.5) * 3.9287619594951718e-07)); // picoA
        const double var_delayed_rectifier_K_currents__i_Kr = mParameters[7] * 0.5 * ((1.0 - (1.0 / (1.0 + exp((-(mParameters[0] - 0.59999999999999998)) * 8.3333333333333339)))) * 1.0067451927917044) * var_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa * _lt_0_row[1] * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_delayed_rectifier_K_currents__i_Ks = mParameters[8] * 1.0 * var_chaste_interface__delayed_rectifier_K_currents_n_gate__n * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K); // picoA
        const double var_background_currents__i_B_Na = 0.060599 * (var_chaste_interface__membrane__V - var_sodium_current__E_Na); // picoA
        const double var_background_currents__i_B_Ca = 0.078681000000000001 * (var_chaste_interface__membrane__V - (13.190020935462806 * log(var_chaste_interface__cleft_space_ion_concentrations__Ca_c / var_chaste_interface__intracellular_ion_concentrations__Ca_i))); // picoA
        const double var_sodium_potassium_pump__pow_Na_i_15 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 1.5); // millimolar15
        const double var_sodium_potassium_pump__i_NaK = (((((mParameters[6] * 68.549999999999997 * var_chaste_interface__cleft_space_ion_concentrations__K_c) / (var_chaste_interface__cleft_space_ion_concentrations__K_c + 1.0)) * var_sodium_potassium_pump__pow_Na_i_15) / (var_sodium_potassium_pump__pow_Na_i_15 + 36.482900000000001)) * (var_chaste_interface__membrane__V + 150.0)) / (var_chaste_interface__membrane__V + 200.0); // picoA
        const double var_sarcolemmal_calcium_pump_current__i_CaP = (4.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i) / (var_chaste_interface__intracellular_ion_concentrations__Ca_i + 0.00020000000000000001); // picoA
        const double var_Na_Ca_ion_exchanger_current__i_NaCa = mParameters[5] * ((0.037484200000000002 * ((var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__cleft_space_ion_concentrations__Ca_c * _lt_0_row[2]) - (var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__intracellular_ion_concentrations__Ca_i * _lt_0_row[3]))) / (1.0 + (0.00029999999999999997 * ((var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__cleft_space_ion_concentrations__Na_c * var_chaste_interface__intracellular_ion_concentrations__Ca_i) + (var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__intracellular_ion_concentrations__Na_i * var_chaste_interface__cleft_space_ion_concentrations__Ca_c))))); // picoA
        const double var_ACh_dependent_K_current__i_KACh = (10000.0 / (1.0 + (9.1365200000000009 / pow(mParameters[1], 0.47781099999999999)))) * _lt_0_row[4] * (var_chaste_interface__membrane__V - var_Ca_independent_transient_outward_K_current__E_K) * var_membrane__Cm; // picoA
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_intracellular_ion_concentrations__i_di = ((var_chaste_interface__intracellular_ion_concentrations__Ca_d - var_chaste_interface__intracellular_ion_concentrations__Ca_i) * 22.709180319999998) * 100.0; // picoA
        const double var_Ca_handling_by_the_SR__i_up = (2800.0 * ((var_chaste_interface__intracellular_ion_concentrations__Ca_i * 3333.3333333333335) - ((var_chaste_interface__Ca_handling_by_the_SR__Ca_up * 0.16000000000000003) * 2.0))) / (((var_chaste_interface__intracellular_ion_concentrations__Ca_i + 0.00029999999999999997) * 3333.3333333333335) + ((0.40000000000000002 * (var_chaste_interface__Ca_handling_by_the_SR__Ca_up + 0.5)) * 2.0)); // picoA
        const double var_Ca_handling_by_the_SR__i_rel_f2 = var_chaste_interface__Ca_handling_by_the_SR__F2 / (var_chaste_interface__Ca_handling_by_the_SR__F2 + 0.25); // dimensionless
        const double var_Ca_handling_by_the_SR__i_rel = 200000.0 * (var_Ca_handling_by_the_SR__i_rel_f2 * var_Ca_handling_by_the_SR__i_rel_f2) * (var_chaste_interface__Ca_handling_by_the_SR__Ca_rel - var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double var_intracellular_Ca_buffering__J_O_TMgC = (200000.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * ((1.0 - var_chaste_interface__intracellular_Ca_buffering__O_TMgC) - var_chaste_interface__intracellular_Ca_buffering__O_TMgMg)) - (6.5999999999999996 * var_chaste_interface__intracellular_Ca_buffering__O_TMgC); // per_second
        const double var_intracellular_Ca_buffering__J_O_TC = (78400.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * (1.0 - var_chaste_interface__intracellular_Ca_buffering__O_TC)) - (392.0 * var_chaste_interface__intracellular_Ca_buffering__O_TC); // per_second
        const double var_intracellular_Ca_buffering__J_O_C = (200000.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * (1.0 - var_chaste_interface__intracellular_Ca_buffering__O_C)) - (476.0 * var_chaste_interface__intracellular_Ca_buffering__O_C); // per_second
        const double var_intracellular_Ca_buffering__J_O = (0.080000000000000002 * var_intracellular_Ca_buffering__J_O_TC) + (0.16 * var_intracellular_Ca_buffering__J_O_TMgC) + (0.044999999999999998 * var_intracellular_Ca_buffering__J_O_C); // per_second
        const double var_Ca_handling_by_the_SR__i_tr = ((var_chaste_interface__Ca_handling_by_the_SR__Ca_up - var_chaste_interface__Ca_handling_by_the_SR__Ca_rel) * 8.5101534000000001) * 100.0; // picoA
        const double var_Ca_handling_by_the_SR__r_Ca_i_term = var_chaste_interface__intracellular_ion_concentrations__Ca_i / (var_chaste_interface__intracellular_ion_concentrations__Ca_i + 0.00029999999999999997); // dimensionless
        const double var_Ca_handling_by_the_SR__r_Ca_i_factor = var_Ca_handling_by_the_SR__r_Ca_i_term * var_Ca_handling_by_the_SR__r_Ca_i_term * var_Ca_handling_by_the_SR__r_Ca_i_term * var_Ca_handling_by_the_SR__r_Ca_i_term; // dimensionless
        const double var_Ca_handling_by_the_SR__r_Ca_d_term = var_chaste_interface__intracellular_ion_concentrations__Ca_d / (var_chaste_interface__intracellular_ion_concentrations__Ca_d + 0.0030000000000000001); // dimensionless
        const double var_Ca_handling_by_the_SR__r_act = 203.80000000000001 * (var_Ca_handling_by_the_SR__r_Ca_i_factor + (var_Ca_handling_by_the_SR__r_Ca_d_term * var_Ca_handling_by_the_SR__r_Ca_d_term * var_Ca_handling_by_the_SR__r_Ca_d_term * var_Ca_handling_by_the_SR__r_Ca_d_term)); // per_second
        const double var_Ca_handling_by_the_SR__J_O_Calse = (480.0 * var_chaste_interface__Ca_handling_by_the_SR__Ca_rel * (1.0 - var_chaste_interface__Ca_handling_by_the_SR__O_Calse)) - (400.0 * var_chaste_interface__Ca_handling_by_the_SR__O_Calse); // per_second
        const double d_dt_chaste_interface__sodium_current_m_gate__m = 0.001 * ((_lt_0_row[5] - var_chaste_interface__sodium_current_m_gate__m) / _lt_0_row[6]); // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h1_gate__h1 = 0.001 * ((_lt_0_row[7] - var_chaste_interface__sodium_current_h1_gate__h1) / _lt_0_row[8]); // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h2_gate__h2 = 0.001 * ((_lt_0_row[9] - var_chaste_interface__sodium_current_h2_gate__h2) / _lt_0_row[10]); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_L_gate__d_L = 0.001 * ((_lt_0_row[11] - var_chaste_interface__L_type_Ca_channel_d_L_gate__d_L) / _lt_0_row[12]); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1 = 0.001 * ((_lt_0_row[13] - var_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1) / _lt_0_row[14]); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2 = 0.001 * ((_lt_0_row[15] - var_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2) / _lt_0_row[16]); // 'per millisecond'
        const double d_dt_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r = 0.001 * ((_lt_0_row[17] - var_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r) / _lt_0_row[18]); // 'per millisecond'
        const double d_dt_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s = 0.001 * ((_lt_0_row[19] - var_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s) / _lt_0_row[20]); // 'per millisecond'
        const double d_dt_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur = 0.001 * ((_lt_0_row[21] - var_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur) / _lt_0_row[22]); // 'per millisecond'
        const double d_dt_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur = 0.001 * ((_lt_0_row[23] - var_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur) / _lt_0_row[24]); // 'per millisecond'
        const double d_dt_chaste_interface__delayed_rectifier_K_currents_n_gate__n = 0.001 * ((_lt_0_row[25] - var_chaste_interface__delayed_rectifier_K_currents_n_gate__n) / _lt_0_row[26]); // 'per millisecond'
        const double d_dt_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa = 0.001 * (((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 15.0 + (10.0 * mParameters[0])) *  -0.16666666666666666))) - var_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa) / _lt_0_row[27]); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Na_i = 0.001 * ((-(var_sodium_current__i_Na + var_background_currents__i_B_Na + (3.0 * var_Na_Ca_ion_exchanger_current__i_NaCa) + (3.0 * var_sodium_potassium_pump__i_NaK) + 0.0)) * 0.0017614021922566687); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Ca_i = 0.001 * (((-((var_background_currents__i_B_Ca + var_sarcolemmal_calcium_pump_current__i_CaP + var_Ca_handling_by_the_SR__i_up) - (var_intracellular_ion_concentrations__i_di + var_Ca_handling_by_the_SR__i_rel + (2.0 * var_Na_Ca_ion_exchanger_current__i_NaCa)))) * 0.00088070109612833436) - (1.0 * var_intracellular_Ca_buffering__J_O)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__K_i = 0.001 * ((-(((var_Ca_independent_transient_outward_K_current__i_t + var_ultra_rapid_K_current__i_Kur + var_inward_rectifier__i_K1 + var_delayed_rectifier_K_currents__i_Ks + var_delayed_rectifier_K_currents__i_Kr + var_ACh_dependent_K_current__i_KACh) - (2.0 * var_sodium_potassium_pump__i_NaK)) + (1000.0 * ((var_chaste_interface__membrane__i_Stim * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance())))) * 0.0017614021922566687); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Ca_d = 0.001 * ((-(var_L_type_Ca_channel__i_Ca_L + var_intracellular_ion_concentrations__i_di)) * 0.044035054806416722); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_Ca_buffering__O_C = 0.001 * var_intracellular_Ca_buffering__J_O_C; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_Ca_buffering__O_TC = 0.001 * var_intracellular_Ca_buffering__J_O_TC; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_Ca_buffering__O_TMgC = 0.001 * var_intracellular_Ca_buffering__J_O_TMgC; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_Ca_buffering__O_TMgMg = 0.001 * ((((1.0 - var_chaste_interface__intracellular_Ca_buffering__O_TMgC) - var_chaste_interface__intracellular_Ca_buffering__O_TMgMg) * 5000.0) - (666.0 * var_chaste_interface__intracellular_Ca_buffering__O_TMgMg)); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_Ca_buffering__O = 0.001 * var_intracellular_Ca_buffering__J_O; // 'per millisecond'
        const double d_dt_chaste_interface__cleft_space_ion_concentrations__Na_c = 0.001 * (((130.0 - var_chaste_interface__cleft_space_ion_concentrations__Na_c) * 0.069930069930069921) + ((var_sodium_current__i_Na + var_background_currents__i_B_Na + (3.0 * var_Na_Ca_ion_exchanger_current__i_NaCa) + (3.0 * var_sodium_potassium_pump__i_NaK) + 0.0) * 0.012951486707769624)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cleft_space_ion_concentrations__Ca_c = 0.001 * (((1.8 - var_chaste_interface__cleft_space_ion_concentrations__Ca_c) * 0.04048582995951417) + (((var_L_type_Ca_channel__i_Ca_L + var_background_currents__i_B_Ca + var_sarcolemmal_calcium_pump_current__i_CaP) - (2.0 * var_Na_Ca_ion_exchanger_current__i_NaCa)) * 0.006475743353884812)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cleft_space_ion_concentrations__K_c = 0.001 * (((5.4000000000000004 - var_chaste_interface__cleft_space_ion_concentrations__K_c) * 0.10000000000000001) + (((var_Ca_independent_transient_outward_K_current__i_t + var_ultra_rapid_K_current__i_Kur + var_inward_rectifier__i_K1 + var_delayed_rectifier_K_currents__i_Ks + var_delayed_rectifier_K_currents__i_Kr) - (2.0 * var_sodium_potassium_pump__i_NaK)) * 0.012951486707769624)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_handling_by_the_SR__Ca_rel = 0.001 * (((var_Ca_handling_by_the_SR__i_tr - var_Ca_handling_by_the_SR__i_rel) * 0.11750669500270113) - (31.0 * var_Ca_handling_by_the_SR__J_O_Calse)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_handling_by_the_SR__Ca_up = 0.001 * ((var_Ca_handling_by_the_SR__i_up - var_Ca_handling_by_the_SR__i_tr) * 0.013056299444744571); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_handling_by_the_SR__O_Calse = 0.001 * var_Ca_handling_by_the_SR__J_O_Calse; // 'per millisecond'
        const double d_dt_chaste_interface__Ca_handling_by_the_SR__F1 = 0.001 * ((0.81499999999999995 * ((1.0 - var_chaste_interface__Ca_handling_by_the_SR__F1) - var_chaste_interface__Ca_handling_by_the_SR__F2)) - (var_Ca_handling_by_the_SR__r_act * var_chaste_interface__Ca_handling_by_the_SR__F1)); // 'per millisecond'
        const double d_dt_chaste_interface__Ca_handling_by_the_SR__F2 = 0.001 * ((var_Ca_handling_by_the_SR__r_act * var_chaste_interface__Ca_handling_by_the_SR__F1) - ((33.960000000000001 + (339.60000000000002 * var_Ca_handling_by_the_SR__r_Ca_i_factor)) * var_chaste_interface__Ca_handling_by_the_SR__F2)); // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__I = var_sodium_current__i_Na + var_L_type_Ca_channel__i_Ca_L + var_Ca_independent_transient_outward_K_current__i_t + var_ultra_rapid_K_current__i_Kur + var_inward_rectifier__i_K1 + var_delayed_rectifier_K_currents__i_Kr + var_delayed_rectifier_K_currents__i_Ks + var_background_currents__i_B_Na + var_background_currents__i_B_Ca + var_sodium_potassium_pump__i_NaK + var_sarcolemmal_calcium_pump_current__i_CaP + var_Na_Ca_ion_exchanger_current__i_NaCa + var_ACh_dependent_K_current__i_KACh + (1000.0 * ((var_chaste_interface__membrane__i_Stim * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance())); // picoA
            d_dt_chaste_interface__membrane__V = 0.001 * ((-var_membrane__I) / var_membrane__Cm); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rDY[1] = d_dt_chaste_interface__sodium_current_m_gate__m;
        rDY[2] = d_dt_chaste_interface__sodium_current_h1_gate__h1;
        rDY[3] = d_dt_chaste_interface__sodium_current_h2_gate__h2;
        rDY[4] = d_dt_chaste_interface__L_type_Ca_channel_d_L_gate__d_L;
        rDY[5] = d_dt_chaste_interface__L_type_Ca_channel_f_L1_gate__f_L1;
        rDY[6] = d_dt_chaste_interface__L_type_Ca_channel_f_L2_gate__f_L2;
        rDY[7] = d_dt_chaste_interface__Ca_independent_transient_outward_K_current_r_gate__r;
        rDY[8] = d_dt_chaste_interface__Ca_independent_transient_outward_K_current_s_gate__s;
        rDY[9] = d_dt_chaste_interface__ultra_rapid_K_current_aur_gate__a_ur;
        rDY[10] = d_dt_chaste_interface__ultra_rapid_K_current_iur_gate__i_ur;
        rDY[11] = d_dt_chaste_interface__delayed_rectifier_K_currents_n_gate__n;
        rDY[12] = d_dt_chaste_interface__delayed_rectifier_K_currents_pa_gate__pa;
        rDY[13] = d_dt_chaste_interface__intracellular_ion_concentrations__Na_i;
        rDY[14] = d_dt_chaste_interface__intracellular_ion_concentrations__Ca_i;
        rDY[15] = d_dt_chaste_interface__intracellular_ion_concentrations__K_i;
        rDY[16] = d_dt_chaste_interface__intracellular_ion_concentrations__Ca_d;
        rDY[17] = d_dt_chaste_interface__intracellular_Ca_buffering__O_C;
        rDY[18] = d_dt_chaste_interface__intracellular_Ca_buffering__O_TC;
        rDY[19] = d_dt_chaste_interface__intracellular_Ca_buffering__O_TMgC;
        rDY[20] = d_dt_chaste_interface__intracellular_Ca_buffering__O_TMgMg;
        rDY[21] = d_dt_chaste_interface__intracellular_Ca_buffering__O;
        rDY[22] = d_dt_chaste_interface__cleft_space_ion_concentrations__Na_c;
        rDY[23] = d_dt_chaste_interface__cleft_space_ion_concentrations__Ca_c;
        rDY[24] = d_dt_chaste_interface__cleft_space_ion_concentrations__K_c;
        rDY[25] = d_dt_chaste_interface__Ca_handling_by_the_SR__Ca_rel;
        rDY[26] = d_dt_chaste_interface__Ca_handling_by_the_SR__Ca_up;
        rDY[27] = d_dt_chaste_interface__Ca_handling_by_the_SR__O_Calse;
        rDY[28] = d_dt_chaste_interface__Ca_handling_by_the_SR__F1;
        rDY[29] = d_dt_chaste_interface__Ca_handling_by_the_SR__F2;
    }
    
template<>
void OdeSystemInformation<CellMaleckar2008FromCellMLOpt>::Initialise(void)
{
    this->mSystemName = "Maleckar2008";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-73.941851);

    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003325);

    this->mVariableNames.push_back("sodium_current_h1_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.875262);

    this->mVariableNames.push_back("sodium_current_h2_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.870692);

    this->mVariableNames.push_back("L_type_Ca_channel_d_L_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000014);

    this->mVariableNames.push_back("L_type_Ca_channel_f_L1_gate__f_L1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998578);

    this->mVariableNames.push_back("L_type_Ca_channel_f_L2_gate__f_L2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998561);

    this->mVariableNames.push_back("Ca_independent_transient_outward_K_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001098);

    this->mVariableNames.push_back("Ca_independent_transient_outward_K_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.948202);

    this->mVariableNames.push_back("ultra_rapid_K_current_aur_gate__a_ur");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000371);

    this->mVariableNames.push_back("ultra_rapid_K_current_iur_gate__i_ur");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.966869);

    this->mVariableNames.push_back("delayed_rectifier_K_currents_n_gate__n");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004661);

    this->mVariableNames.push_back("delayed_rectifier_K_currents_pa_gate__pa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000054);

    this->mVariableNames.push_back("intracellular_ion_concentrations__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.488527);

    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.5e-5);

    this->mVariableNames.push_back("intracellular_ion_concentrations__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(129.502075);

    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_d");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.1e-5);

    this->mVariableNames.push_back("intracellular_Ca_buffering__O_C");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.026604);

    this->mVariableNames.push_back("intracellular_Ca_buffering__O_TC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.012843);

    this->mVariableNames.push_back("intracellular_Ca_buffering__O_TMgC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.190077);

    this->mVariableNames.push_back("intracellular_Ca_buffering__O_TMgMg");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.714719);

    this->mVariableNames.push_back("intracellular_Ca_buffering__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.38222);

    this->mVariableNames.push_back("cleft_space_ion_concentrations__Na_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(130.019282);

    this->mVariableNames.push_back("cleft_space_ion_concentrations__Ca_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.814418);

    this->mVariableNames.push_back("cleft_space_ion_concentrations__K_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.588239);

    this->mVariableNames.push_back("Ca_handling_by_the_SR__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.630471);

    this->mVariableNames.push_back("Ca_handling_by_the_SR__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.646226);

    this->mVariableNames.push_back("Ca_handling_by_the_SR__O_Calse");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.43071);

    this->mVariableNames.push_back("Ca_handling_by_the_SR__F1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.45453);

    this->mVariableNames.push_back("Ca_handling_by_the_SR__F2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002665);

    this->mParameterNames.push_back("ScaleFactorAZD");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorAch");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("ScaleFactorGCaL");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGK1");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGKur");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGNaCa");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGNaK");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGkr");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGks");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGna");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorIto");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellMaleckar2008FromCellMLOpt)
