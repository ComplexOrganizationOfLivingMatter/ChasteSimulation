#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: shannon_2004
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Wed May  4 17:40:28 2016
//! 
//! <autogenerated>

#include "Shannon2004Cvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> CellShannon2004FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_start = 100.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 5.0; // millisecond
        const double var_chaste_interface__cell__stim_amplitude = 9.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double CellShannon2004FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 26);
    }
    
    CellShannon2004FromCellMLCvode::CellShannon2004FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCellWithModifiers<AbstractCvodeCell >(
                pOdeSolver,
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellShannon2004FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        // These will get initialised to DummyModifiers in the base class method.
        this->AddModifier("JSR_calcium_concentration",
                          mp_JSR_calcium_concentration_modifier);
        this->AddModifier("SR_leak_current_max",
                          mp_SR_leak_current_max_modifier);
        this->AddModifier("SR_release_current",
                          mp_SR_release_current_modifier);
        this->AddModifier("SR_release_current_max",
                          mp_SR_release_current_max_modifier);
        this->AddModifier("SR_uptake_current_max",
                          mp_SR_uptake_current_max_modifier);
        this->AddModifier("cytosolic_calcium_concentration",
                          mp_cytosolic_calcium_concentration_modifier);
        this->AddModifier("cytosolic_potassium_concentration",
                          mp_cytosolic_potassium_concentration_modifier);
        this->AddModifier("cytosolic_sodium_concentration",
                          mp_cytosolic_sodium_concentration_modifier);
        this->AddModifier("extracellular_calcium_concentration",
                          mp_extracellular_calcium_concentration_modifier);
        this->AddModifier("extracellular_potassium_concentration",
                          mp_extracellular_potassium_concentration_modifier);
        this->AddModifier("extracellular_sodium_concentration",
                          mp_extracellular_sodium_concentration_modifier);
        this->AddModifier("membrane_L_type_calcium_current",
                          mp_membrane_L_type_calcium_current_modifier);
        this->AddModifier("membrane_L_type_calcium_current_conductance",
                          mp_membrane_L_type_calcium_current_conductance_modifier);
        this->AddModifier("membrane_L_type_calcium_current_d_gate",
                          mp_membrane_L_type_calcium_current_d_gate_modifier);
        this->AddModifier("membrane_L_type_calcium_current_fCa_gate",
                          mp_membrane_L_type_calcium_current_fCa_gate_modifier);
        this->AddModifier("membrane_L_type_calcium_current_f_gate",
                          mp_membrane_L_type_calcium_current_f_gate_modifier);
        this->AddModifier("membrane_L_type_calcium_current_f_gate_tau",
                          mp_membrane_L_type_calcium_current_f_gate_tau_modifier);
        this->AddModifier("membrane_fast_sodium_current",
                          mp_membrane_fast_sodium_current_modifier);
        this->AddModifier("membrane_fast_sodium_current_conductance",
                          mp_membrane_fast_sodium_current_conductance_modifier);
        this->AddModifier("membrane_fast_sodium_current_h_gate",
                          mp_membrane_fast_sodium_current_h_gate_modifier);
        this->AddModifier("membrane_fast_sodium_current_j_gate",
                          mp_membrane_fast_sodium_current_j_gate_modifier);
        this->AddModifier("membrane_fast_sodium_current_m_gate",
                          mp_membrane_fast_sodium_current_m_gate_modifier);
        this->AddModifier("membrane_inward_rectifier_potassium_current",
                          mp_membrane_inward_rectifier_potassium_current_modifier);
        this->AddModifier("membrane_rapid_delayed_rectifier_potassium_current",
                          mp_membrane_rapid_delayed_rectifier_potassium_current_modifier);
        this->AddModifier("membrane_rapid_delayed_rectifier_potassium_current_conductance",
                          mp_membrane_rapid_delayed_rectifier_potassium_current_conductance_modifier);
        this->AddModifier("membrane_slow_delayed_rectifier_potassium_current",
                          mp_membrane_slow_delayed_rectifier_potassium_current_modifier);
        this->AddModifier("membrane_slow_delayed_rectifier_potassium_current_conductance",
                          mp_membrane_slow_delayed_rectifier_potassium_current_conductance_modifier);
        this->AddModifier("membrane_sodium_calcium_exchanger_current",
                          mp_membrane_sodium_calcium_exchanger_current_modifier);
        this->AddModifier("membrane_sodium_calcium_exchanger_current_conductance",
                          mp_membrane_sodium_calcium_exchanger_current_conductance_modifier);
        this->AddModifier("membrane_transient_outward_current",
                          mp_membrane_transient_outward_current_modifier);
        this->AddModifier("membrane_transient_outward_current_conductance",
                          mp_membrane_transient_outward_current_conductance_modifier);
        this->AddModifier("membrane_voltage",
                          mp_membrane_voltage_modifier);
        NV_Ith_S(this->mParameters, 0) = 5.348e-6; // (c,Jleak_SR__KSRleak) [per_millisecond]
        NV_Ith_S(this->mParameters, 1) = 25; // (c,Jrel_SR__ks) [per_millisecond]
        NV_Ith_S(this->mParameters, 2) = 5.3114e-3; // (c,Jpump_SR__V_max) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 3) = 135; // (c,model_parameters__Ki) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 1.8; // (c,model_parameters__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 5.4; // (c,model_parameters__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 140; // (c,model_parameters__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 5.4e-4; // (c,ICaL__PCa) [litre_per_farad_millisecond]
        NV_Ith_S(this->mParameters, 8) = 16; // (c,INa__G_INa) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 0.03; // (c,IKr__G_IKr_const) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0.07; // (c,IKs__G_Ks_Max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 11) = 9; // (c,INaCa__V_max) [microA_per_microF]
        NV_Ith_S(this->mParameters, 12) = 0.06; // (c,Itos__G_tos) [milliS_per_microF]
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    CellShannon2004FromCellMLCvode::~CellShannon2004FromCellMLCvode()
    {
    }
    
    double CellShannon2004FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.737475e-4
        
        const double var_reversal_potentials__E_Na_jct = 26.71330258589418 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_buffer__Na_jct); // millivolt
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__i_Na_jct = 0.11 * NV_Ith_S(mParameters, 8) * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__E_Na_SL = 26.71330258589418 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_buffer__Na_SL); // millivolt
        const double var_INa__i_Na_SL = 0.89000000000000001 * NV_Ith_S(mParameters, 8) * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL); // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
        const double var_INab__i_Nab_jct = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct) * 3.2670000000000004e-05; // microA_per_microF
        const double var_INab__i_Nab_SL = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL) * 0.00026433000000000001; // microA_per_microF
        const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp((var_chaste_interface__cell__V *  -9648.5) * 3.8798292719927153e-07)) + (0.036499999999999998 * ((exp(NV_Ith_S(mParameters, 6) * 0.01485884101040119) - 1.0) * 0.14285714285714285) * exp(((-var_chaste_interface__cell__V) * 96485.0) * 3.8798292719927153e-07))); // dimensionless
        const double var_INaK__i_NaK_SL = (((var_INaK__f_NaK * 1.6973990999999999) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_SL, 4.0))) * NV_Ith_S(mParameters, 5)) / (NV_Ith_S(mParameters, 5) + 1.5); // microA_per_microF
        const double var_INaK__i_NaK_jct = (((var_INaK__f_NaK * 0.2097909) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_jct, 4.0))) * NV_Ith_S(mParameters, 5)) / (NV_Ith_S(mParameters, 5) + 1.5); // microA_per_microF
        const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
        const double var_reversal_potentials__E_K = 26.71330258589418 * log(NV_Ith_S(mParameters, 5) / NV_Ith_S(mParameters, 3)); // millivolt
        const double var_IKr__i_Kr = (NV_Ith_S(mParameters, 9) * sqrt(NV_Ith_S(mParameters, 5) * 0.18518518518518517)) * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((33.0 + var_chaste_interface__cell__V) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_IKs__E_Ks = 26.71330258589418 * log((NV_Ith_S(mParameters, 5) + (0.018329999999999999 * NV_Ith_S(mParameters, 6))) / (NV_Ith_S(mParameters, 3) + (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai))); // millivolt
        const double var_IKs__i_Ks = (0.11 * (NV_Ith_S(mParameters, 10) * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_jct * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)) + (0.89000000000000001 * (NV_Ith_S(mParameters, 10) * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_SL * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)); // microA_per_microF
        const double var_IKp__i_Kp = (0.001 * (var_chaste_interface__cell__V - var_reversal_potentials__E_K)) / (1.0 + exp(7.4880000000000004 - (var_chaste_interface__cell__V * 0.16722408026755853))); // microA_per_microF
        const double var_Itos__i_tos = NV_Ith_S(mParameters, 12) * var_chaste_interface__Itos_X_gate__X_tos * (var_chaste_interface__Itos_Y_gate__Y_tos + (0.5 * var_chaste_interface__Itos_R_gate__R_tos)) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_Itof__i_tof = 0.02 * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 59.215000000000003)))); // per_millisecond
        const double var_IK1__i_K1 = (0.90000000000000002 * sqrt(NV_Ith_S(mParameters, 5) * 0.18518518518518517)) * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 594.30999999999995))))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_INaCa__i_NaCa_jct = (NV_Ith_S(mParameters, 11) * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_jct, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * NV_Ith_S(mParameters, 4)) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.11) / ((0.0035899999999999999 * pow(NV_Ith_S(mParameters, 6), 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_jct * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 + (var_chaste_interface__Ca_buffer__Ca_jct * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * NV_Ith_S(mParameters, 4)) + (pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)); // microA_per_microF
        const double var_INaCa__i_NaCa_SL = (NV_Ith_S(mParameters, 11) * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_SL, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * NV_Ith_S(mParameters, 4)) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.89000000000000001) / ((0.0035899999999999999 * pow(NV_Ith_S(mParameters, 6), 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_SL * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 + (var_chaste_interface__Ca_buffer__Ca_SL * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * NV_Ith_S(mParameters, 4)) + (pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_ICl_Ca__i_Cl_Ca = 0.109625 * (var_chaste_interface__cell__V -  -61.509652318919223) * ((0.11 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct))) + (0.89000000000000001 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL)))); // microA_per_microF
        const double var_IClb__i_Clb = 0.0089999999999999993 * (var_chaste_interface__cell__V -  -61.509652318919223); // microA_per_microF
        const double var_ICaL__temp = (var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V * 4189209851.25) * 3.8798292719927153e-07; // coulomb_per_mole
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * ((0.75 * var_chaste_interface__Na_buffer__Na_SL * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * NV_Ith_S(mParameters, 6))) * 1.5e-09) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * NV_Ith_S(mParameters, 7) * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * NV_Ith_S(mParameters, 4))) * 0.40000000000000002) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * NV_Ith_S(mParameters, 7) * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * NV_Ith_S(mParameters, 4))) * 3.6000000000000001) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * ((0.75 * var_chaste_interface__Na_buffer__Na_jct * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * NV_Ith_S(mParameters, 6))) * 1.3499999999999998e-08) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + ((var_ICaL__temp * ((var_ICaL_fCa_gate__fCa_SL * 0.10000000000000001) + (var_ICaL_fCa_gate__fCa_jct * 0.90000000000000002)) * 2.7000000000000001e-07 * ((0.75 * NV_Ith_S(mParameters, 3) * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * NV_Ith_S(mParameters, 5)))) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0)); // microA_per_microF
        const double var_ICab__i_Cab_SL = (var_chaste_interface__cell__V - (13.35665129294709 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Ca_buffer__Ca_SL))) * 0.00022365699999999999; // microA_per_microF
        const double var_ICab__i_Cab_jct = (var_chaste_interface__cell__V - (13.35665129294709 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Ca_buffer__Ca_jct))) * 2.7642999999999999e-05; // microA_per_microF
        const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
        const double var_ICap__i_Cap_SL = 0.059896999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL, 1.6000000000000001)); // microA_per_microF
        const double var_ICap__i_Cap_jct = 0.0074029999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct, 1.6000000000000001)); // microA_per_microF
        const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
        const double var_chaste_interface__Itos__i_tos = var_Itos__i_tos; // microA_per_microF
        const double var_chaste_interface__INa__i_Na = var_INa__i_Na; // microA_per_microF
        const double var_chaste_interface__ICaL__i_CaL = var_ICaL__i_CaL; // microA_per_microF
        const double var_chaste_interface__IKr__i_Kr = var_IKr__i_Kr; // microA_per_microF
        const double var_chaste_interface__IK1__i_K1 = var_IK1__i_K1; // microA_per_microF
        const double var_chaste_interface__IKs__i_Ks = var_IKs__i_Ks; // microA_per_microF
        const double var_chaste_interface__INaCa__i_NaCa = var_INaCa__i_NaCa; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__i_Na + var_INab__i_Nab + var_INaK__i_NaK + var_chaste_interface__IKr__i_Kr + var_chaste_interface__IKs__i_Ks + var_chaste_interface__Itos__i_tos + var_Itof__i_tof + var_chaste_interface__IK1__i_K1 + var_chaste_interface__INaCa__i_NaCa + var_ICl_Ca__i_Cl_Ca + var_IClb__i_Clb + var_chaste_interface__ICaL__i_CaL + var_ICab__i_Cab + var_ICap__i_Cap + var_IKp__i_Kp) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellShannon2004FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : mp_membrane_voltage_modifier->Calc(NV_Ith_S(rY, 0), var_chaste_interface__environment__time));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = mp_membrane_fast_sodium_current_h_gate_modifier->Calc(NV_Ith_S(rY, 1), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = mp_membrane_fast_sodium_current_j_gate_modifier->Calc(NV_Ith_S(rY, 2), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = mp_membrane_fast_sodium_current_m_gate_modifier->Calc(NV_Ith_S(rY, 3), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = mp_membrane_L_type_calcium_current_d_gate_modifier->Calc(NV_Ith_S(rY, 11), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = mp_membrane_L_type_calcium_current_f_gate_modifier->Calc(NV_Ith_S(rY, 12), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__R = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 8.884332e-1
        double var_chaste_interface__Jrel_SR__I = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.024274e-7
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Na_SL_buf = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 7.720854e-1
        double var_chaste_interface__Na_buffer__Na_jct_buf = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 3.539892
        double var_chaste_interface__Na_buffer__Nai = mp_cytosolic_sodium_concentration_modifier->Calc(NV_Ith_S(rY, 22), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = mp_JSR_calcium_concentration_modifier->Calc(NV_Ith_S(rY, 23), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.737475e-4
        double var_chaste_interface__Ca_buffer__Cai = mp_cytosolic_calcium_concentration_modifier->Calc(NV_Ith_S(rY, 26), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 8.597401e-5
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 1.110363e-1
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 9.566355e-3
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 7.297378e-2
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 7.347888e-3
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 1.242988
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 8.773191e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 1.078283e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 1.524002e-2
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 2.911916e-4
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 1.298754e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 1.381982e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 2.143165e-3
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_model_parameters__Nao = mp_extracellular_sodium_concentration_modifier->Calc(NV_Ith_S(mParameters, 6), var_chaste_interface__environment__time); // millimolar
        const double var_reversal_potentials__E_Na_jct = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_jct); // millivolt
        const double var_INa__G_INa = mp_membrane_fast_sodium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 8), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__i_Na_jct = 0.11 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__E_Na_SL = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_SL); // millivolt
        const double var_INa__i_Na_SL = 0.89000000000000001 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL); // microA_per_microF
        const double var_INab__i_Nab_jct = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct) * 3.2670000000000004e-05; // microA_per_microF
        const double var_INab__i_Nab_SL = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL) * 0.00026433000000000001; // microA_per_microF
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp((var_chaste_interface__cell__V *  -9648.5) * 3.8798292719927153e-07)) + (0.036499999999999998 * ((exp(var_model_parameters__Nao * 0.01485884101040119) - 1.0) * 0.14285714285714285) * exp(((-var_chaste_interface__cell__V) * 96485.0) * 3.8798292719927153e-07))); // dimensionless
        const double var_model_parameters__Ko = mp_extracellular_potassium_concentration_modifier->Calc(NV_Ith_S(mParameters, 5), var_chaste_interface__environment__time); // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__f_NaK * 1.6973990999999999) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_SL, 4.0))) * var_model_parameters__Ko) / (var_model_parameters__Ko + 1.5); // microA_per_microF
        const double var_INaK__i_NaK_jct = (((var_INaK__f_NaK * 0.2097909) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_jct, 4.0))) * var_model_parameters__Ko) / (var_model_parameters__Ko + 1.5); // microA_per_microF
        const double var_model_parameters__Cao = mp_extracellular_calcium_concentration_modifier->Calc(NV_Ith_S(mParameters, 4), var_chaste_interface__environment__time); // millimolar
        const double var_INaCa__V_max = mp_membrane_sodium_calcium_exchanger_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 11), var_chaste_interface__environment__time); // microA_per_microF
        const double var_INaCa__i_NaCa_jct = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_jct, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.11) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_jct * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 + (var_chaste_interface__Ca_buffer__Ca_jct * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)); // microA_per_microF
        const double var_INaCa__i_NaCa_SL = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_SL, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.89000000000000001) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_SL * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 + (var_chaste_interface__Ca_buffer__Ca_SL * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)); // microA_per_microF
        const double var_ICaL__temp = (var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V * 4189209851.25) * 3.8798292719927153e-07; // coulomb_per_mole
        const double var_ICaL_fCa_gate__fCa_SL = mp_membrane_L_type_calcium_current_fCa_gate_modifier->Calc(1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL, var_chaste_interface__environment__time); // dimensionless
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * ((0.75 * var_chaste_interface__Na_buffer__Na_SL * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.5e-09) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__PCa = mp_membrane_L_type_calcium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 7), var_chaste_interface__environment__time); // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 0.40000000000000002) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 3.6000000000000001) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * ((0.75 * var_chaste_interface__Na_buffer__Na_jct * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.3499999999999998e-08) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICab__i_Cab_SL = (var_chaste_interface__cell__V - (13.35665129294709 * log(var_model_parameters__Cao / var_chaste_interface__Ca_buffer__Ca_SL))) * 0.00022365699999999999; // microA_per_microF
        const double var_ICab__i_Cab_jct = (var_chaste_interface__cell__V - (13.35665129294709 * log(var_model_parameters__Cao / var_chaste_interface__Ca_buffer__Ca_jct))) * 2.7642999999999999e-05; // microA_per_microF
        const double var_ICap__i_Cap_SL = 0.059896999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL, 1.6000000000000001)); // microA_per_microF
        const double var_ICap__i_Cap_jct = 0.0074029999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct, 1.6000000000000001)); // microA_per_microF
        const double var_ICaL_d_gate__d_infinity = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 14.5)) * 0.16666666666666666)); // dimensionless
        const double var_ICaL_f_gate__tau_f = mp_membrane_L_type_calcium_current_f_gate_tau_modifier->Calc(1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_chaste_interface__cell__V + 14.5), 2.0))) + 0.02), var_chaste_interface__environment__time); // millisecond
        const double var_Jrel_SR__ks = mp_SR_release_current_max_modifier->Calc(NV_Ith_S(mParameters, 1), var_chaste_interface__environment__time); // per_millisecond
        const double var_Jrel_SR__j_rel_SR = mp_SR_release_current_modifier->Calc(var_Jrel_SR__ks * var_chaste_interface__Jrel_SR__O * (var_chaste_interface__Ca_buffer__Ca_SR - var_chaste_interface__Ca_buffer__Ca_jct), var_chaste_interface__environment__time); // millimolar_per_millisecond
        const double var_Jrel_SR__RI = ((1.0 - var_chaste_interface__Jrel_SR__R) - var_chaste_interface__Jrel_SR__O) - var_chaste_interface__Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__kCaSR = 15.0 - (14.0 / (1.0 + pow(0.45000000000000001 / var_chaste_interface__Ca_buffer__Ca_SR, 2.5))); // dimensionless
        const double var_Jrel_SR__koSRCa = 10.0 / var_Jrel_SR__kCaSR; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kiSRCa = 0.5 * var_Jrel_SR__kCaSR; // per_millimolar_per_millisecond
        const double var_Jleak_SR__KSRleak = mp_SR_leak_current_max_modifier->Calc(NV_Ith_S(mParameters, 0), var_chaste_interface__environment__time); // per_millisecond
        const double var_Jleak_SR__j_leak_SR = var_Jleak_SR__KSRleak * (var_chaste_interface__Ca_buffer__Ca_SR - var_chaste_interface__Ca_buffer__Ca_jct); // millimolar_per_millisecond
        const double var_Jpump_SR__V_max = mp_SR_uptake_current_max_modifier->Calc(NV_Ith_S(mParameters, 2), var_chaste_interface__environment__time); // millimolar_per_millisecond
        const double var_Jpump_SR__j_pump_SR = (1.0 * var_Jpump_SR__V_max * (pow(var_chaste_interface__Ca_buffer__Cai * 4065.0406504065036, 1.7869999999999999) - pow(var_chaste_interface__Ca_buffer__Ca_SR * 0.58823529411764708, 1.7869999999999999))) / (1.0 + pow(var_chaste_interface__Ca_buffer__Cai * 4065.0406504065036, 1.7869999999999999) + pow(var_chaste_interface__Ca_buffer__Ca_SR * 0.58823529411764708, 1.7869999999999999)); // millimolar_per_millisecond
        const double var_ion_diffusion__J_Na_jct_SL = (var_chaste_interface__Na_buffer__Na_jct - var_chaste_interface__Na_buffer__Na_SL) * 1.8312999999999999e-14; // millimole_per_millisecond
        const double var_ion_diffusion__J_Na_SL_myo = (var_chaste_interface__Na_buffer__Na_SL - var_chaste_interface__Na_buffer__Nai) * 1.6385999999999999e-12; // millimole_per_millisecond
        const double var_ion_diffusion__J_Ca_jct_SL = (var_chaste_interface__Ca_buffer__Ca_jct - var_chaste_interface__Ca_buffer__Ca_SL) * 8.2413000000000004e-13; // millimole_per_millisecond
        const double var_ion_diffusion__J_Ca_SL_myo = (var_chaste_interface__Ca_buffer__Ca_SL - var_chaste_interface__Ca_buffer__Cai) * 3.7243000000000002e-12; // millimole_per_millisecond
        const double var_Na_buffer__dNa_jct_buf = (0.0001 * var_chaste_interface__Na_buffer__Na_jct * (7.5609999999999999 - var_chaste_interface__Na_buffer__Na_jct_buf)) - (0.001 * var_chaste_interface__Na_buffer__Na_jct_buf); // millimolar_per_millisecond
        const double var_Na_buffer__dNa_SL_buf = (0.0001 * var_chaste_interface__Na_buffer__Na_SL * (1.6499999999999999 - var_chaste_interface__Na_buffer__Na_SL_buf)) - (0.001 * var_chaste_interface__Na_buffer__Na_SL_buf); // millimolar_per_millisecond
        const double var_Ca_buffer__dCalsequestrin = (100.0 * var_chaste_interface__Ca_buffer__Ca_SR * (2.6000000000000001 - var_chaste_interface__Ca_buffer__Ca_Calsequestrin)) - (65.0 * var_chaste_interface__Ca_buffer__Ca_Calsequestrin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dMg_Myosin = ((0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin + var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin)) * 0.015699999999999999) - (5.7000000000000003e-05 * var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg = ((0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg)) * 0.0030000000000000001) - (0.0033300000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg = (2.3700000000000001 * var_chaste_interface__Ca_buffer__Cai * (0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg))) - (3.1999999999999999e-05 * var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Myosin = (13.800000000000001 * var_chaste_interface__Ca_buffer__Cai * (0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin + var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin))) - (0.00046000000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Calmodulin = (34.0 * var_chaste_interface__Ca_buffer__Cai * (0.024 - var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin)) - (0.23799999999999999 * var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC = (32.700000000000003 * var_chaste_interface__Ca_buffer__Cai * (0.070000000000000007 - var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC)) - (0.019599999999999999 * var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_SRB = (100.0 * var_chaste_interface__Ca_buffer__Cai * (0.017100000000000001 - var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB)) - (0.059999999999999998 * var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_SL = (100.0 * var_chaste_interface__Ca_buffer__Ca_SL * (1.2155 - var_chaste_interface__Ca_buffer__Ca_SLB_SL)) - (1.3 * var_chaste_interface__Ca_buffer__Ca_SLB_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_jct = (100.0 * var_chaste_interface__Ca_buffer__Ca_jct * (0.55473098330241177 - var_chaste_interface__Ca_buffer__Ca_SLB_jct)) - (1.3 * var_chaste_interface__Ca_buffer__Ca_SLB_jct); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_SL = (100.0 * var_chaste_interface__Ca_buffer__Ca_SL * (0.43550000000000005 - var_chaste_interface__Ca_buffer__Ca_SLHigh_SL)) - (0.029999999999999999 * var_chaste_interface__Ca_buffer__Ca_SLHigh_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_jct = (100.0 * var_chaste_interface__Ca_buffer__Ca_jct * (0.19897959183673466 - var_chaste_interface__Ca_buffer__Ca_SLHigh_jct)) - (0.029999999999999999 * var_chaste_interface__Ca_buffer__Ca_SLHigh_jct); // millimolar_per_millisecond
        const double d_dt_chaste_interface__INa_h_gate__h = (((var_chaste_interface__cell__V <  -40.0) ? (0.13500000000000001 * exp((80.0 + var_chaste_interface__cell__V) *  -0.14705882352941177)) : 0.0) * (1.0 - var_chaste_interface__INa_h_gate__h)) - (((var_chaste_interface__cell__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : (1.0 / (0.13 * (1.0 + exp((var_chaste_interface__cell__V + 10.66) *  -0.0900900900900901))))) * var_chaste_interface__INa_h_gate__h); // per_millisecond
        const double d_dt_chaste_interface__INa_j_gate__j = (((var_chaste_interface__cell__V <  -40.0) ? ((((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (var_chaste_interface__cell__V + 37.780000000000001)) * 1.0) / (1.0 + exp(0.311 * (var_chaste_interface__cell__V + 79.230000000000004)))) : 0.0) * (1.0 - var_chaste_interface__INa_j_gate__j)) - (((var_chaste_interface__cell__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__cell__V + 40.140000000000001)))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 32.0))))) * var_chaste_interface__INa_j_gate__j); // per_millisecond
        const double d_dt_chaste_interface__INa_m_gate__m = ((((0.32000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)) * 1.0) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)))) * (1.0 - var_chaste_interface__INa_m_gate__m)) - ((0.080000000000000002 * exp((-var_chaste_interface__cell__V) * 0.090909090909090912)) * var_chaste_interface__INa_m_gate__m); // per_millisecond
        const double d_dt_chaste_interface__IKr_Xr_gate__Xr = ((1.0 / (1.0 + exp((-(50.0 + var_chaste_interface__cell__V)) * 0.13333333333333333))) - var_chaste_interface__IKr_Xr_gate__Xr) / (1.0 / (((0.0013799999999999999 * (var_chaste_interface__cell__V + 7.0)) / (1.0 - exp( -0.123 * (var_chaste_interface__cell__V + 7.0)))) + ((0.00060999999999999997 * (var_chaste_interface__cell__V + 10.0)) / (exp(0.14499999999999999 * (var_chaste_interface__cell__V + 10.0)) - 1.0)))); // per_millisecond
        const double d_dt_chaste_interface__IKs_Xs_gate__Xs = ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 1.5)) * 0.059880239520958084))) - var_chaste_interface__IKs_Xs_gate__Xs) / (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp( -0.14799999999999999 * (var_chaste_interface__cell__V + 30.0)))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / ( -1.0 + exp(0.068699999999999997 * (var_chaste_interface__cell__V + 30.0)))))); // per_millisecond
        const double d_dt_chaste_interface__Itos_X_gate__X_tos = ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 3.0)) * 0.066666666666666666))) - var_chaste_interface__Itos_X_gate__X_tos) / ((9.0 / (1.0 + exp((var_chaste_interface__cell__V + 3.0) * 0.066666666666666666))) + 0.5); // per_millisecond
        const double d_dt_chaste_interface__Itos_Y_gate__Y_tos = ((1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001))) - var_chaste_interface__Itos_Y_gate__Y_tos) / ((3000.0 / (1.0 + exp((var_chaste_interface__cell__V + 60.0) * 0.10000000000000001))) + 30.0); // per_millisecond
        const double d_dt_chaste_interface__Itos_R_gate__R_tos = ((1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001))) - var_chaste_interface__Itos_R_gate__R_tos) / ((2800.0 / (1.0 + exp((var_chaste_interface__cell__V + 60.0) * 0.10000000000000001))) + 220.0); // per_millisecond
        const double d_dt_chaste_interface__Itof_X_gate__X_tof = ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 3.0)) * 0.066666666666666666))) - var_chaste_interface__Itof_X_gate__X_tof) / ((3.5 * exp(-pow(var_chaste_interface__cell__V * 0.033333333333333333, 2.0))) + 1.5); // per_millisecond
        const double d_dt_chaste_interface__Itof_Y_gate__Y_tof = ((1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001))) - var_chaste_interface__Itof_Y_gate__Y_tof) / ((20.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001))) + 20.0); // per_millisecond
        const double d_dt_chaste_interface__ICaL_d_gate__d = (var_ICaL_d_gate__d_infinity - var_chaste_interface__ICaL_d_gate__d) / ((1.0 * var_ICaL_d_gate__d_infinity * (1.0 - exp((-(var_chaste_interface__cell__V + 14.5)) * 0.16666666666666666))) / (0.035000000000000003 * (var_chaste_interface__cell__V + 14.5))); // per_millisecond
        const double d_dt_chaste_interface__ICaL_f_gate__f = (((1.0 / (1.0 + exp((var_chaste_interface__cell__V + 35.060000000000002) * 0.27777777777777779))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_chaste_interface__cell__V) * 0.050000000000000003)))) - var_chaste_interface__ICaL_f_gate__f) / var_ICaL_f_gate__tau_f; // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL = (1.7 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL)) - (0.011900000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL); // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct = (1.7 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct)) - (0.011900000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct); // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__R = ((0.0050000000000000001 * var_Jrel_SR__RI) - (var_Jrel_SR__kiSRCa * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__R)) - ((var_Jrel_SR__koSRCa * pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0) * var_chaste_interface__Jrel_SR__R) - (0.059999999999999998 * var_chaste_interface__Jrel_SR__O)); // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__I = ((var_Jrel_SR__kiSRCa * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O) - (0.0050000000000000001 * var_chaste_interface__Jrel_SR__I)) - ((0.059999999999999998 * var_chaste_interface__Jrel_SR__I) - (var_Jrel_SR__koSRCa * pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0) * var_Jrel_SR__RI)); // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__O = ((var_Jrel_SR__koSRCa * pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0) * var_chaste_interface__Jrel_SR__R) - (0.059999999999999998 * var_chaste_interface__Jrel_SR__O)) - ((var_Jrel_SR__kiSRCa * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O) - (0.0050000000000000001 * var_chaste_interface__Jrel_SR__I)); // per_millisecond
        const double d_dt_chaste_interface__Na_buffer__Na_SL = ((( -1.3809999999999999e-10 * (var_INa__i_Na_SL + (3.0 * var_INaCa__i_NaCa_SL) + var_INab__i_Nab_SL + (3.0 * var_INaK__i_NaK_SL) + var_ICaL__i_CaL_Na_SL)) * 15700468.056207974) + ((var_ion_diffusion__J_Na_jct_SL - var_ion_diffusion__J_Na_SL_myo) * 1514859660403.2266)) - var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct = ((( -1.3809999999999999e-10 * (var_INa__i_Na_jct + (3.0 * var_INaCa__i_NaCa_jct) + var_INab__i_Nab_jct + (3.0 * var_INaK__i_NaK_jct) + var_ICaL__i_CaL_Na_jct)) * 582577664.42330146) - (var_ion_diffusion__J_Na_jct_SL * 56210005951882.234)) - var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_SL_buf = var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct_buf = var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Nai = var_ion_diffusion__J_Na_SL_myo * 46611066473.945427; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SR = (var_Jpump_SR__j_pump_SR - (((var_Jleak_SR__j_leak_SR * 2.145413258370688e-11) * 865634091658.98657) + var_Jrel_SR__j_rel_SR)) - var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SL = ((((-((var_ICaL__i_CaL_Ca_SL - (2.0 * var_INaCa__i_NaCa_SL)) + var_ICab__i_Cab_SL + var_ICap__i_Cap_SL)) * 1.3809999999999999e-10) * 7850234.0281039868) + ((var_ion_diffusion__J_Ca_jct_SL - var_ion_diffusion__J_Ca_SL_myo) * 1514859660403.2266)) - (1.0 * (var_Ca_buffer__dCa_SLB_SL + var_Ca_buffer__dCa_SLHigh_SL)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_jct = (((((-((var_ICaL__i_CaL_Ca_jct - (2.0 * var_INaCa__i_NaCa_jct)) + var_ICab__i_Cab_jct + var_ICap__i_Cap_jct)) * 1.3809999999999999e-10) * 291288832.21165073) - (var_ion_diffusion__J_Ca_jct_SL * 56210005951882.234)) + ((var_Jrel_SR__j_rel_SR * 1.1552225237380627e-12) * 56210005951882.234) + ((var_Jleak_SR__j_leak_SR * 2.145413258370688e-11) * 56210005951882.234)) - (1.0 * (var_Ca_buffer__dCa_SLB_jct + var_Ca_buffer__dCa_SLHigh_jct)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Cai = ((((-var_Jpump_SR__j_pump_SR) * 1.1552225237380627e-12) * 46611066473.945427) + (var_ion_diffusion__J_Ca_SL_myo * 46611066473.945427)) - (1.0 * (var_cytosolic_Ca_buffer__dCa_TroponinC + var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dCa_Calmodulin + var_cytosolic_Ca_buffer__dCa_Myosin + var_cytosolic_Ca_buffer__dMg_Myosin + var_cytosolic_Ca_buffer__dCa_SRB)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL = var_Ca_buffer__dCa_SLB_SL; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct = var_Ca_buffer__dCa_SLB_jct; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL = var_Ca_buffer__dCa_SLHigh_SL; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct = var_Ca_buffer__dCa_SLHigh_jct; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin = var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = var_cytosolic_Ca_buffer__dCa_TroponinC; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = var_cytosolic_Ca_buffer__dCa_Calmodulin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = var_cytosolic_Ca_buffer__dCa_Myosin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = var_cytosolic_Ca_buffer__dMg_Myosin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = var_cytosolic_Ca_buffer__dCa_SRB; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
            const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
            const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
            const double var_IKr__G_IKr_const = mp_membrane_rapid_delayed_rectifier_potassium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 9), var_chaste_interface__environment__time); // milliS_per_microF
            const double var_model_parameters__Ki = mp_cytosolic_potassium_concentration_modifier->Calc(NV_Ith_S(mParameters, 3), var_chaste_interface__environment__time); // millimolar
            const double var_reversal_potentials__E_K = 26.71330258589418 * log(var_model_parameters__Ko / var_model_parameters__Ki); // millivolt
            const double var_IKr__i_Kr = (var_IKr__G_IKr_const * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((33.0 + var_chaste_interface__cell__V) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_IKs__G_Ks_Max = mp_membrane_slow_delayed_rectifier_potassium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 10), var_chaste_interface__environment__time); // milliS_per_microF
            const double var_IKs__E_Ks = 26.71330258589418 * log((var_model_parameters__Ko + (0.018329999999999999 * var_model_parameters__Nao)) / (var_model_parameters__Ki + (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai))); // millivolt
            const double var_IKs__i_Ks = (0.11 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_jct * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)) + (0.89000000000000001 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_SL * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)); // microA_per_microF
            const double var_IKp__i_Kp = (0.001 * (var_chaste_interface__cell__V - var_reversal_potentials__E_K)) / (1.0 + exp(7.4880000000000004 - (var_chaste_interface__cell__V * 0.16722408026755853))); // microA_per_microF
            const double var_Itos__G_tos = mp_membrane_transient_outward_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 12), var_chaste_interface__environment__time); // milliS_per_microF
            const double var_Itos__i_tos = var_Itos__G_tos * var_chaste_interface__Itos_X_gate__X_tos * (var_chaste_interface__Itos_Y_gate__Y_tos + (0.5 * var_chaste_interface__Itos_R_gate__R_tos)) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_Itof__i_tof = 0.02 * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 59.215000000000003)))); // per_millisecond
            const double var_IK1__i_K1 = (0.90000000000000002 * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 594.30999999999995))))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
            const double var_ICl_Ca__i_Cl_Ca = 0.109625 * (var_chaste_interface__cell__V -  -61.509652318919223) * ((0.11 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct))) + (0.89000000000000001 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL)))); // microA_per_microF
            const double var_IClb__i_Clb = 0.0089999999999999993 * (var_chaste_interface__cell__V -  -61.509652318919223); // microA_per_microF
            const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + ((var_ICaL__temp * ((var_ICaL_fCa_gate__fCa_SL * 0.10000000000000001) + (var_ICaL_fCa_gate__fCa_jct * 0.90000000000000002)) * 2.7000000000000001e-07 * ((0.75 * var_model_parameters__Ki * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Ko))) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0)); // microA_per_microF
            const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
            const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            d_dt_chaste_interface__cell__V = -(var_INa__i_Na + var_INab__i_Nab + var_INaK__i_NaK + var_IKr__i_Kr + var_IKs__i_Ks + var_Itos__i_tos + var_Itof__i_tof + var_IK1__i_K1 + var_INaCa__i_NaCa + var_ICl_Ca__i_Cl_Ca + var_IClb__i_Clb + var_ICaL__i_CaL + var_ICab__i_Cab + var_ICap__i_Cap + var_IKp__i_Kp + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__INa_h_gate__h;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa_j_gate__j;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa_m_gate__m;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__IKr_Xr_gate__Xr;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__IKs_Xs_gate__Xs;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__Itos_X_gate__X_tos;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__Itos_Y_gate__Y_tos;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__Itos_R_gate__R_tos;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__Itof_X_gate__X_tof;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__Itof_Y_gate__Y_tof;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__ICaL_d_gate__d;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__ICaL_f_gate__f;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__Jrel_SR__R;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Jrel_SR__I;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Jrel_SR__O;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__Na_buffer__Na_SL;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__Na_buffer__Na_jct;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Na_buffer__Na_SL_buf;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Na_buffer__Na_jct_buf;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Na_buffer__Nai;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Ca_buffer__Ca_SR;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__Ca_buffer__Ca_SL;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__Ca_buffer__Ca_jct;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__Ca_buffer__Cai;
        NV_Ith_S(rDY, 27) = d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL;
        NV_Ith_S(rDY, 28) = d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct;
        NV_Ith_S(rDY, 29) = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL;
        NV_Ith_S(rDY, 30) = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct;
        NV_Ith_S(rDY, 31) = d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin;
        NV_Ith_S(rDY, 32) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC;
        NV_Ith_S(rDY, 33) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg;
        NV_Ith_S(rDY, 34) = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg;
        NV_Ith_S(rDY, 35) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin;
        NV_Ith_S(rDY, 36) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin;
        NV_Ith_S(rDY, 37) = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin;
        NV_Ith_S(rDY, 38) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB;
    }
    
    void CellShannon2004FromCellMLCvode::EvaluateAnalyticJacobian(long int N, double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : mp_membrane_voltage_modifier->Calc(NV_Ith_S(rY, 0), var_chaste_interface__environment__time));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = mp_membrane_fast_sodium_current_h_gate_modifier->Calc(NV_Ith_S(rY, 1), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = mp_membrane_fast_sodium_current_j_gate_modifier->Calc(NV_Ith_S(rY, 2), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = mp_membrane_fast_sodium_current_m_gate_modifier->Calc(NV_Ith_S(rY, 3), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = mp_membrane_L_type_calcium_current_d_gate_modifier->Calc(NV_Ith_S(rY, 11), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = mp_membrane_L_type_calcium_current_f_gate_modifier->Calc(NV_Ith_S(rY, 12), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__R = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 8.884332e-1
        double var_chaste_interface__Jrel_SR__I = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.024274e-7
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Na_SL_buf = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 7.720854e-1
        double var_chaste_interface__Na_buffer__Na_jct_buf = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 3.539892
        double var_chaste_interface__Na_buffer__Nai = mp_cytosolic_sodium_concentration_modifier->Calc(NV_Ith_S(rY, 22), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = mp_JSR_calcium_concentration_modifier->Calc(NV_Ith_S(rY, 23), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.737475e-4
        double var_chaste_interface__Ca_buffer__Cai = mp_cytosolic_calcium_concentration_modifier->Calc(NV_Ith_S(rY, 26), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 8.597401e-5
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 1.110363e-1
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 9.566355e-3
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 7.297378e-2
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 7.347888e-3
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 1.242988
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 8.773191e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 1.078283e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 1.524002e-2
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 2.911916e-4
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 1.298754e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 1.381982e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 2.143165e-3
        
        const double var_chaste_interface__environment__fake_dt = 1.0; // millisecond
        const double var_model_parameters__Nao = mp_extracellular_sodium_concentration_modifier->Calc(NV_Ith_S(mParameters, 6), var_chaste_interface__environment__time); // millimolar
        const double var_INa__G_INa = mp_membrane_fast_sodium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 8), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_model_parameters__Ko = mp_extracellular_potassium_concentration_modifier->Calc(NV_Ith_S(mParameters, 5), var_chaste_interface__environment__time); // millimolar
        const double var_IKr__G_IKr_const = mp_membrane_rapid_delayed_rectifier_potassium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 9), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_model_parameters__Ki = mp_cytosolic_potassium_concentration_modifier->Calc(NV_Ith_S(mParameters, 3), var_chaste_interface__environment__time); // millimolar
        const double var_IKs__G_Ks_Max = mp_membrane_slow_delayed_rectifier_potassium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 10), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_Itos__G_tos = mp_membrane_transient_outward_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 12), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_model_parameters__Cao = mp_extracellular_calcium_concentration_modifier->Calc(NV_Ith_S(mParameters, 4), var_chaste_interface__environment__time); // millimolar
        const double var_INaCa__V_max = mp_membrane_sodium_calcium_exchanger_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 11), var_chaste_interface__environment__time); // microA_per_microF
        const double var_ICaL__PCa = mp_membrane_L_type_calcium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 7), var_chaste_interface__environment__time); // litre_per_farad_millisecond
        const double var_Jrel_SR__ks = mp_SR_release_current_max_modifier->Calc(NV_Ith_S(mParameters, 1), var_chaste_interface__environment__time); // per_millisecond
        const double var_Jleak_SR__KSRleak = mp_SR_leak_current_max_modifier->Calc(NV_Ith_S(mParameters, 0), var_chaste_interface__environment__time); // per_millisecond
        const double var_Jpump_SR__V_max = mp_SR_uptake_current_max_modifier->Calc(NV_Ith_S(mParameters, 2), var_chaste_interface__environment__time); // millimolar_per_millisecond
        const double var_t1 = pow(var_model_parameters__Ko, 0.5); // dimensionless
        const double var_t2 = var_IKr__G_IKr_const * var_t1; // dimensionless
        const double var_t6 = exp(1.4732142859999999 + (0.044642857139999999 * var_chaste_interface__cell__V)); // dimensionless
        const double var_t7 = 1.0 + var_t6; // dimensionless
        const double var_t16 = 26.71330258589418 * log(var_model_parameters__Ko / var_model_parameters__Ki); // dimensionless
        const double var_t17 = var_chaste_interface__cell__V - var_t16; // dimensionless
        const double var_t27 = (var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07; // dimensionless
        const double var_t29 = exp( -0.10000000000000001 * var_t27); // dimensionless
        const double var_t33 = exp(0.01485884101 * var_model_parameters__Nao) - 1.0; // dimensionless
        const double var_t34 = exp(-var_t27); // dimensionless
        const double var_t37 = (1.0 + (0.1245 * var_t29)) + ((0.0052142857139999997 * var_t33) * var_t34); // dimensionless
        const double var_t39 = 1.0 / pow(var_t37, 2.0); // dimensionless
        const double var_t41 = 1.0 / var_chaste_interface__Na_buffer__Na_SL; // dimensionless
        const double var_t43 = pow(11.0 * var_t41, 4.0); // dimensionless
        const double var_t44 = 1.0 + var_t43; // dimensionless
        const double var_t48 = 1.0 / (var_model_parameters__Ko + 1.5); // dimensionless
        const double var_t58 = var_t48 * (( -0.00046605993249873031 * var_t29) - ((((0.0052142857139999997 * var_t33) * 96485.0) * 3.8798292719927153e-07) * var_t34)); // dimensionless
        const double var_t60 = (((1.6973990999999999 * var_t39) / var_t44) * var_model_parameters__Ko) * var_t58; // dimensionless
        const double var_t63 = 1.0 / var_chaste_interface__Na_buffer__Na_jct; // dimensionless
        const double var_t65 = pow(11.0 * var_t63, 4.0); // dimensionless
        const double var_t66 = 1.0 + var_t65; // dimensionless
        const double var_t70 = (((0.2097909 * var_t39) / var_t66) * var_model_parameters__Ko) * var_t58; // dimensionless
        const double var_t71 = 0.11 * var_INaCa__V_max; // dimensionless
        const double var_t74 = pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0); // dimensionless
        const double var_t78 = 1.0 + ((1.6777215999999998e-11 / var_t74) / var_chaste_interface__Ca_buffer__Ca_jct); // dimensionless
        const double var_t79 = 1.0 / var_t78; // dimensionless
        const double var_t80 = var_t71 * var_t79; // dimensionless
        const double var_t89 = exp((0.34999999999999998 * var_chaste_interface__cell__V) * 0.037434532730821715); // dimensionless
        const double var_t90 = 0.0032258064516129032 * var_t89; // dimensionless
        const double var_t91 = pow(var_chaste_interface__Na_buffer__Na_jct, 3.0); // dimensionless
        const double var_t92 = var_t91 * var_model_parameters__Cao; // dimensionless
        const double var_t100 = exp(( -0.65000000000000002 * var_chaste_interface__cell__V) * 0.037434532730821715); // dimensionless
        const double var_t101 = 0.0032258064516129032 * var_t100; // dimensionless
        const double var_t102 = pow(var_model_parameters__Nao, 3.0); // dimensionless
        const double var_t103 = var_t102 * var_chaste_interface__Ca_buffer__Ca_jct; // dimensionless
        const double var_t109 = 1.0 + (0.27000000000000002 * var_t100); // dimensionless
        const double var_t110 = 1.0 / var_t109; // dimensionless
        const double var_t111 = 0.0035899999999999999 * var_t102; // dimensionless
        const double var_t114 = pow(var_chaste_interface__Na_buffer__Na_jct * 0.081366965012205056, 3.0); // dimensionless
        const double var_t118 = 669921.875 * var_chaste_interface__Ca_buffer__Ca_jct; // dimensionless
        const double var_t121 = 1.0 + (var_chaste_interface__Ca_buffer__Ca_jct * 278.55153203342621); // dimensionless
        const double var_t123 = 1.3 * var_t91; // dimensionless
        const double var_t124 = ((((var_t111 * (1.0 + var_t114)) + (var_t118 * var_t121)) + var_t123) + var_t92) + var_t103; // dimensionless
        const double var_t125 = 1.0 / var_t124; // dimensionless
        const double var_t126 = var_t110 * var_t125; // dimensionless
        const double var_t128 = ((var_t80 * 1.0) * (((4.061646801294156 * var_t90) * var_t92) - (( -7.5430583452605759 * var_t101) * var_t103))) * var_t126; // dimensionless
        const double var_t129 = 0.89000000000000001 * var_INaCa__V_max; // dimensionless
        const double var_t130 = pow(var_chaste_interface__Ca_buffer__Ca_SL, 2.0); // dimensionless
        const double var_t134 = 1.0 + ((1.6777215999999998e-11 / var_t130) / var_chaste_interface__Ca_buffer__Ca_SL); // dimensionless
        const double var_t135 = 1.0 / var_t134; // dimensionless
        const double var_t136 = var_t129 * var_t135; // dimensionless
        const double var_t137 = pow(var_chaste_interface__Na_buffer__Na_SL, 3.0); // dimensionless
        const double var_t138 = var_t137 * var_model_parameters__Cao; // dimensionless
        const double var_t141 = var_t102 * var_chaste_interface__Ca_buffer__Ca_SL; // dimensionless
        const double var_t147 = pow(var_chaste_interface__Na_buffer__Na_SL * 0.081366965012205056, 3.0); // dimensionless
        const double var_t150 = 669921.875 * var_chaste_interface__Ca_buffer__Ca_SL; // dimensionless
        const double var_t152 = 1.0 + (var_chaste_interface__Ca_buffer__Ca_SL * 278.55153203342621); // dimensionless
        const double var_t154 = 1.3 * var_t137; // dimensionless
        const double var_t155 = ((((var_t111 * (1.0 + var_t147)) + (var_t150 * var_t152)) + var_t154) + var_t138) + var_t141; // dimensionless
        const double var_t156 = 1.0 / var_t155; // dimensionless
        const double var_t157 = var_t110 * var_t156; // dimensionless
        const double var_t159 = ((var_t136 * 1.0) * (((4.061646801294156 * var_t90) * var_t138) - (( -7.5430583452605759 * var_t101) * var_t141))) * var_t157; // dimensionless
        const double var_t163 = exp(7.4880000000000004 - (0.16722408029999999 * var_chaste_interface__cell__V)); // dimensionless
        const double var_t164 = 1.0 + var_t163; // dimensionless
        const double var_t170 = 0.89000000000000001 * var_IKs__G_Ks_Max; // dimensionless
        const double var_t177 = exp( -6.9999999989999999 - ((1.6666666670000001 * log(var_chaste_interface__Ca_buffer__Ca_SL)) * 0.43429448190325176)); // dimensionless
        const double var_t178 = 1.0 + var_t177; // dimensionless
        const double var_t181 = 0.057000000000000002 + (0.19 / var_t178); // dimensionless
        const double var_t182 = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t184 = (var_t170 * var_t181) * var_t182; // dimensionless
        const double var_t185 = 1.0 / var_t7; // dimensionless
        const double var_t189 = 0.11 * var_IKs__G_Ks_Max; // dimensionless
        const double var_t194 = exp( -6.9999999989999999 - ((1.6666666670000001 * log(var_chaste_interface__Ca_buffer__Ca_jct)) * 0.43429448190325176)); // dimensionless
        const double var_t195 = 1.0 + var_t194; // dimensionless
        const double var_t198 = 0.057000000000000002 + (0.19 / var_t195); // dimensionless
        const double var_t200 = (var_t189 * var_t198) * var_t182; // dimensionless
        const double var_t201 = 0.11 * var_INa__G_INa; // dimensionless
        const double var_t202 = pow(var_chaste_interface__INa_m_gate__m, 2.0); // dimensionless
        const double var_t203 = var_t202 * var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_t204 = var_t203 * var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_t205 = var_t204 * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_t206 = var_t201 * var_t205; // dimensionless
        const double var_t207 = 0.89000000000000001 * var_INa__G_INa; // dimensionless
        const double var_t208 = var_t207 * var_t205; // dimensionless
        const double var_t212 = exp(((0.23849999999999999 * var_chaste_interface__cell__V) - (0.23849999999999999 * var_t16)) - 14.1227775); // dimensionless
        const double var_t213 = 1.0 + var_t212; // dimensionless
        const double var_t214 = 1.0 / var_t213; // dimensionless
        const double var_t215 = var_t1 * var_t214; // dimensionless
        const double var_t220 = exp(((0.080320000000000003 * var_chaste_interface__cell__V) - (0.080320000000000003 * var_t16)) + 0.43983232); // dimensionless
        const double var_t225 = exp(((0.061749999999999999 * var_chaste_interface__cell__V) - (0.061749999999999999 * var_t16)) - 36.698642499999998); // dimensionless
        const double var_t226 = (0.49124000000000001 * var_t220) + var_t225; // dimensionless
        const double var_t230 = exp((( -0.51429999999999998 * var_chaste_interface__cell__V) + (0.51429999999999998 * var_t16)) - 2.4444678999999998); // dimensionless
        const double var_t231 = 1.0 + var_t230; // dimensionless
        const double var_t232 = 1.0 / var_t231; // dimensionless
        const double var_t234 = (1.02 * var_t214) + (var_t226 * var_t232); // dimensionless
        const double var_t239 = 1.0 / pow(var_t213, 2.0); // dimensionless
        const double var_t256 = 1.0 / var_t234; // dimensionless
        const double var_t263 = var_Itos__G_tos * var_chaste_interface__Itos_X_gate__X_tos; // dimensionless
        const double var_t265 = var_chaste_interface__Itos_Y_gate__Y_tos + (0.5 * var_chaste_interface__Itos_R_gate__R_tos); // dimensionless
        const double var_t267 = 0.02 * var_chaste_interface__Itof_X_gate__X_tof; // dimensionless
        const double var_t274 = 1.0 / var_chaste_interface__Ca_buffer__Ca_jct; // dimensionless
        const double var_t276 = 1.0 + (0.10000000000000001 * var_t274); // dimensionless
        const double var_t279 = 1.0 / var_chaste_interface__Ca_buffer__Ca_SL; // dimensionless
        const double var_t281 = 1.0 + (0.10000000000000001 * var_t279); // dimensionless
        const double var_t290 = var_t100 * var_t102; // dimensionless
        const double var_t292 = ((var_t89 * var_t91) * var_model_parameters__Cao) - (var_t290 * var_chaste_interface__Ca_buffer__Ca_jct); // dimensionless
        const double var_t295 = 1.0 / pow(var_t109, 2.0); // dimensionless
        const double var_t300 = 11.604705146554732 * var_t101; // dimensionless
        const double var_t302 = ((((((var_t80 * 1.0) * var_t292) * var_t295) * var_t125) * 0.27000000000000002) *  -0.65000000000000002) * var_t300; // dimensionless
        const double var_t306 = ((var_t89 * var_t137) * var_model_parameters__Cao) - (var_t290 * var_chaste_interface__Ca_buffer__Ca_SL); // dimensionless
        const double var_t313 = ((((((var_t136 * 1.0) * var_t306) * var_t295) * var_t156) * 0.27000000000000002) *  -0.65000000000000002) * var_t300; // dimensionless
        const double var_t314 = var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f; // dimensionless
        const double var_t316 = var_t314 * 1.0; // dimensionless
        const double var_t319 = (var_chaste_interface__cell__V * 9309355225.0) * 96485.0; // dimensionless
        const double var_t326 = ((var_t316 * var_t319) * 1.4466005247798875e-08) * 1.040582726326743e-05; // dimensionless
        const double var_t327 = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_t328 = var_t327 * 0.10000000000000001; // dimensionless
        const double var_t329 = var_t328 * 1.4999999999999999e-08; // dimensionless
        const double var_t330 = 0.75 * var_chaste_interface__Na_buffer__Na_SL; // dimensionless
        const double var_t331 = exp(var_t27); // dimensionless
        const double var_t332 = var_t331 - 1.0; // dimensionless
        const double var_t333 = 1.0 / var_t332; // dimensionless
        const double var_t334 = var_t331 * var_t333; // dimensionless
        const double var_t338 = (((0.45000000000000001 * var_t326) * var_t329) * var_t330) * var_t334; // dimensionless
        const double var_t340 = (var_t316 * var_t319) * 1.4466005247798875e-08; // dimensionless
        const double var_t342 = (1.040582726326743e-05 * var_t327) * 0.10000000000000001; // dimensionless
        const double var_t344 = 0.75 * var_model_parameters__Nao; // dimensionless
        const double var_t345 = (var_t330 * var_t331) - var_t344; // dimensionless
        const double var_t346 = 1.4999999999999999e-08 * var_t345; // dimensionless
        const double var_t348 = 1.0 / pow(var_t332, 2.0); // dimensionless
        const double var_t349 = var_t348 * var_t331; // dimensionless
        const double var_t353 = (((0.45000000000000001 * var_t340) * var_t342) * var_t346) * var_t349; // dimensionless
        const double var_t354 = 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL; // dimensionless
        const double var_t356 = exp(2.0 * var_t27); // dimensionless
        const double var_t358 = 0.34100000000000003 * var_model_parameters__Cao; // dimensionless
        const double var_t359 = (var_t354 * var_t356) - var_t358; // dimensionless
        const double var_t360 = var_ICaL__PCa * var_t359; // dimensionless
        const double var_t361 = var_t356 - 1.0; // dimensionless
        const double var_t364 = (1.0 / pow(var_t361, 2.0)) * var_t356; // dimensionless
        const double var_t368 = (((3.6000000000000001 * var_t340) * var_t342) * var_t360) * var_t364; // dimensionless
        const double var_t369 = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_t371 = (1.040582726326743e-05 * var_t369) * 0.90000000000000002; // dimensionless
        const double var_t372 = 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct; // dimensionless
        const double var_t374 = (var_t372 * var_t356) - var_t358; // dimensionless
        const double var_t375 = var_ICaL__PCa * var_t374; // dimensionless
        const double var_t379 = (((3.6000000000000001 * var_t340) * var_t371) * var_t375) * var_t364; // dimensionless
        const double var_t382 = ((var_t314 * 1.0) * 9309355225.0) * 0.00012027470743177418; // dimensionless
        const double var_t383 = 0.0032258064516129032 * var_t369; // dimensionless
        const double var_t384 = var_t383 * 0.90000000000000002; // dimensionless
        const double var_t385 = 0.75 * var_chaste_interface__Na_buffer__Na_jct; // dimensionless
        const double var_t387 = (var_t385 * var_t331) - var_t344; // dimensionless
        const double var_t388 = 1.4999999999999999e-08 * var_t387; // dimensionless
        const double var_t389 = var_t388 * var_t333; // dimensionless
        const double var_t390 = var_t384 * var_t389; // dimensionless
        const double var_t392 = (0.45000000000000001 * var_t382) * var_t390; // dimensionless
        const double var_t393 = var_t369 * 0.90000000000000002; // dimensionless
        const double var_t394 = var_t393 * 1.4999999999999999e-08; // dimensionless
        const double var_t398 = (((0.45000000000000001 * var_t326) * var_t394) * var_t385) * var_t334; // dimensionless
        const double var_t402 = (((0.45000000000000001 * var_t340) * var_t371) * var_t388) * var_t349; // dimensionless
        const double var_t403 = var_t328 + var_t393; // dimensionless
        const double var_t405 = 0.75 * var_model_parameters__Ki; // dimensionless
        const double var_t408 = (var_t405 * var_t331) - (0.75 * var_model_parameters__Ko); // dimensionless
        const double var_t410 = (2.7000000000000001e-07 * var_t408) * var_t333; // dimensionless
        const double var_t411 = (0.0032258064516129032 * var_t403) * var_t410; // dimensionless
        const double var_t415 = (1.040582726326743e-05 * var_t403) * 2.7000000000000001e-07; // dimensionless
        const double var_t425 = 0.0032258064516129032 * var_t327; // dimensionless
        const double var_t426 = var_t425 * 0.10000000000000001; // dimensionless
        const double var_t427 = 1.0 / var_t361; // dimensionless
        const double var_t428 = var_t360 * var_t427; // dimensionless
        const double var_t429 = var_t426 * var_t428; // dimensionless
        const double var_t431 = (1.8 * var_t382) * var_t429; // dimensionless
        const double var_t432 = var_t375 * var_t427; // dimensionless
        const double var_t433 = var_t384 * var_t432; // dimensionless
        const double var_t435 = (1.8 * var_t382) * var_t433; // dimensionless
        const double var_t437 = var_t356 * var_t427; // dimensionless
        const double var_t441 = ((((3.6000000000000001 * var_t326) * var_t393) * var_ICaL__PCa) * var_t372) * var_t437; // dimensionless
        const double var_t446 = ((((3.6000000000000001 * var_t326) * var_t328) * var_ICaL__PCa) * var_t354) * var_t437; // dimensionless
        const double var_t447 = var_t346 * var_t333; // dimensionless
        const double var_t448 = var_t426 * var_t447; // dimensionless
        const double var_t450 = (0.45000000000000001 * var_t382) * var_t448; // dimensionless
        const double var_t453 = var_t203 * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_t458 = var_chaste_interface__cell__V - (26.71330258589418 * log(var_model_parameters__Nao * var_t41)); // dimensionless
        const double var_t465 = var_chaste_interface__cell__V - (26.71330258589418 * log(var_model_parameters__Nao * var_t63)); // dimensionless
        const double var_t475 = var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_t490 = 1.0 / (var_model_parameters__Ki + (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai)); // dimensionless
        const double var_t495 = var_chaste_interface__cell__V - (26.71330258589418 * log((var_model_parameters__Ko + (0.018329999999999999 * var_model_parameters__Nao)) * var_t490)); // dimensionless
        const double var_t504 = var_t263 * var_t17; // dimensionless
        const double var_t509 = var_chaste_interface__ICaL_f_gate__f * 1.0; // dimensionless
        const double var_t511 = (var_chaste_interface__cell__V * 9309355225.0) * 0.00012027470743177418; // dimensionless
        const double var_t512 = var_t509 * var_t511; // dimensionless
        const double var_t524 = var_chaste_interface__ICaL_d_gate__d * 1.0; // dimensionless
        const double var_t525 = var_t524 * var_t511; // dimensionless
        const double var_t537 = 1.0 * var_chaste_interface__cell__V; // dimensionless
        const double var_t539 = (var_t314 * var_t537) * 9309355225.0; // dimensionless
        const double var_t563 = var_chaste_interface__INa_j_gate__j * 8314.2999999999993; // dimensionless
        const double var_t565 = 0.003212934653054879 * var_t41; // dimensionless
        const double var_t567 = ((var_t207 * var_t204) * var_t563) * var_t565; // dimensionless
        const double var_t568 = 1.0 / var_t37; // dimensionless
        const double var_t573 = var_model_parameters__Ko * var_t48; // dimensionless
        const double var_t577 = (((((1.6973990999999999 * var_t568) / pow(var_t44, 2.0)) * var_t573) * var_t43) * 4.0) * var_t41; // dimensionless
        const double var_t578 = var_t135 * 1.0; // dimensionless
        const double var_t581 = var_t137 * 3.0; // dimensionless
        const double var_t583 = var_model_parameters__Cao * var_t110; // dimensionless
        const double var_t586 = (((((var_t129 * var_t578) * var_t89) * var_t581) * var_t41) * var_t583) * var_t156; // dimensionless
        const double var_t587 = var_t129 * var_t578; // dimensionless
        const double var_t588 = var_t306 * var_t110; // dimensionless
        const double var_t590 = 1.0 / pow(var_t155, 2.0); // dimensionless
        const double var_t601 = ((var_t587 * var_t588) * var_t590) * (((((var_t111 * var_t147) * 3.0) * var_t41) + ((var_t154 * 3.0) * var_t41)) + ((var_t581 * var_t41) * var_model_parameters__Cao)); // dimensionless
        const double var_t603 = 2.1977189189999997 * var_t565; // dimensionless
        const double var_t604 = var_t316 * var_t511; // dimensionless
        const double var_t606 = 1.1249999999999998e-08 * var_t334; // dimensionless
        const double var_t609 = ((0.45000000000000001 * var_t604) * var_t426) * var_t606; // dimensionless
        const double var_t618 = (((((0.2097909 * var_t568) / pow(var_t66, 2.0)) * var_t573) * var_t65) * 4.0) * var_t63; // dimensionless
        const double var_t619 = var_t79 * 1.0; // dimensionless
        const double var_t622 = var_t91 * 3.0; // dimensionless
        const double var_t626 = (((((var_t71 * var_t619) * var_t89) * var_t622) * var_t63) * var_t583) * var_t125; // dimensionless
        const double var_t627 = var_t71 * var_t619; // dimensionless
        const double var_t628 = var_t292 * var_t110; // dimensionless
        const double var_t630 = 1.0 / pow(var_t124, 2.0); // dimensionless
        const double var_t641 = ((var_t627 * var_t628) * var_t630) * (((((var_t111 * var_t114) * 3.0) * var_t63) + ((var_t123 * 3.0) * var_t63)) + ((var_t622 * var_t63) * var_model_parameters__Cao)); // dimensionless
        const double var_t643 = 0.003212934653054879 * var_t63; // dimensionless
        const double var_t645 = ((var_t201 * var_t204) * var_t563) * var_t643; // dimensionless
        const double var_t647 = 0.27162818100000002 * var_t643; // dimensionless
        const double var_t650 = ((0.45000000000000001 * var_t604) * var_t384) * var_t606; // dimensionless
        const double var_t654 = (26.71330258589418 * var_t490) * 0.018329999999999999; // dimensionless
        const double var_t662 = pow(0.00050000000000000001 * var_t279, 1.6000000000000001); // dimensionless
        const double var_t669 = (((0.059896999999999999 / pow(1.0 + var_t662, 2.0)) * var_t662) * 1.6000000000000001) * var_t279; // dimensionless
        const double var_t675 = var_t182 * var_t495; // dimensionless
        const double var_t688 = (((((var_t129 / pow(var_t134, 2.0)) * 1.0) * var_t588) * var_t156) * 1.6777215999999998e-11) / pow(var_t130, 2.0); // dimensionless
        const double var_t691 = (var_t587 * var_t290) * var_t157; // dimensionless
        const double var_t697 = ((var_t587 * var_t588) * var_t590) * (((669921.875 * var_t152) + (var_t150 * 278.55153203342621)) + var_t102); // dimensionless
        const double var_t701 = 0.0029873085582266669 * var_t279; // dimensionless
        const double var_t708 = 0.109625 * (var_chaste_interface__cell__V -  -61.509652318919223); // dimensionless
        const double var_t717 = (var_ICaL__PCa * 0.34100000000000003) * var_t437; // dimensionless
        const double var_t720 = ((1.8 * var_t604) * var_t426) * var_t717; // dimensionless
        const double var_t724 = pow(0.00050000000000000001 * var_t274, 1.6000000000000001); // dimensionless
        const double var_t731 = (((0.0074029999999999999 / pow(1.0 + var_t724, 2.0)) * var_t724) * 1.6000000000000001) * var_t274; // dimensionless
        const double var_t749 = (((((var_t71 / pow(var_t78, 2.0)) * 1.0) * var_t628) * var_t125) * 1.6777215999999998e-11) / pow(var_t74, 2.0); // dimensionless
        const double var_t752 = (var_t627 * var_t290) * var_t126; // dimensionless
        const double var_t758 = ((var_t627 * var_t628) * var_t630) * (((669921.875 * var_t121) + (var_t118 * 278.55153203342621)) + var_t102); // dimensionless
        const double var_t762 = 0.00036921791169093637 * var_t274; // dimensionless
        const double var_t772 = ((1.8 * var_t604) * var_t384) * var_t717; // dimensionless
        const double var_t774 = var_chaste_interface__cell__V <  -40.0; // dimensionless
        const double var_t777 = exp( -11.764705879999999 - (0.14705882349999999 * var_chaste_interface__cell__V)); // dimensionless
        const double var_t780 =  -40.0 < var_chaste_interface__cell__V; // dimensionless
        const double var_t793 = exp(( -0.090090090090000005 * var_chaste_interface__cell__V) - 0.96036036039999995); // dimensionless
        const double var_t803 = var_chaste_interface__cell__V <  -40.0; // dimensionless
        const double var_t819 = exp(0.24440000000000001 * var_chaste_interface__cell__V); // dimensionless
        const double var_t822 = exp( -0.043909999999999998 * var_chaste_interface__cell__V); // dimensionless
        const double var_t825 = var_chaste_interface__cell__V + 37.780000000000001; // dimensionless
        const double var_t829 = exp((0.311 * var_chaste_interface__cell__V) + 24.640530009999999); // dimensionless
        const double var_t830 = 1.0 + var_t829; // dimensionless
        const double var_t831 = 1.0 / var_t830; // dimensionless
        const double var_t835 = ( -127140.0 * var_t819) - (3.4740000000000003e-05 * var_t822); // dimensionless
        const double var_t848 = exp( -0.01052 * var_chaste_interface__cell__V); // dimensionless
        const double var_t851 = exp(( -0.13780000000000001 * var_chaste_interface__cell__V) - 5.5312919950000001); // dimensionless
        const double var_t852 = 1.0 + var_t851; // dimensionless
        const double var_t863 = exp( -2.5349999990000002e-07 * var_chaste_interface__cell__V); // dimensionless
        const double var_t866 = exp(( -0.10000000000000001 * var_chaste_interface__cell__V) - 3.2000000000000002); // dimensionless
        const double var_t867 = 1.0 + var_t866; // dimensionless
        const double var_t907 = 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_t917 = exp((-var_t907) - 4.7130000000000001); // dimensionless
        const double var_t918 = 1.0 - var_t917; // dimensionless
        const double var_t919 = 1.0 / var_t918; // dimensionless
        const double var_t920 = 1.0 - var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_t923 = var_chaste_interface__cell__V + 47.130000000000003; // dimensionless
        const double var_t931 = exp( -0.090909090909090912 * var_chaste_interface__cell__V); // dimensionless
        const double var_t941 = exp( -6.6666666650000002 - (0.1333333333 * var_chaste_interface__cell__V)); // dimensionless
        const double var_t942 = 1.0 + var_t941; // dimensionless
        const double var_t946 = var_chaste_interface__cell__V + 7.0; // dimensionless
        const double var_t949 = exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999); // dimensionless
        const double var_t950 = 1.0 - var_t949; // dimensionless
        const double var_t951 = 1.0 / var_t950; // dimensionless
        const double var_t954 = var_chaste_interface__cell__V + 10.0; // dimensionless
        const double var_t957 = exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45); // dimensionless
        const double var_t958 = var_t957 - 1.0; // dimensionless
        const double var_t959 = 1.0 / var_t958; // dimensionless
        const double var_t962 = ((0.0013799999999999999 * var_t946) * var_t951) + ((0.00060999999999999997 * var_t954) * var_t959); // dimensionless
        const double var_t984 = exp(( -0.059880239520000003 * var_chaste_interface__cell__V) + 0.089820359279999998); // dimensionless
        const double var_t985 = 1.0 + var_t984; // dimensionless
        const double var_t989 = var_chaste_interface__cell__V + 30.0; // dimensionless
        const double var_t992 = exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004); // dimensionless
        const double var_t993 = 1.0 - var_t992; // dimensionless
        const double var_t994 = 1.0 / var_t993; // dimensionless
        const double var_t999 = exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999); // dimensionless
        const double var_t1000 =  -1.0 + var_t999; // dimensionless
        const double var_t1001 = 1.0 / var_t1000; // dimensionless
        const double var_t1004 = ((7.1899999999999999e-05 * var_t989) * var_t994) + ((0.00013100000000000001 * var_t989) * var_t1001); // dimensionless
        const double var_t1025 = ( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001; // dimensionless
        const double var_t1026 = exp(var_t1025); // dimensionless
        const double var_t1027 = 1.0 + var_t1026; // dimensionless
        const double var_t1030 = (1.0 / pow(var_t1027, 2.0)) * var_t1026; // dimensionless
        const double var_t1031 = exp(-var_t1025); // dimensionless
        const double var_t1032 = 1.0 + var_t1031; // dimensionless
        const double var_t1035 = (9.0 / var_t1032) + 0.5; // dimensionless
        const double var_t1036 = 1.0 / var_t1035; // dimensionless
        const double var_t1039 = 1.0 / var_t1027; // dimensionless
        const double var_t1050 = 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_t1052 = exp(var_t1050 + 3.3500000000000001); // dimensionless
        const double var_t1053 = 1.0 + var_t1052; // dimensionless
        const double var_t1056 = (1.0 / pow(var_t1053, 2.0)) * var_t1052; // dimensionless
        const double var_t1058 = exp(var_t1050 + 6.0); // dimensionless
        const double var_t1059 = 1.0 + var_t1058; // dimensionless
        const double var_t1060 = 1.0 / var_t1059; // dimensionless
        const double var_t1062 = (3000.0 * var_t1060) + 30.0; // dimensionless
        const double var_t1063 = 1.0 / var_t1062; // dimensionless
        const double var_t1066 = 1.0 / var_t1053; // dimensionless
        const double var_t1073 = (1.0 / pow(var_t1059, 2.0)) * var_t1058; // dimensionless
        const double var_t1078 = (2800.0 * var_t1060) + 220.0; // dimensionless
        const double var_t1079 = 1.0 / var_t1078; // dimensionless
        const double var_t1091 = exp( -0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2.0)); // dimensionless
        const double var_t1093 = (3.5 * var_t1091) + 1.5; // dimensionless
        const double var_t1094 = 1.0 / var_t1093; // dimensionless
        const double var_t1105 = var_t1066 + 1.0; // dimensionless
        const double var_t1106 = 0.050000000000000003 / var_t1105; // dimensionless
        const double var_t1118 = exp(( -0.16666666666666666 * var_chaste_interface__cell__V) - 2.4166666669999999); // dimensionless
        const double var_t1119 = 1.0 + var_t1118; // dimensionless
        const double var_t1120 = 1.0 / var_t1119; // dimensionless
        const double var_t1122 = 1.0 - var_t1118; // dimensionless
        const double var_t1123 = 1.0 / var_t1122; // dimensionless
        const double var_t1125 = (0.035000000000000003 * var_chaste_interface__cell__V) + 0.50749999999999995; // dimensionless
        const double var_t1126 = var_t1123 * var_t1125; // dimensionless
        const double var_t1129 = var_t1120 - var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_t1133 = var_t1129 * var_t1119; // dimensionless
        const double var_t1147 = exp((0.27777777780000001 * var_chaste_interface__cell__V) + 9.7388888900000001); // dimensionless
        const double var_t1148 = 1.0 + var_t1147; // dimensionless
        const double var_t1155 = exp(2.5 - (0.050000000000000003 * var_chaste_interface__cell__V)); // dimensionless
        const double var_t1156 = 1.0 + var_t1155; // dimensionless
        const double var_t1165 = exp(-pow((0.033700000000000001 * var_chaste_interface__cell__V) + 0.48864999999999997, 2.0)); // dimensionless
        const double var_t1167 = (0.019699999999999999 * var_t1165) + 0.02; // dimensionless
        const double var_t1188 = 1.0 / var_chaste_interface__Ca_buffer__Ca_SR; // dimensionless
        const double var_t1190 = pow(0.45000000000000001 * var_t1188, 2.5); // dimensionless
        const double var_t1191 = 1.0 + var_t1190; // dimensionless
        const double var_t1194 = 15.0 - (14.0 / var_t1191); // dimensionless
        const double var_t1195 = 0.5 * var_t1194; // dimensionless
        const double var_t1196 = var_t1195 * var_chaste_interface__Ca_buffer__Ca_jct; // dimensionless
        const double var_t1198 = 10.0 / var_t1194; // dimensionless
        const double var_t1199 = var_t1198 * var_t74; // dimensionless
        const double var_t1204 = 1.0 / pow(var_t1191, 2.0); // dimensionless
        const double var_t1206 = (7.0 * var_t1204) * var_t1190; // dimensionless
        const double var_t1207 = 2.5 * var_t1188; // dimensionless
        const double var_t1208 = var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__R; // dimensionless
        const double var_t1213 = 10.0 / pow(var_t1194, 2.0); // dimensionless
        const double var_t1219 = (((14.0 * var_t1204) * var_t1190) * 2.5) * var_t1188; // dimensionless
        const double var_t1220 = ((var_t1213 * var_t74) * var_chaste_interface__Jrel_SR__R) * var_t1219; // dimensionless
        const double var_t1224 = (2.0 * var_t1198) * var_t1208; // dimensionless
        const double var_t1230 = ((var_t1206 * var_t1207) * var_chaste_interface__Ca_buffer__Ca_jct) * var_chaste_interface__Jrel_SR__O; // dimensionless
        const double var_t1231 = ((1.0 - var_chaste_interface__Jrel_SR__R) - var_chaste_interface__Jrel_SR__O) - var_chaste_interface__Jrel_SR__I; // dimensionless
        const double var_t1236 = var_t1195 * var_chaste_interface__Jrel_SR__O; // dimensionless
        const double var_t1257 = var_INa__G_INa * var_t203; // dimensionless
        const double var_t1258 = 1.2290899999999998e-10 * var_t1257; // dimensionless
        const double var_t1260 = (var_chaste_interface__INa_j_gate__j * var_t458) * 9.8648950219489296e-10; // dimensionless
        const double var_t1268 = (var_INa__G_INa * var_t202) * var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_t1274 = ((1.3809999999999999e-10 * var_chaste_interface__ICaL_f_gate__f) * 1.0) * var_t27; // dimensionless
        const double var_t1276 = (var_t345 * var_t333) * 9.5181439619274248e-05; // dimensionless
        const double var_t1277 = var_t329 * var_t1276; // dimensionless
        const double var_t1280 = 1.3809999999999999e-10 * var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_t1282 = (var_t1280 * 1.0) * var_t27; // dimensionless
        const double var_t1287 = ((var_t1280 * var_chaste_interface__ICaL_f_gate__f) * var_t537) * 11.604705146554732; // dimensionless
        const double var_t1302 = 0.0001 * (1.6499999999999999 - var_chaste_interface__Na_buffer__Na_SL_buf); // dimensionless
        const double var_t1306 = (0.0001 * var_chaste_interface__Na_buffer__Na_SL) + 0.001; // dimensionless
        const double var_t1323 = 1.5191e-11 * var_t1257; // dimensionless
        const double var_t1325 = (var_chaste_interface__INa_j_gate__j * var_t465) * 9.8648950219489296e-10; // dimensionless
        const double var_t1336 = (var_t387 * var_t333) * 9.5181439619274248e-05; // dimensionless
        const double var_t1337 = var_t394 * var_t1336; // dimensionless
        const double var_t1356 = 0.0001 * (7.5609999999999999 - var_chaste_interface__Na_buffer__Na_jct_buf); // dimensionless
        const double var_t1359 = (0.0001 * var_chaste_interface__Na_buffer__Na_jct) + 0.001; // dimensionless
        const double var_t1369 = var_Jrel_SR__ks * (var_chaste_interface__Ca_buffer__Ca_SR - var_chaste_interface__Ca_buffer__Ca_jct); // dimensionless
        const double var_t1371 = 1.0 * var_Jpump_SR__V_max; // dimensionless
        const double var_t1374 = pow(var_chaste_interface__Ca_buffer__Ca_SR * 0.58823529411764708, 1.7869999999999999); // dimensionless
        const double var_t1376 = 1.7869999999999999 * var_t1188; // dimensionless
        const double var_t1379 = pow(var_chaste_interface__Ca_buffer__Cai * 4065.0406504065036, 1.7869999999999999); // dimensionless
        const double var_t1380 = (1.0 + var_t1379) + var_t1374; // dimensionless
        const double var_t1381 = 1.0 / var_t1380; // dimensionless
        const double var_t1383 = ((var_t1371 * var_t1374) * var_t1376) * var_t1381; // dimensionless
        const double var_t1385 = var_t1371 * (var_t1379 - var_t1374); // dimensionless
        const double var_t1387 = 1.0 / pow(var_t1380, 2.0); // dimensionless
        const double var_t1390 = ((var_t1385 * var_t1387) * var_t1374) * var_t1376; // dimensionless
        const double var_t1391 = 18.571428569999998 * var_Jleak_SR__KSRleak; // dimensionless
        const double var_t1392 = var_Jrel_SR__ks * var_chaste_interface__Jrel_SR__O; // dimensionless
        const double var_t1395 = 100.0 * (2.5999999998000001 - var_chaste_interface__Ca_buffer__Ca_Calsequestrin); // dimensionless
        const double var_t1400 = 1.7869999999999999 / var_chaste_interface__Ca_buffer__Cai; // dimensionless
        const double var_t1402 = ((var_t1371 * var_t1379) * var_t1400) * var_t1381; // dimensionless
        const double var_t1405 = ((var_t1385 * var_t1387) * var_t1379) * var_t1400; // dimensionless
        const double var_t1408 = (100.0 * var_chaste_interface__Ca_buffer__Ca_SR) + 65.0; // dimensionless
        const double var_t1415 = var_t509 * var_chaste_interface__cell__V; // dimensionless
        const double var_t1416 = 11.604705146554732 * var_t425; // dimensionless
        const double var_t1421 = (var_t427 * 1.3809999999999999e-10) * 9.5181439619274248e-05; // dimensionless
        const double var_t1422 = ((0.10000000000000001 * var_ICaL__PCa) * var_t359) * var_t1421; // dimensionless
        const double var_t1425 = var_t524 * var_chaste_interface__cell__V; // dimensionless
        const double var_t1429 = var_t316 * var_t27; // dimensionless
        const double var_t1446 = 100.0 * (1.2155 - var_chaste_interface__Ca_buffer__Ca_SLB_SL); // dimensionless
        const double var_t1449 = 100.0 * (0.4355 - var_chaste_interface__Ca_buffer__Ca_SLHigh_SL); // dimensionless
        const double var_t1453 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SL; // dimensionless
        const double var_t1454 = var_t1453 + 1.3; // dimensionless
        const double var_t1455 = var_t1453 + 0.029999999999999999; // dimensionless
        const double var_t1462 = 11.604705146554732 * var_t383; // dimensionless
        const double var_t1466 = ((0.90000000000000002 * var_ICaL__PCa) * var_t374) * var_t1421; // dimensionless
        const double var_t1479 = 64.935064920000002 * var_t1392; // dimensionless
        const double var_t1480 = 1205.9369200000001 * var_Jleak_SR__KSRleak; // dimensionless
        const double var_t1492 = 100.0 * (0.55473098320000003 - var_chaste_interface__Ca_buffer__Ca_SLB_jct); // dimensionless
        const double var_t1495 = 100.0 * (0.19897959179999999 - var_chaste_interface__Ca_buffer__Ca_SLHigh_jct); // dimensionless
        const double var_t1497 = 100.0 * var_chaste_interface__Ca_buffer__Ca_jct; // dimensionless
        const double var_t1498 = var_t1497 + 1.3; // dimensionless
        const double var_t1499 = var_t1497 + 0.029999999999999999; // dimensionless
        const double var_t1507 = 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC); // dimensionless
        const double var_t1509 = 2.3700000000000001 * ((0.14000000000000001 - var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg) - var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg); // dimensionless
        const double var_t1511 = 34.0 * (0.024 - var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin); // dimensionless
        const double var_t1513 = 13.800000000000001 * ((0.14000000000000001 - var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin) - var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin); // dimensionless
        const double var_t1515 = 100.0 * (0.017100000000000001 - var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB); // dimensionless
        const double var_t1518 = (32.700000000000003 * var_chaste_interface__Ca_buffer__Cai) + 0.019599999999999999; // dimensionless
        const double var_t1519 = 2.3700000000000001 * var_chaste_interface__Ca_buffer__Cai; // dimensionless
        const double var_t1524 = (34.0 * var_chaste_interface__Ca_buffer__Cai) + 0.23799999999999999; // dimensionless
        const double var_t1525 = 13.800000000000001 * var_chaste_interface__Ca_buffer__Cai; // dimensionless
        const double var_t1530 = (100.0 * var_chaste_interface__Ca_buffer__Cai) + 0.059999999999999998; // dimensionless
        
        // Matrix entries
        DENSE_ELEM(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((((((((((((((( -0.0089999999999999993 + (((((0.01921122691 * var_t2) * var_chaste_interface__IKr_Xr_gate__Xr) / pow(var_t7, 2.0)) * var_t17) * var_t6)) + var_t60) + var_t70) - var_t128) - var_t159) - (((0.00016722408029999999 * var_t17) / pow(var_t164, 2.0)) * var_t163)) - var_t184) - (((0.43033148290000001 * var_t2) * var_chaste_interface__IKr_Xr_gate__Xr) * var_t185)) - var_t200) - var_t206) - var_t208) + ((((0.39504430130000001 * var_t215) / pow(var_t234, 2.0)) * var_t17) * (((( -0.24326999999999999 * var_t239) * var_t212) + (((0.039456396800000001 * var_t220) + (0.061749999999999999 * var_t225)) * var_t232)) + (((0.51429999999999998 * var_t226) / pow(var_t231, 2.0)) * var_t230)))) + (((((0.094218065860000005 * var_t1) * var_t239) * var_t256) * var_t17) * var_t212)) - ((0.39504430130000001 * var_t215) * var_t256)) - (var_t263 * var_t265)) - (var_t267 * var_chaste_interface__Itof_Y_gate__Y_tof)) - (0.001 / var_t164)) - 0.00022365699999999999) - 0.00026433000000000001) + (((((((((((((((((((( -0.109625 * ((0.11 / var_t276) + (0.89000000000000001 / var_t281))) - 2.7642999999999999e-05) - 3.2670000000000004e-05) + var_t302) + var_t313) - var_t338) + var_t353) + var_t368) + var_t379) - var_t392) - var_t398) + var_t402) - ((0.45000000000000001 * var_t382) * var_t411)) - ((((0.45000000000000001 * var_t340) * var_t415) * var_t405) * var_t334)) + (((((0.45000000000000001 * var_t340) * var_t415) * var_t408) * var_t348) * var_t331)) - var_t431) - var_t435) - var_t441) - var_t446) - var_t450)));
        DENSE_ELEM(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * (((var_t774 ? ( -0.01985294118 * var_t777) : ( -40.0 <= var_chaste_interface__cell__V) ? 0.0 : NAN) * (1.0 - var_chaste_interface__INa_h_gate__h)) - (((var_chaste_interface__cell__V <=  -40.0) ? ((0.28123999999999999 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (108500.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : var_t780 ? ((0.011711711709999999 / pow(0.13 + (0.13 * var_t793), 2.0)) * var_t793) : NAN) * var_chaste_interface__INa_h_gate__h));
        DENSE_ELEM(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * (((var_t774 ? (((((( -31073.016 * var_t819) + (1.5254334000000001e-06 * var_t822)) * var_t825) * var_t831) + (var_t835 * var_t831)) - ((((0.311 * var_t835) * var_t825) / pow(var_t830, 2.0)) * var_t829)) : ( -40.0 <= var_chaste_interface__cell__V) ? 0.0 : NAN) * (1.0 - var_chaste_interface__INa_j_gate__j)) - (((var_chaste_interface__cell__V <=  -40.0) ? ((( -0.001275024 * var_t848) / var_t852) + (((0.016701359999999998 * var_t848) / pow(var_t852, 2.0)) * var_t851)) : var_t780 ? ((( -7.604999998e-08 * var_t863) / var_t867) + (((0.029999999999999999 * var_t863) / pow(var_t867, 2.0)) * var_t866)) : NAN) * var_chaste_interface__INa_j_gate__j));
        DENSE_ELEM(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((((0.32000000000000001 * var_t919) * var_t920) - ((((0.032000000000000001 * var_t923) / pow(var_t918, 2.0)) * var_t920) * var_t917)) + ((0.0072727272729999999 * var_t931) * var_chaste_interface__INa_m_gate__m));
        DENSE_ELEM(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * ((((0.1333333333 / pow(var_t942, 2.0)) * var_t941) * var_t962) + (((1.0 / var_t942) - var_chaste_interface__IKr_Xr_gate__Xr) * ((((0.0013799999999999999 * var_t951) - (((0.00016974000000000001 * var_t946) / pow(var_t950, 2.0)) * var_t949)) + (0.00060999999999999997 * var_t959)) - (((8.8449999999999995e-05 * var_t954) / pow(var_t958, 2.0)) * var_t957))));
        DENSE_ELEM(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((((0.059880239520000003 / pow(var_t985, 2.0)) * var_t984) * var_t1004) + (((1.0 / var_t985) - var_chaste_interface__IKs_Xs_gate__Xs) * ((((7.1899999999999999e-05 * var_t994) - (((1.0641200000000001e-05 * var_t989) / pow(var_t993, 2.0)) * var_t992)) + (0.00013100000000000001 * var_t1001)) - (((8.9996999999999996e-06 * var_t989) / pow(var_t1000, 2.0)) * var_t999))));
        DENSE_ELEM(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * (((0.066666666666666666 * var_t1030) * var_t1036) + ((((0.59999999999999998 * (var_t1039 - var_chaste_interface__Itos_X_gate__X_tos)) / pow(var_t1035, 2.0)) / pow(var_t1032, 2.0)) * var_t1031));
        DENSE_ELEM(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((( -0.10000000000000001 * var_t1056) * var_t1063) + (((300.0 * (var_t1066 - var_chaste_interface__Itos_Y_gate__Y_tos)) / pow(var_t1062, 2.0)) * var_t1073));
        DENSE_ELEM(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * ((( -0.10000000000000001 * var_t1056) * var_t1079) + (((280.0 * (var_t1066 - var_chaste_interface__Itos_R_gate__R_tos)) / pow(var_t1078, 2.0)) * var_t1073));
        DENSE_ELEM(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * (((0.066666666666666666 * var_t1030) * var_t1094) + ((((0.007777777778 * (var_t1039 - var_chaste_interface__Itof_X_gate__X_tof)) / pow(var_t1093, 2.0)) * var_chaste_interface__cell__V) * var_t1091));
        DENSE_ELEM(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * ((( -0.10000000000000001 * var_t1056) * var_t1106) + (((0.0050000000000000001 * (var_t1066 - var_chaste_interface__Itof_Y_gate__Y_tof)) / pow(var_t1105, 2.0)) * var_t1056));
        DENSE_ELEM(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * ((((((0.16666666666666666 * var_t1120) * var_t1118) * var_t1126) - (((0.16666666666666666 * var_t1129) * var_t1118) * var_t1126)) - ((((0.16666666666666666 * var_t1133) / pow(var_t1122, 2.0)) * var_t1125) * var_t1118)) + ((0.035000000000000003 * var_t1133) * var_t1123));
        DENSE_ELEM(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * ((((( -0.27777777780000001 / pow(var_t1148, 2.0)) * var_t1147) + ((0.029999999999999999 / pow(var_t1156, 2.0)) * var_t1155)) * var_t1167) + (((0.019699999999999999 * (((1.0 / var_t1148) + (0.59999999999999998 / var_t1156)) - var_chaste_interface__ICaL_f_gate__f)) * (( -0.0022713799999999999 * var_chaste_interface__cell__V) - 0.032935010000000001)) * var_t1165));
        DENSE_ELEM(rJacobian, 18, 0) = var_chaste_interface__environment__fake_dt * (( -2197929.7642109999 * (((((((var_t208 + (3.0 * var_t159)) - (3.0 * var_t313)) + 0.00026433000000000001) - (3.0 * var_t60)) + var_t450) + var_t338) - var_t353)) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 19, 0) = var_chaste_interface__environment__fake_dt * (( -81555835.373689994 * (((((((var_t206 + (3.0 * var_t128)) - (3.0 * var_t302)) + 3.2670000000000004e-05) - (3.0 * var_t70)) + var_t392) + var_t398) - var_t402)) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 24, 0) = var_chaste_interface__environment__fake_dt * ((( -7957747155000000.0 * (((((var_t431 + var_t446) - var_t368) - (2.0 * var_t159)) + (2.0 * var_t313)) + 0.00022365699999999999)) * 1.3809999999999999e-10) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 25, 0) = var_chaste_interface__environment__fake_dt * ((( -2.952781874e+17 * (((((var_t435 + var_t441) - var_t379) - (2.0 * var_t128)) + (2.0 * var_t302)) + 2.7642999999999999e-05)) * 1.3809999999999999e-10) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t207) * var_t453) * var_t458) - ((var_t201 * var_t453) * var_t465)));
        DENSE_ELEM(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * ((-(var_t803 ? (0.13500000000000001 * var_t777) : 0.0)) - (var_t803 ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : (1.0 / (0.13 + (0.13 * var_t793)))));
        DENSE_ELEM(rJacobian, 18, 1) = var_chaste_interface__environment__fake_dt * (( -15915494310000000.0 * var_t1258) * var_t1260);
        DENSE_ELEM(rJacobian, 19, 1) = var_chaste_interface__environment__fake_dt * (( -5.905563749e+17 * var_t1323) * var_t1325);
        DENSE_ELEM(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t207) * var_t204) * var_t458) - ((var_t201 * var_t204) * var_t465)));
        DENSE_ELEM(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * ((-(var_t803 ? (((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (var_chaste_interface__cell__V + 37.780000000000001)) / (1.0 + exp((0.311 * var_chaste_interface__cell__V) + 24.640529999999998))) : 0.0)) - (var_t803 ? ((0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp(( -0.13780000000000001 * var_chaste_interface__cell__V) - 5.5312919999999997))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp((-var_t907) - 3.2000000000000002)))));
        DENSE_ELEM(rJacobian, 18, 2) = var_chaste_interface__environment__fake_dt * (((( -15915494310000000.0 * var_t1258) * var_chaste_interface__INa_h_gate__h) * var_t458) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 19, 2) = var_chaste_interface__environment__fake_dt * (((( -5.905563749e+17 * var_t1323) * var_chaste_interface__INa_h_gate__h) * var_t465) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((( -3.0 * var_t207) * var_t202) * var_t475) * var_t458) - ((((3.0 * var_t201) * var_t202) * var_t475) * var_t465)));
        DENSE_ELEM(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * ((( -0.32000000000000001 * var_t923) * var_t919) - (0.080000000000000002 * var_t931));
        DENSE_ELEM(rJacobian, 18, 3) = var_chaste_interface__environment__fake_dt * (( -5868472.4704433689 * var_t1268) * var_t1260);
        DENSE_ELEM(rJacobian, 19, 3) = var_chaste_interface__environment__fake_dt * (( -26913425.677875001 * var_t1268) * var_t1325);
        DENSE_ELEM(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((( -0.43033148290000001 * var_t2) * var_t185) * var_t17));
        DENSE_ELEM(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (-var_t962);
        DENSE_ELEM(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((( -2.0 * var_t189) * var_t198) * var_chaste_interface__IKs_Xs_gate__Xs) * var_t495) - ((((2.0 * var_t170) * var_t181) * var_chaste_interface__IKs_Xs_gate__Xs) * var_t495)));
        DENSE_ELEM(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t1004);
        DENSE_ELEM(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_Itos__G_tos) * var_t265) * var_t17));
        DENSE_ELEM(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * (-var_t1036);
        DENSE_ELEM(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t504));
        DENSE_ELEM(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (-var_t1063);
        DENSE_ELEM(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ( -0.5 * var_t504));
        DENSE_ELEM(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t1079);
        DENSE_ELEM(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (( -0.02 * var_chaste_interface__Itof_Y_gate__Y_tof) * var_t17));
        DENSE_ELEM(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t1094);
        DENSE_ELEM(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t267) * var_t17));
        DENSE_ELEM(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (-var_t1106);
        DENSE_ELEM(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((( -0.45000000000000001 * var_t512) * var_t448) - ((1.8 * var_t512) * var_t429)) - ((1.8 * var_t512) * var_t433)) - ((0.45000000000000001 * var_t512) * var_t390)) - ((0.45000000000000001 * var_t512) * var_t411)));
        DENSE_ELEM(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (((-var_t1119) * var_t1123) * var_t1125);
        DENSE_ELEM(rJacobian, 18, 11) = var_chaste_interface__environment__fake_dt * (( -7161972440000000.0 * var_t1274) * var_t1277);
        DENSE_ELEM(rJacobian, 19, 11) = var_chaste_interface__environment__fake_dt * (( -2.657503687e+17 * var_t1274) * var_t1337);
        DENSE_ELEM(rJacobian, 24, 11) = var_chaste_interface__environment__fake_dt * ((( -14323944880000000.0 * var_t1415) * var_t1416) * var_t1422);
        DENSE_ELEM(rJacobian, 25, 11) = var_chaste_interface__environment__fake_dt * ((( -5.315007373e+17 * var_t1415) * var_t1462) * var_t1466);
        DENSE_ELEM(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((( -0.45000000000000001 * var_t525) * var_t448) - ((1.8 * var_t525) * var_t429)) - ((1.8 * var_t525) * var_t433)) - ((0.45000000000000001 * var_t525) * var_t390)) - ((0.45000000000000001 * var_t525) * var_t411)));
        DENSE_ELEM(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (-var_t1167);
        DENSE_ELEM(rJacobian, 18, 12) = var_chaste_interface__environment__fake_dt * (( -7161972440000000.0 * var_t1282) * var_t1277);
        DENSE_ELEM(rJacobian, 19, 12) = var_chaste_interface__environment__fake_dt * (( -2.657503687e+17 * var_t1282) * var_t1337);
        DENSE_ELEM(rJacobian, 24, 12) = var_chaste_interface__environment__fake_dt * ((( -14323944880000000.0 * var_t1425) * var_t1416) * var_t1422);
        DENSE_ELEM(rJacobian, 25, 12) = var_chaste_interface__environment__fake_dt * ((( -5.315007373e+17 * var_t1425) * var_t1462) * var_t1466);
        DENSE_ELEM(rJacobian, 0, 13) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((0.45000000000000001 * var_t539) * 3.8798292719927158e-08) * var_t447) + (((1.8 * var_t539) * 3.8798292719927158e-08) * var_t428)) + (((0.45000000000000001 * var_t539) * 3.8798292719927158e-08) * var_t410)));
        DENSE_ELEM(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (( -1.7 * var_chaste_interface__Ca_buffer__Ca_SL) - 0.011900000000000001);
        DENSE_ELEM(rJacobian, 18, 13) = var_chaste_interface__environment__fake_dt * (((((7161972440000000.0 * var_t1287) * 0.0032258064516129032) * 0.10000000000000001) * 1.4999999999999999e-08) * var_t1276);
        DENSE_ELEM(rJacobian, 24, 13) = var_chaste_interface__environment__fake_dt * ((14323944880000000.0 * var_t1429) * var_t1422);
        DENSE_ELEM(rJacobian, 0, 14) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((1.8 * var_t539) * 3.491846344793444e-07) * var_t432) + (((0.45000000000000001 * var_t539) * 3.491846344793444e-07) * var_t389)) + (((0.45000000000000001 * var_t539) * 3.491846344793444e-07) * var_t410)));
        DENSE_ELEM(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * (( -1.7 * var_chaste_interface__Ca_buffer__Ca_jct) - 0.011900000000000001);
        DENSE_ELEM(rJacobian, 19, 14) = var_chaste_interface__environment__fake_dt * (((((2.657503687e+17 * var_t1287) * 0.0032258064516129032) * 0.90000000000000002) * 1.4999999999999999e-08) * var_t1336);
        DENSE_ELEM(rJacobian, 25, 14) = var_chaste_interface__environment__fake_dt * ((5.315007373e+17 * var_t1429) * var_t1466);
        DENSE_ELEM(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * (( -0.0050000000000000001 - var_t1196) - var_t1199);
        DENSE_ELEM(rJacobian, 16, 15) = var_chaste_interface__environment__fake_dt * (-var_t1199);
        DENSE_ELEM(rJacobian, 17, 15) = var_chaste_interface__environment__fake_dt * (var_t1199);
        DENSE_ELEM(rJacobian, 15, 16) = var_chaste_interface__environment__fake_dt * ( -0.0050000000000000001);
        DENSE_ELEM(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * ( -0.065000000000000002 - var_t1199);
        DENSE_ELEM(rJacobian, 17, 16) = var_chaste_interface__environment__fake_dt * (0.0050000000000000001);
        DENSE_ELEM(rJacobian, 15, 17) = var_chaste_interface__environment__fake_dt * (0.055);
        DENSE_ELEM(rJacobian, 16, 17) = var_chaste_interface__environment__fake_dt * (var_t1196 - var_t1199);
        DENSE_ELEM(rJacobian, 17, 17) = var_chaste_interface__environment__fake_dt * ( -0.059999999999999998 - var_t1196);
        DENSE_ELEM(rJacobian, 23, 17) = var_chaste_interface__environment__fake_dt * (-var_t1369);
        DENSE_ELEM(rJacobian, 25, 17) = var_chaste_interface__environment__fake_dt * (64.935064920000002 * var_t1369);
        DENSE_ELEM(rJacobian, 0, 18) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t567) - var_t577) - var_t586) + var_t601) - var_t603) - var_t609));
        DENSE_ELEM(rJacobian, 18, 18) = var_chaste_interface__environment__fake_dt * (((( -2197929.7642109999 * (((((var_t567 + (3.0 * var_t586)) - (3.0 * var_t601)) + var_t603) + (3.0 * var_t577)) + var_t609)) * 9.8648950219489296e-10) - 2.5099906646044023) - var_t1302);
        DENSE_ELEM(rJacobian, 19, 18) = var_chaste_interface__environment__fake_dt * (1.0293738384295064);
        DENSE_ELEM(rJacobian, 20, 18) = var_chaste_interface__environment__fake_dt * (var_t1302);
        DENSE_ELEM(rJacobian, 22, 18) = var_chaste_interface__environment__fake_dt * (0.076376893534800719);
        DENSE_ELEM(rJacobian, 24, 18) = var_chaste_interface__environment__fake_dt * ((( -15915494310000000.0 * ((-var_t586) + var_t601)) * 1.3809999999999999e-10) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 0, 19) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t618) - var_t626) + var_t641) - var_t645) - var_t647) - var_t650));
        DENSE_ELEM(rJacobian, 18, 19) = var_chaste_interface__environment__fake_dt * (0.027741624966091612);
        DENSE_ELEM(rJacobian, 19, 19) = var_chaste_interface__environment__fake_dt * (((( -81555835.373689994 * (((((var_t645 + (3.0 * var_t626)) - (3.0 * var_t641)) + var_t647) + (3.0 * var_t618)) + var_t650)) * 9.8648950219489296e-10) - 1.0293738384295064) - var_t1356);
        DENSE_ELEM(rJacobian, 21, 19) = var_chaste_interface__environment__fake_dt * (var_t1356);
        DENSE_ELEM(rJacobian, 25, 19) = var_chaste_interface__environment__fake_dt * ((( -5.905563748e+17 * ((-var_t626) + var_t641)) * 1.3809999999999999e-10) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 18, 20) = var_chaste_interface__environment__fake_dt * (var_t1306);
        DENSE_ELEM(rJacobian, 20, 20) = var_chaste_interface__environment__fake_dt * (-var_t1306);
        DENSE_ELEM(rJacobian, 19, 21) = var_chaste_interface__environment__fake_dt * (var_t1359);
        DENSE_ELEM(rJacobian, 21, 21) = var_chaste_interface__environment__fake_dt * (-var_t1359);
        DENSE_ELEM(rJacobian, 0, 22) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t200) * var_t654) - (var_t184 * var_t654)));
        DENSE_ELEM(rJacobian, 18, 22) = var_chaste_interface__environment__fake_dt * (2.4822490403331354);
        DENSE_ELEM(rJacobian, 22, 22) = var_chaste_interface__environment__fake_dt * ( -0.076376893534800719);
        DENSE_ELEM(rJacobian, 15, 23) = var_chaste_interface__environment__fake_dt * (((var_t1206 * var_t1207) * var_t1208) - var_t1220);
        DENSE_ELEM(rJacobian, 16, 23) = var_chaste_interface__environment__fake_dt * ((-var_t1230) + (((var_t1213 * var_t74) * var_t1231) * var_t1219));
        DENSE_ELEM(rJacobian, 17, 23) = var_chaste_interface__environment__fake_dt * (var_t1220 + var_t1230);
        DENSE_ELEM(rJacobian, 23, 23) = var_chaste_interface__environment__fake_dt * (((((-var_t1383) - var_t1390) - var_t1391) - var_t1392) - var_t1395);
        DENSE_ELEM(rJacobian, 25, 23) = var_chaste_interface__environment__fake_dt * (var_t1479 + var_t1480);
        DENSE_ELEM(rJacobian, 26, 23) = var_chaste_interface__environment__fake_dt * ((0.053846153850000002 * var_t1383) + (0.053846153850000002 * var_t1390));
        DENSE_ELEM(rJacobian, 31, 23) = var_chaste_interface__environment__fake_dt * (var_t1395);
        DENSE_ELEM(rJacobian, 0, 24) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t669) - ((((((0.31666666669999999 * var_t170) / pow(var_t178, 2.0)) * var_t279) * 0.43429448190325176) * var_t177) * var_t675)) - (3.0 * var_t688)) + var_t691) + var_t697) - var_t701) - ((((var_t708 * 0.89000000000000001) / pow(var_t281, 2.0)) * 0.10000000000000001) / var_t130)) - var_t720));
        DENSE_ELEM(rJacobian, 13, 24) = var_chaste_interface__environment__fake_dt * (1.7 - (1.7 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL));
        DENSE_ELEM(rJacobian, 18, 24) = var_chaste_interface__environment__fake_dt * (( -2197929.7642109999 * (((9.0 * var_t688) - (3.0 * var_t691)) - (3.0 * var_t697))) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 24, 24) = var_chaste_interface__environment__fake_dt * (((((( -7957747155000000.0 * (((((var_t720 - (6.0 * var_t688)) + (2.0 * var_t691)) + (2.0 * var_t697)) + var_t701) + var_t669)) * 1.3809999999999999e-10) * 9.8648950219489296e-10) - 6.8902331259964313) - var_t1446) - var_t1449);
        DENSE_ELEM(rJacobian, 25, 24) = var_chaste_interface__environment__fake_dt * (46.32435219036288);
        DENSE_ELEM(rJacobian, 26, 24) = var_chaste_interface__environment__fake_dt * (0.17359359486020229);
        DENSE_ELEM(rJacobian, 27, 24) = var_chaste_interface__environment__fake_dt * (var_t1446);
        DENSE_ELEM(rJacobian, 29, 24) = var_chaste_interface__environment__fake_dt * (var_t1449);
        DENSE_ELEM(rJacobian, 0, 25) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t731) - ((((((0.31666666669999999 * var_t189) / pow(var_t195, 2.0)) * var_t274) * 0.43429448190325176) * var_t194) * var_t675)) - (3.0 * var_t749)) + var_t752) + var_t758) - var_t762) - ((((var_t708 * 0.11) / pow(var_t276, 2.0)) * 0.10000000000000001) / var_t74)) - var_t772));
        DENSE_ELEM(rJacobian, 14, 25) = var_chaste_interface__environment__fake_dt * (1.7 - (1.7 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct));
        DENSE_ELEM(rJacobian, 15, 25) = var_chaste_interface__environment__fake_dt * (((-var_t1195) * var_chaste_interface__Jrel_SR__R) - var_t1224);
        DENSE_ELEM(rJacobian, 16, 25) = var_chaste_interface__environment__fake_dt * (var_t1236 + (((2.0 * var_t1198) * var_chaste_interface__Ca_buffer__Ca_jct) * var_t1231));
        DENSE_ELEM(rJacobian, 17, 25) = var_chaste_interface__environment__fake_dt * (var_t1224 - var_t1236);
        DENSE_ELEM(rJacobian, 19, 25) = var_chaste_interface__environment__fake_dt * (( -81555835.373689994 * (((9.0 * var_t749) - (3.0 * var_t752)) - (3.0 * var_t758))) * 9.8648950219489296e-10);
        DENSE_ELEM(rJacobian, 23, 25) = var_chaste_interface__environment__fake_dt * (var_t1391 + var_t1392);
        DENSE_ELEM(rJacobian, 24, 25) = var_chaste_interface__environment__fake_dt * (1.2484412925639501);
        DENSE_ELEM(rJacobian, 25, 25) = var_chaste_interface__environment__fake_dt * (((((((( -2.952781874e+17 * (((((var_t772 - (6.0 * var_t749)) + (2.0 * var_t752)) + (2.0 * var_t758)) + var_t762) + var_t731)) * 1.3809999999999999e-10) * 9.8648950219489296e-10) - 46.32435219036288) - var_t1479) - var_t1480) - var_t1492) - var_t1495);
        DENSE_ELEM(rJacobian, 28, 25) = var_chaste_interface__environment__fake_dt * (var_t1492);
        DENSE_ELEM(rJacobian, 30, 25) = var_chaste_interface__environment__fake_dt * (var_t1495);
        DENSE_ELEM(rJacobian, 23, 26) = var_chaste_interface__environment__fake_dt * (var_t1402 - var_t1405);
        DENSE_ELEM(rJacobian, 24, 26) = var_chaste_interface__environment__fake_dt * (5.6417918343842954);
        DENSE_ELEM(rJacobian, 26, 26) = var_chaste_interface__environment__fake_dt * (((((((( -0.053846153850000002 * var_t1402) + (0.053846153850000002 * var_t1405)) - 0.17359359486020229) - var_t1507) - var_t1509) - var_t1511) - var_t1513) - var_t1515);
        DENSE_ELEM(rJacobian, 32, 26) = var_chaste_interface__environment__fake_dt * (var_t1507);
        DENSE_ELEM(rJacobian, 33, 26) = var_chaste_interface__environment__fake_dt * (var_t1509);
        DENSE_ELEM(rJacobian, 35, 26) = var_chaste_interface__environment__fake_dt * (var_t1511);
        DENSE_ELEM(rJacobian, 36, 26) = var_chaste_interface__environment__fake_dt * (var_t1513);
        DENSE_ELEM(rJacobian, 38, 26) = var_chaste_interface__environment__fake_dt * (var_t1515);
        DENSE_ELEM(rJacobian, 24, 27) = var_chaste_interface__environment__fake_dt * (var_t1454);
        DENSE_ELEM(rJacobian, 27, 27) = var_chaste_interface__environment__fake_dt * (-var_t1454);
        DENSE_ELEM(rJacobian, 25, 28) = var_chaste_interface__environment__fake_dt * (var_t1498);
        DENSE_ELEM(rJacobian, 28, 28) = var_chaste_interface__environment__fake_dt * (-var_t1498);
        DENSE_ELEM(rJacobian, 24, 29) = var_chaste_interface__environment__fake_dt * (var_t1455);
        DENSE_ELEM(rJacobian, 29, 29) = var_chaste_interface__environment__fake_dt * (-var_t1455);
        DENSE_ELEM(rJacobian, 25, 30) = var_chaste_interface__environment__fake_dt * (var_t1499);
        DENSE_ELEM(rJacobian, 30, 30) = var_chaste_interface__environment__fake_dt * (-var_t1499);
        DENSE_ELEM(rJacobian, 23, 31) = var_chaste_interface__environment__fake_dt * (var_t1408);
        DENSE_ELEM(rJacobian, 31, 31) = var_chaste_interface__environment__fake_dt * (-var_t1408);
        DENSE_ELEM(rJacobian, 26, 32) = var_chaste_interface__environment__fake_dt * (var_t1518);
        DENSE_ELEM(rJacobian, 32, 32) = var_chaste_interface__environment__fake_dt * (-var_t1518);
        DENSE_ELEM(rJacobian, 26, 33) = var_chaste_interface__environment__fake_dt * ((var_t1519 + 3.1999999999999999e-05) + 0.0030000000000000001);
        DENSE_ELEM(rJacobian, 33, 33) = var_chaste_interface__environment__fake_dt * ((-var_t1519) - 3.1999999999999999e-05);
        DENSE_ELEM(rJacobian, 34, 33) = var_chaste_interface__environment__fake_dt * ( -0.0030000000000000001);
        DENSE_ELEM(rJacobian, 26, 34) = var_chaste_interface__environment__fake_dt * ((var_t1519 + 0.0030000000000000001) + 0.0033300000000000001);
        DENSE_ELEM(rJacobian, 33, 34) = var_chaste_interface__environment__fake_dt * (-var_t1519);
        DENSE_ELEM(rJacobian, 34, 34) = var_chaste_interface__environment__fake_dt * ( -0.0063300000000000006);
        DENSE_ELEM(rJacobian, 26, 35) = var_chaste_interface__environment__fake_dt * (var_t1524);
        DENSE_ELEM(rJacobian, 35, 35) = var_chaste_interface__environment__fake_dt * (-var_t1524);
        DENSE_ELEM(rJacobian, 26, 36) = var_chaste_interface__environment__fake_dt * ((var_t1525 + 0.00046000000000000001) + 0.015699999999999999);
        DENSE_ELEM(rJacobian, 36, 36) = var_chaste_interface__environment__fake_dt * ((-var_t1525) - 0.00046000000000000001);
        DENSE_ELEM(rJacobian, 37, 36) = var_chaste_interface__environment__fake_dt * ( -0.015699999999999999);
        DENSE_ELEM(rJacobian, 26, 37) = var_chaste_interface__environment__fake_dt * ((var_t1525 + 0.015699999999999999) + 5.7000000000000003e-05);
        DENSE_ELEM(rJacobian, 36, 37) = var_chaste_interface__environment__fake_dt * (-var_t1525);
        DENSE_ELEM(rJacobian, 37, 37) = var_chaste_interface__environment__fake_dt * ( -0.015757);
        DENSE_ELEM(rJacobian, 26, 38) = var_chaste_interface__environment__fake_dt * (var_t1530);
        DENSE_ELEM(rJacobian, 38, 38) = var_chaste_interface__environment__fake_dt * (-var_t1530);
    }
    
    N_Vector CellShannon2004FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : mp_membrane_voltage_modifier->Calc(NV_Ith_S(rY, 0), var_chaste_interface__environment__time));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = mp_membrane_fast_sodium_current_h_gate_modifier->Calc(NV_Ith_S(rY, 1), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = mp_membrane_fast_sodium_current_j_gate_modifier->Calc(NV_Ith_S(rY, 2), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = mp_membrane_fast_sodium_current_m_gate_modifier->Calc(NV_Ith_S(rY, 3), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__ICaL_d_gate__d = mp_membrane_L_type_calcium_current_d_gate_modifier->Calc(NV_Ith_S(rY, 11), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = mp_membrane_L_type_calcium_current_f_gate_modifier->Calc(NV_Ith_S(rY, 12), var_chaste_interface__environment__time);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Nai = mp_cytosolic_sodium_concentration_modifier->Calc(NV_Ith_S(rY, 22), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = mp_JSR_calcium_concentration_modifier->Calc(NV_Ith_S(rY, 23), var_chaste_interface__environment__time);
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.737475e-4
        
        
        // Mathematics
        const double var_model_parameters__Nao = mp_extracellular_sodium_concentration_modifier->Calc(NV_Ith_S(mParameters, 6), var_chaste_interface__environment__time); // millimolar
        const double var_reversal_potentials__E_Na_jct = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_jct); // millivolt
        const double var_INa__G_INa = mp_membrane_fast_sodium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 8), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__i_Na_jct = 0.11 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__E_Na_SL = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_SL); // millivolt
        const double var_INa__i_Na_SL = 0.89000000000000001 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL); // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
        const double var_model_parameters__Ko = mp_extracellular_potassium_concentration_modifier->Calc(NV_Ith_S(mParameters, 5), var_chaste_interface__environment__time); // millimolar
        const double var_IKr__G_IKr_const = mp_membrane_rapid_delayed_rectifier_potassium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 9), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_model_parameters__Ki = mp_cytosolic_potassium_concentration_modifier->Calc(NV_Ith_S(mParameters, 3), var_chaste_interface__environment__time); // millimolar
        const double var_reversal_potentials__E_K = 26.71330258589418 * log(var_model_parameters__Ko / var_model_parameters__Ki); // millivolt
        const double var_IKr__i_Kr = (var_IKr__G_IKr_const * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((33.0 + var_chaste_interface__cell__V) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_IKs__G_Ks_Max = mp_membrane_slow_delayed_rectifier_potassium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 10), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_IKs__E_Ks = 26.71330258589418 * log((var_model_parameters__Ko + (0.018329999999999999 * var_model_parameters__Nao)) / (var_model_parameters__Ki + (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai))); // millivolt
        const double var_IKs__i_Ks = (0.11 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_jct * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)) + (0.89000000000000001 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_SL * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)); // microA_per_microF
        const double var_Itos__G_tos = mp_membrane_transient_outward_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 12), var_chaste_interface__environment__time); // milliS_per_microF
        const double var_Itos__i_tos = var_Itos__G_tos * var_chaste_interface__Itos_X_gate__X_tos * (var_chaste_interface__Itos_Y_gate__Y_tos + (0.5 * var_chaste_interface__Itos_R_gate__R_tos)) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 59.215000000000003)))); // per_millisecond
        const double var_IK1__i_K1 = (0.90000000000000002 * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 594.30999999999995))))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_model_parameters__Cao = mp_extracellular_calcium_concentration_modifier->Calc(NV_Ith_S(mParameters, 4), var_chaste_interface__environment__time); // millimolar
        const double var_INaCa__V_max = mp_membrane_sodium_calcium_exchanger_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 11), var_chaste_interface__environment__time); // microA_per_microF
        const double var_INaCa__i_NaCa_jct = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_jct, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.11) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_jct * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 + (var_chaste_interface__Ca_buffer__Ca_jct * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)); // microA_per_microF
        const double var_INaCa__i_NaCa_SL = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_SL, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.89000000000000001) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_SL * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 + (var_chaste_interface__Ca_buffer__Ca_SL * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_ICaL__temp = (var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V * 4189209851.25) * 3.8798292719927153e-07; // coulomb_per_mole
        const double var_ICaL_fCa_gate__fCa_SL = mp_membrane_L_type_calcium_current_fCa_gate_modifier->Calc(1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL, var_chaste_interface__environment__time); // dimensionless
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * ((0.75 * var_chaste_interface__Na_buffer__Na_SL * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.5e-09) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__PCa = mp_membrane_L_type_calcium_current_conductance_modifier->Calc(NV_Ith_S(mParameters, 7), var_chaste_interface__environment__time); // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 0.40000000000000002) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 3.6000000000000001) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * ((0.75 * var_chaste_interface__Na_buffer__Na_jct * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.3499999999999998e-08) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + ((var_ICaL__temp * ((var_ICaL_fCa_gate__fCa_SL * 0.10000000000000001) + (var_ICaL_fCa_gate__fCa_jct * 0.90000000000000002)) * 2.7000000000000001e-07 * ((0.75 * var_model_parameters__Ki * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Ko))) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0)); // microA_per_microF
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_ICaL_f_gate__tau_f = mp_membrane_L_type_calcium_current_f_gate_tau_modifier->Calc(1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_chaste_interface__cell__V + 14.5), 2.0))) + 0.02), var_chaste_interface__environment__time); // millisecond
        const double var_Jrel_SR__ks = mp_SR_release_current_max_modifier->Calc(NV_Ith_S(mParameters, 1), var_chaste_interface__environment__time); // per_millisecond
        const double var_Jrel_SR__j_rel_SR = mp_SR_release_current_modifier->Calc(var_Jrel_SR__ks * var_chaste_interface__Jrel_SR__O * (var_chaste_interface__Ca_buffer__Ca_SR - var_chaste_interface__Ca_buffer__Ca_jct), var_chaste_interface__environment__time); // millimolar_per_millisecond
        const double var_chaste_interface__Itos__i_tos = mp_membrane_transient_outward_current_modifier->Calc(var_Itos__i_tos, var_chaste_interface__environment__time); // microA_per_microF
        const double var_chaste_interface__INa__i_Na = mp_membrane_fast_sodium_current_modifier->Calc(var_INa__i_Na, var_chaste_interface__environment__time); // microA_per_microF
        const double var_chaste_interface__ICaL__i_CaL = mp_membrane_L_type_calcium_current_modifier->Calc(var_ICaL__i_CaL, var_chaste_interface__environment__time); // microA_per_microF
        const double var_chaste_interface__IKr__i_Kr = mp_membrane_rapid_delayed_rectifier_potassium_current_modifier->Calc(var_IKr__i_Kr, var_chaste_interface__environment__time); // microA_per_microF
        const double var_chaste_interface__IK1__i_K1 = mp_membrane_inward_rectifier_potassium_current_modifier->Calc(var_IK1__i_K1, var_chaste_interface__environment__time); // microA_per_microF
        const double var_chaste_interface__IKs__i_Ks = mp_membrane_slow_delayed_rectifier_potassium_current_modifier->Calc(var_IKs__i_Ks, var_chaste_interface__environment__time); // microA_per_microF
        const double var_chaste_interface__INaCa__i_NaCa = mp_membrane_sodium_calcium_exchanger_current_modifier->Calc(var_INaCa__i_NaCa, var_chaste_interface__environment__time); // microA_per_microF
        
        N_Vector dqs = N_VNew_Serial(12);
        NV_Ith_S(dqs, 0) = var_Jrel_SR__j_rel_SR;
        NV_Ith_S(dqs, 1) = var_chaste_interface__ICaL__i_CaL;
        NV_Ith_S(dqs, 2) = var_ICaL_fCa_gate__fCa_SL;
        NV_Ith_S(dqs, 3) = var_ICaL_f_gate__tau_f;
        NV_Ith_S(dqs, 4) = var_chaste_interface__INa__i_Na;
        NV_Ith_S(dqs, 5) = var_chaste_interface__IK1__i_K1;
        NV_Ith_S(dqs, 6) = var_chaste_interface__IKr__i_Kr;
        NV_Ith_S(dqs, 7) = var_chaste_interface__IKs__i_Ks;
        NV_Ith_S(dqs, 8) = var_chaste_interface__INaCa__i_NaCa;
        NV_Ith_S(dqs, 9) = var_chaste_interface__cell__i_Stim;
        NV_Ith_S(dqs, 10) = var_chaste_interface__Itos__i_tos;
        NV_Ith_S(dqs, 11) = var_chaste_interface__environment__time;
        return dqs;
    }
    
template<>
void OdeSystemInformation<CellShannon2004FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "shannon_2004";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-8.556885e1);

    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.867005e-1);

    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.91562e-1);

    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.405627e-3);

    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.641386e-3);

    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.412034e-3);

    this->mVariableNames.push_back("Itos_X_gate__X_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    this->mVariableNames.push_back("Itos_Y_gate__Y_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    this->mVariableNames.push_back("Itos_R_gate__R_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9946);

    this->mVariableNames.push_back("Itof_X_gate__X_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    this->mVariableNames.push_back("Itof_Y_gate__Y_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.175662e-6);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000681);

    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_SL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.452605e-2);

    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_jct");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.421991e-2);

    this->mVariableNames.push_back("Jrel_SR__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.884332e-1);

    this->mVariableNames.push_back("Jrel_SR__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.024274e-7);

    this->mVariableNames.push_back("Jrel_SR__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.156628e-7);

    this->mVariableNames.push_back("Na_buffer__Na_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80733);

    this->mVariableNames.push_back("Na_buffer__Na_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80329);

    this->mVariableNames.push_back("Na_buffer__Na_SL_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.720854e-1);

    this->mVariableNames.push_back("Na_buffer__Na_jct_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.539892);

    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80853);

    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.545201e-1);

    this->mVariableNames.push_back("Ca_buffer__Ca_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.031812e-4);

    this->mVariableNames.push_back("Ca_buffer__Ca_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.737475e-4);

    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.597401e-5);

    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.110363e-1);

    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.566355e-3);

    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.297378e-2);

    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.347888e-3);

    this->mVariableNames.push_back("Ca_buffer__Ca_Calsequestrin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.242988);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.773191e-3);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.078283e-1);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.524002e-2);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Calmodulin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.911916e-4);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.298754e-3);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.381982e-1);

    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.143165e-3);

    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_millisecond");
    
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_millisecond");
    
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");
    
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("litre_per_farad_millisecond");
    
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");
    
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");
    
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellShannon2004FromCellMLCvode)
#endif // CHASTE_CVODE
