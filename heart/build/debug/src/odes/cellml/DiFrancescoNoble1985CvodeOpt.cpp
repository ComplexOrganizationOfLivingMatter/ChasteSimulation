#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: difrancesco_noble_model_1985
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Thu May  5 09:14:46 2016
//! 
//! <autogenerated>

#include "DiFrancescoNoble1985CvodeOpt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<93; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
#define COVERAGE_IGNORE
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
#define COVERAGE_IGNORE
            _oob_0 = true;
#undef COVERAGE_IGNORE
        }
        return _oob_0;
    }
#undef COVERAGE_IGNORE

    ~CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables(const CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables&);
    CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables& operator= (const CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables&);
    CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 93;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][93];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = exp(-((var_chaste_interface__membrane__V * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = exp(0.5 * ((var_chaste_interface__membrane__V * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = exp(-(0.5 * ((var_chaste_interface__membrane__V * 0.00012027221933034354) * 311.24303709677417)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 1.0 / (1.0 - exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = pow(1.0 - exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 2.0), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 0.018716945411372737 * exp((0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] =  -0.018716945411372737 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = 2.0 * exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 2.2460334493647283 * (1.0 / (1.0 - exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = (8.0 * ((((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 1.4465406742646261e-08) * 1.040582726326743e-05) * 9309421124.3716221)) / pow(1.0 - exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = (((8.0 * ((((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 1.4465406742646261e-08) * 1.040582726326743e-05) * 9309421124.3716221)) * (1.0 / (1.0 - exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))))) * 2.0) * exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = 1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = (0.01 * ((((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 1.4465406742646261e-08) * 1.040582726326743e-05) * 9309421124.3716221)) * (1.0 / pow(1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = (0.01 * ((((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 1.4465406742646261e-08) * 1.040582726326743e-05) * 9309421124.3716221)) * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = 140.0 * exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = 0.0056150836234118212 * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = (((0.01 * ((((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 1.4465406742646261e-08) * 1.040582726326743e-05) * 9309421124.3716221)) * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))))) * 140.0) * exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 0.02 * exp((0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = exp((0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473) * 2744000.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = ((0.01 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473)) * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))))) * 6.4993004051833214;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = ((4.0 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473)) * (1.0 / (1.0 - exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))))) * 42.240905756816083;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = ((0.01 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473)) * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417))))) * exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = (var_chaste_interface__membrane__V + 10.0) * (1.0 / (1.0 - exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 2.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = ( -20.0 * exp(( -0.125 * var_chaste_interface__membrane__V) - 9.375)) - (2000.0 / ((320.0 * exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 7.5)) + 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] =  -2.5 * exp(( -0.125 * var_chaste_interface__membrane__V) - 9.375);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = 64000.0 / pow((320.0 * exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 7.5)) + 1.0, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] = exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 7.5);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = (-((fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * (var_chaste_interface__membrane__V + 41.0)) * (1.0 / (1.0 - exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 4.0999999999999996)))))) - (8000.0 * exp(( -0.056000000000000001 * var_chaste_interface__membrane__V) - 3.6960000000000002));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] = (fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 0.0 : ((200.0 * (1.0 / (1.0 - exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 4.0999999999999996)))) - (((20.0 * (var_chaste_interface__membrane__V + 41.0)) / pow(1.0 - exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 4.0999999999999996), 2.0)) * exp((-(0.10000000000000001 * var_chaste_interface__membrane__V)) - 4.0999999999999996)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = 448.0 * exp(( -0.056000000000000001 * var_chaste_interface__membrane__V) - 3.6960000000000002);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] = ( -0.050000000000000003 * exp(( -0.067000000000000004 * var_chaste_interface__membrane__V) - 2.8140000000000001)) - ((fabs(var_chaste_interface__membrane__V + 42.0) < 1.0000000000000001e-05) ? 2.5 : ((var_chaste_interface__membrane__V + 42.0) * (1.0 / (1.0 - exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 8.4000000000000004)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] =  -0.0033500000000000001 * exp(( -0.067000000000000004 * var_chaste_interface__membrane__V) - 2.8140000000000001);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][36] = (fabs(var_chaste_interface__membrane__V + 42.0) < 1.0000000000000001e-05) ? 0.0 : ((1.0 / (1.0 - exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 8.4000000000000004))) - (((0.20000000000000001 * (var_chaste_interface__membrane__V + 42.0)) / pow(1.0 - exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 8.4000000000000004), 2.0)) * exp((-(0.20000000000000001 * var_chaste_interface__membrane__V)) - 8.4000000000000004)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][37] = 2.0 * ((0.02 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473)) * 2744000.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][38] =  -0.63661977199999997 * (((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07) * (1.0 / (1.0 - exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][39] = ( -0.625 * ((var_chaste_interface__membrane__V + 34.0) * (1.0 / (exp((0.25 * var_chaste_interface__membrane__V) + 8.5) - 1.0)))) - (5.0 * (1.0 / (1.0 + exp(-((0.25 * var_chaste_interface__membrane__V) + 8.5)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][40] = 0.625 * (1.0 / (exp((0.25 * var_chaste_interface__membrane__V) + 8.5) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][41] = 0.15625 * ((var_chaste_interface__membrane__V + 34.0) / pow(exp((0.25 * var_chaste_interface__membrane__V) + 8.5) - 1.0, 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][42] = exp((0.25 * var_chaste_interface__membrane__V) + 8.5);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][43] = 1.25 * (1.0 / pow(1.0 + exp(-((0.25 * var_chaste_interface__membrane__V) + 8.5)), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][44] = exp(-((0.25 * var_chaste_interface__membrane__V) + 8.5));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][45] =  -0.0031830988610000001 * (((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07) * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][46] = -((0.02 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473)) * 2744000.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][47] = (0.02 * exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473)) * 2744000.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][48] = ( -4.0 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07)) * (96485.341499999995 * (1.0 / (1.0 - exp( -2.0 * (((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][49] = (0.01 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07)) * (96485.341499999995 * (1.0 / (1.0 - exp(-(((var_chaste_interface__membrane__V - 50.0) * 0.00012027221933034354) * 311.24303709677417)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][50] = (fabs(var_chaste_interface__membrane__V + 19.0) < 0.0001) ? 0.0 : ((30.0 * (1.0 / (1.0 - exp((-(0.25 * var_chaste_interface__membrane__V)) - 4.75)))) - (((7.5 * (var_chaste_interface__membrane__V + 19.0)) / pow(1.0 - exp((-(0.25 * var_chaste_interface__membrane__V)) - 4.75), 2.0)) * exp((-(0.25 * var_chaste_interface__membrane__V)) - 4.75)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][51] = (fabs(var_chaste_interface__membrane__V + 19.0) < 0.0001) ? 0.0 : ((12.0 * (1.0 / (exp((0.10000000000000001 * var_chaste_interface__membrane__V) + 1.8999999999999999) - 1.0))) - (((1.2 * (var_chaste_interface__membrane__V + 19.0)) / pow(exp((0.10000000000000001 * var_chaste_interface__membrane__V) + 1.8999999999999999) - 1.0, 2.0)) * exp((0.10000000000000001 * var_chaste_interface__membrane__V) + 1.8999999999999999)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][52] = (-((fabs(var_chaste_interface__membrane__V + 19.0) < 0.0001) ? 120.0 : ((30.0 * (var_chaste_interface__membrane__V + 19.0)) * (1.0 / (1.0 - exp((-(0.25 * var_chaste_interface__membrane__V)) - 4.75)))))) - ((fabs(var_chaste_interface__membrane__V + 19.0) < 0.0001) ? 120.0 : ((12.0 * (var_chaste_interface__membrane__V + 19.0)) * (1.0 / (exp((0.10000000000000001 * var_chaste_interface__membrane__V) + 1.8999999999999999) - 1.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][53] = (fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 0.0 : ((6.25 * (1.0 / (exp((0.25 * var_chaste_interface__membrane__V) + 8.5) - 1.0))) - ((1.5625 * ((var_chaste_interface__membrane__V + 34.0) / pow(exp((0.25 * var_chaste_interface__membrane__V) + 8.5) - 1.0, 2.0))) * exp((0.25 * var_chaste_interface__membrane__V) + 8.5)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][54] = 12.5 * (1.0 / pow(1.0 + exp(-((0.25 * var_chaste_interface__membrane__V) + 8.5)), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][55] = (-((fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 25.0 : (6.25 * ((var_chaste_interface__membrane__V + 34.0) * (1.0 / (exp((0.25 * var_chaste_interface__membrane__V) + 8.5) - 1.0)))))) - (50.0 * (1.0 / (1.0 + exp(-((0.25 * var_chaste_interface__membrane__V) + 8.5)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][56] = 0.041300000000000003 * (exp((0.082600000000000007 * var_chaste_interface__membrane__V) + 4.1299999999999999) / (1.0 + exp((0.057000000000000002 * var_chaste_interface__membrane__V) + 2.8500000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][57] = (0.028500000000000001 * exp((0.082600000000000007 * var_chaste_interface__membrane__V) + 4.1299999999999999)) / pow(1.0 + exp((0.057000000000000002 * var_chaste_interface__membrane__V) + 2.8500000000000001), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][58] = exp((0.057000000000000002 * var_chaste_interface__membrane__V) + 2.8500000000000001);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][59] = 0.078 * (exp(( -0.059999999999999998 * var_chaste_interface__membrane__V) - 1.2) / (1.0 + exp(( -0.040000000000000001 * var_chaste_interface__membrane__V) - 0.80000000000000004)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][60] = (0.051999999999999998 * exp(( -0.059999999999999998 * var_chaste_interface__membrane__V) - 1.2)) / pow(1.0 + exp(( -0.040000000000000001 * var_chaste_interface__membrane__V) - 0.80000000000000004), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][61] = exp(( -0.040000000000000001 * var_chaste_interface__membrane__V) - 0.80000000000000004);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][62] = ( -0.5 * (exp((0.082600000000000007 * var_chaste_interface__membrane__V) + 4.1299999999999999) / (1.0 + exp((0.057000000000000002 * var_chaste_interface__membrane__V) + 2.8500000000000001)))) - (1.3 * (exp(( -0.059999999999999998 * var_chaste_interface__membrane__V) - 1.2) / (1.0 + exp(( -0.040000000000000001 * var_chaste_interface__membrane__V) - 0.80000000000000004))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][63] =  -0.001941176471 * exp( -0.058823529411764705 * var_chaste_interface__membrane__V);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][64] = 4.125 / pow(1.0 + exp(( -0.125 * var_chaste_interface__membrane__V) - 1.25), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][65] = exp(( -0.125 * var_chaste_interface__membrane__V) - 1.25);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][66] = ( -0.033000000000000002 * exp( -0.058823529411764705 * var_chaste_interface__membrane__V)) - (33.0 / (1.0 + exp(( -0.125 * var_chaste_interface__membrane__V) - 1.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][67] = exp((-var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][68] = 1.0 - exp( -0.20000000000000001 * (var_chaste_interface__membrane__V + 10.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][69] = exp(( -0.5 * var_chaste_interface__membrane__V) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][70] = exp((var_chaste_interface__membrane__V * 0.5) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][71] = exp((var_chaste_interface__membrane__V *  -0.5) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][72] = ((var_chaste_interface__membrane__V - 50.0) * 60.0) / (26.713760659695648 * (1.0 - exp(((var_chaste_interface__membrane__V - 50.0) *  -2.0) * 0.037433890822745473)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][73] = 2.0 * exp(( -2.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][74] = ((var_chaste_interface__membrane__V - 50.0) * 0.14999999999999999) / (26.713760659695648 * (1.0 - exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][75] = exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][76] = 140.0 * exp(( -1.0 * (var_chaste_interface__membrane__V - 50.0)) * 0.037433890822745473);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][77] = 0.050000000000000003 * exp( -0.067000000000000004 * ((var_chaste_interface__membrane__V + 52.0) - 10.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][78] = (fabs((var_chaste_interface__membrane__V + 52.0) - 10.0) < 1.0000000000000001e-05) ? 2.5 : ((1.0 * ((var_chaste_interface__membrane__V + 52.0) - 10.0)) / (1.0 - exp( -0.20000000000000001 * ((var_chaste_interface__membrane__V + 52.0) - 10.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][79] = (0.5 * exp(0.082600000000000007 * (var_chaste_interface__membrane__V + 50.0))) / (1.0 + exp(0.057000000000000002 * (var_chaste_interface__membrane__V + 50.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][80] = (1.3 * exp( -0.059999999999999998 * (var_chaste_interface__membrane__V + 20.0))) / (1.0 + exp( -0.040000000000000001 * (var_chaste_interface__membrane__V + 20.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][81] = 0.033000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.058823529411764705);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][82] = 33.0 / (1.0 + exp((-(var_chaste_interface__membrane__V + 10.0)) * 0.125));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][83] = (fabs(var_chaste_interface__membrane__V + 41.0) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * (var_chaste_interface__membrane__V + 41.0)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 41.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][84] = 8000.0 * exp( -0.056000000000000001 * (var_chaste_interface__membrane__V + 66.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][85] = 20.0 * exp( -0.125 * (var_chaste_interface__membrane__V + 75.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][86] = 2000.0 / ((320.0 * exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 75.0))) + 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][87] = (fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((30.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (1.0 - exp(( -1.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) * 0.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][88] = (fabs((var_chaste_interface__membrane__V + 24.0) - 5.0) < 0.0001) ? 120.0 : ((12.0 * ((var_chaste_interface__membrane__V + 24.0) - 5.0)) / (exp(((var_chaste_interface__membrane__V + 24.0) - 5.0) * 0.10000000000000001) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][89] = (fabs(var_chaste_interface__membrane__V + 34.0) < 0.0001) ? 25.0 : ((6.25 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][90] = 50.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][91] = (0.625 * (var_chaste_interface__membrane__V + 34.0)) / (exp((var_chaste_interface__membrane__V + 34.0) * 0.25) - 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][92] = 5.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[93];
    
    // Lookup tables
    double (*_lookup_table_0)[93];
    
};

std::auto_ptr<CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables> CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::mpInstance;

    CellDiFrancescoNoble1985FromCellMLCvodeOpt::CellDiFrancescoNoble1985FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                16,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellDiFrancescoNoble1985FromCellMLCvodeOpt>::Instance();
        Init();

        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    CellDiFrancescoNoble1985FromCellMLCvodeOpt::~CellDiFrancescoNoble1985FromCellMLCvodeOpt()
    {
    }
    
    AbstractLookupTableCollection* CellDiFrancescoNoble1985FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double CellDiFrancescoNoble1985FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.2
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.8
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.005
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 8
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 5e-5
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 4
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140
        
        // Lookup table indexing
        const bool _oob_0 = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_membrane__C = 0.074999999999999997; // microF
        const double var_hyperpolarising_activated_current__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_hyperpolarising_activated_current__i_fNa = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_hyperpolarising_activated_current__E_K = 26.713760659695648 * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__i_fK = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K); // nanoA
        const double var_hyperpolarising_activated_current__i_f = var_hyperpolarising_activated_current__i_fNa + var_hyperpolarising_activated_current__i_fK; // nanoA
        const double var_time_dependent_potassium_current__i_K = var_chaste_interface__time_dependent_potassium_current_x_gate__x * ((180.0 * (var_chaste_interface__intracellular_potassium_concentration__Ki - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[67]))) * 0.0071428571428571426); // nanoA
        const double var_time_independent_potassium_current__i_K1 = (((920.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 210.0)) * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V + 10.0) - var_hyperpolarising_activated_current__E_K) * 2.0) * 0.037433890822745473)); // nanoA
        const double var_transient_outward_current__i_to = ((((var_chaste_interface__transient_outward_current_s_gate__s * 0.28000000000000003 * (0.20000000000000001 + (var_chaste_interface__extracellular_potassium_concentration__Kc / (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc))) * var_chaste_interface__intracellular_calcium_concentration__Cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_calcium_concentration__Cai)) * (var_chaste_interface__membrane__V + 10.0)) / _lt_0_row[68]) * ((var_chaste_interface__intracellular_potassium_concentration__Ki * _lt_0_row[21]) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[69])); // nanoA
        const double var_sodium_background_current__i_Na_b = 0.17999999999999999 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_calcium_background_current__i_Ca_b = 0.02 * (var_chaste_interface__membrane__V - (log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Cai) * 13.356880329847824)); // nanoA
        const double var_sodium_potassium_pump__i_p = (((125.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc)) * var_chaste_interface__intracellular_sodium_concentration__Nai) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai); // nanoA
        const double var_Na_Ca_exchanger__i_NaCa = (0.02 * ((_lt_0_row[70] * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * 2.0) - (_lt_0_row[71] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Cai))) / ((1.0 + (0.001 * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Cai * 144.92753623188406))); // nanoA
        const double var_fast_sodium_current__i_Na = 750.0 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log((140.0 + (0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc)) / (var_chaste_interface__intracellular_sodium_concentration__Nai + (0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki))))); // nanoA
        const double var_second_inward_current__i_siCa = _lt_0_row[72] * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 42.240905756816083) - _lt_0_row[73]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siNa = _lt_0_row[74] * ((var_chaste_interface__intracellular_sodium_concentration__Nai * 6.4993004051833214) - _lt_0_row[76]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siK = _lt_0_row[74] * ((var_chaste_interface__intracellular_potassium_concentration__Ki * 6.4993004051833214) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[75])) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_si = var_second_inward_current__i_siCa + var_second_inward_current__i_siK + var_second_inward_current__i_siNa; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_hyperpolarising_activated_current__i_f + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_sodium_background_current__i_Na_b + var_calcium_background_current__i_Ca_b + var_sodium_potassium_pump__i_p + var_Na_Ca_exchanger__i_NaCa + var_fast_sodium_current__i_Na + var_second_inward_current__i_si) / var_membrane__C) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellDiFrancescoNoble1985FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.2
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.8
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.005
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 8
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 5e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 11);
        // Units: millimolar; Initial value: 2
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 1
        double var_chaste_interface__intracellular_calcium_concentration__p = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 4
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140
        
        
        // Lookup table indexing
        const bool _oob_0 = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_hyperpolarising_activated_current__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_hyperpolarising_activated_current__i_fNa = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_hyperpolarising_activated_current__E_K = 26.713760659695648 * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__i_fK = ((var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0)) * 3.0 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K); // nanoA
        const double var_time_dependent_potassium_current__i_K = var_chaste_interface__time_dependent_potassium_current_x_gate__x * ((180.0 * (var_chaste_interface__intracellular_potassium_concentration__Ki - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[67]))) * 0.0071428571428571426); // nanoA
        const double var_time_independent_potassium_current__i_K1 = (((920.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__extracellular_potassium_concentration__Kc + 210.0)) * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V + 10.0) - var_hyperpolarising_activated_current__E_K) * 2.0) * 0.037433890822745473)); // nanoA
        const double var_transient_outward_current__i_to = ((((var_chaste_interface__transient_outward_current_s_gate__s * 0.28000000000000003 * (0.20000000000000001 + (var_chaste_interface__extracellular_potassium_concentration__Kc / (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc))) * var_chaste_interface__intracellular_calcium_concentration__Cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_calcium_concentration__Cai)) * (var_chaste_interface__membrane__V + 10.0)) / _lt_0_row[68]) * ((var_chaste_interface__intracellular_potassium_concentration__Ki * _lt_0_row[21]) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[69])); // nanoA
        const double var_sodium_background_current__i_Na_b = 0.17999999999999999 * (var_chaste_interface__membrane__V - var_hyperpolarising_activated_current__E_Na); // nanoA
        const double var_calcium_background_current__i_Ca_b = 0.02 * (var_chaste_interface__membrane__V - (log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Cai) * 13.356880329847824)); // nanoA
        const double var_sodium_potassium_pump__i_p = (((125.0 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc)) * var_chaste_interface__intracellular_sodium_concentration__Nai) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai); // nanoA
        const double var_Na_Ca_exchanger__i_NaCa = (0.02 * ((_lt_0_row[70] * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * 2.0) - (_lt_0_row[71] * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Cai))) / ((1.0 + (0.001 * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Cai * 144.92753623188406))); // nanoA
        const double var_fast_sodium_current__i_Na = 750.0 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log((140.0 + (0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc)) / (var_chaste_interface__intracellular_sodium_concentration__Nai + (0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki))))); // nanoA
        const double var_second_inward_current__i_siCa = _lt_0_row[72] * ((var_chaste_interface__intracellular_calcium_concentration__Cai * 42.240905756816083) - _lt_0_row[73]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siNa = _lt_0_row[74] * ((var_chaste_interface__intracellular_sodium_concentration__Nai * 6.4993004051833214) - _lt_0_row[76]) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_second_inward_current__i_siK = _lt_0_row[74] * ((var_chaste_interface__intracellular_potassium_concentration__Ki * 6.4993004051833214) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[75])) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // nanoA
        const double var_intracellular_calcium_concentration__i_up = 21824.470085405861 * var_chaste_interface__intracellular_calcium_concentration__Cai * (5.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_up); // nanoA
        const double var_intracellular_calcium_concentration__i_tr = 27.280587606757326 * var_chaste_interface__intracellular_calcium_concentration__p * (var_chaste_interface__intracellular_calcium_concentration__Ca_up - var_chaste_interface__intracellular_calcium_concentration__Ca_rel); // nanoA
        const double var_intracellular_calcium_concentration__i_rel = (1091.223504270293 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel * pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0)) / (pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0) + 9.9999999999999995e-07); // nanoA
        const double var_extracellular_potassium_concentration__i_mK = (var_time_independent_potassium_current__i_K1 + var_time_dependent_potassium_current__i_K + var_hyperpolarising_activated_current__i_fK + var_second_inward_current__i_siK + var_transient_outward_current__i_to) - (2.0 * var_sodium_potassium_pump__i_p); // nanoA
        const double d_dt_chaste_interface__hyperpolarising_activated_current_y_gate__y = 0.001 * ((_lt_0_row[77] * (1.0 - var_chaste_interface__hyperpolarising_activated_current_y_gate__y)) - (_lt_0_row[78] * var_chaste_interface__hyperpolarising_activated_current_y_gate__y)); // 'per millisecond'
        const double d_dt_chaste_interface__time_dependent_potassium_current_x_gate__x = 0.001 * ((_lt_0_row[79] * (1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x)) - (_lt_0_row[80] * var_chaste_interface__time_dependent_potassium_current_x_gate__x)); // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = 0.001 * ((_lt_0_row[81] * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s)) - (_lt_0_row[82] * var_chaste_interface__transient_outward_current_s_gate__s)); // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = 0.001 * ((_lt_0_row[83] * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m)) - (_lt_0_row[84] * var_chaste_interface__fast_sodium_current_m_gate__m)); // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = 0.001 * ((_lt_0_row[85] * (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h)) - (_lt_0_row[86] * var_chaste_interface__fast_sodium_current_h_gate__h)); // 'per millisecond'
        const double d_dt_chaste_interface__second_inward_current_d_gate__d = 0.001 * ((_lt_0_row[87] * (1.0 - var_chaste_interface__second_inward_current_d_gate__d)) - (_lt_0_row[88] * var_chaste_interface__second_inward_current_d_gate__d)); // 'per millisecond'
        const double d_dt_chaste_interface__second_inward_current_f_gate__f = 0.001 * ((_lt_0_row[89] * (1.0 - var_chaste_interface__second_inward_current_f_gate__f)) - (_lt_0_row[90] * var_chaste_interface__second_inward_current_f_gate__f)); // 'per millisecond'
        const double d_dt_chaste_interface__second_inward_current_f2_gate__f2 = 0.001 * (5.0 - (var_chaste_interface__second_inward_current_f2_gate__f2 * (5.0 + ((var_chaste_interface__intracellular_calcium_concentration__Cai * 5.0) * 1000.0)))); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_sodium_concentration__Nai = 0.001 * (( -1.0 * (var_fast_sodium_current__i_Na + var_sodium_background_current__i_Na_b + var_hyperpolarising_activated_current__i_fNa + var_second_inward_current__i_siNa + (var_sodium_potassium_pump__i_p * 3.0) + ((var_Na_Ca_exchanger__i_NaCa * 3.0) * 1.0))) * 0.00073312203858270474); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Cai = 0.001 * (( -1.0 * ((((var_second_inward_current__i_siCa + var_calcium_background_current__i_Ca_b) - ((2.0 * var_Na_Ca_exchanger__i_NaCa) * 1.0)) - var_intracellular_calcium_concentration__i_rel) + var_intracellular_calcium_concentration__i_up)) * 0.00036656101929135237); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up = 0.001 * ((1.0 * (var_intracellular_calcium_concentration__i_up - var_intracellular_calcium_concentration__i_tr)) * 0.0073312203858270459); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel = 0.001 * ((1.0 * (var_intracellular_calcium_concentration__i_tr - var_intracellular_calcium_concentration__i_rel)) * 0.018328050964567619); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__p = 0.001 * ((_lt_0_row[91] * (1.0 - var_chaste_interface__intracellular_calcium_concentration__p)) - (_lt_0_row[92] * var_chaste_interface__intracellular_calcium_concentration__p)); // 'per millisecond'
        const double d_dt_chaste_interface__extracellular_potassium_concentration__Kc = 0.001 * (( -0.69999999999999996 * (var_chaste_interface__extracellular_potassium_concentration__Kc - 4.0)) + ((1.0 * var_extracellular_potassium_concentration__i_mK) * 0.0066014449993861057)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_potassium_concentration__Ki = 0.001 * (( -1.0 * var_extracellular_potassium_concentration__i_mK) * 0.00073312203858270474); // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__C = 0.074999999999999997; // microF
            const double var_chaste_interface__membrane__i_pulse = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            const double var_hyperpolarising_activated_current__i_f = var_hyperpolarising_activated_current__i_fNa + var_hyperpolarising_activated_current__i_fK; // nanoA
            const double var_second_inward_current__i_si = var_second_inward_current__i_siCa + var_second_inward_current__i_siK + var_second_inward_current__i_siNa; // nanoA
            d_dt_chaste_interface__membrane__V = 0.001 * ((-(var_hyperpolarising_activated_current__i_f + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_sodium_background_current__i_Na_b + var_calcium_background_current__i_Ca_b + var_sodium_potassium_pump__i_p + var_Na_Ca_exchanger__i_NaCa + var_fast_sodium_current__i_Na + var_second_inward_current__i_si + (1000.0 * ((var_chaste_interface__membrane__i_pulse * var_membrane__C) / HeartConfig::Instance()->GetCapacitance())))) / var_membrane__C); // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__hyperpolarising_activated_current_y_gate__y;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__time_dependent_potassium_current_x_gate__x;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__second_inward_current_d_gate__d;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__second_inward_current_f_gate__f;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__second_inward_current_f2_gate__f2;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__intracellular_sodium_concentration__Nai;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__intracellular_calcium_concentration__Cai;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__intracellular_calcium_concentration__p;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__extracellular_potassium_concentration__Kc;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__intracellular_potassium_concentration__Ki;
    }
    
    void CellDiFrancescoNoble1985FromCellMLCvodeOpt::EvaluateAnalyticJacobian(long int N, double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.2
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.01
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.8
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.005
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 8
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 5e-5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 11);
        // Units: millimolar; Initial value: 2
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 1
        double var_chaste_interface__intracellular_calcium_concentration__p = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 4
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140
        
        // Lookup table indexing
        const bool _oob_0 = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellDiFrancescoNoble1985FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
        
        const double var_chaste_interface__environment__fake_dt = 0.001; // second
        const double var_membrane__C = 0.074999999999999997; // microF
        const double var_t1 = var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_chaste_interface__extracellular_potassium_concentration__Kc; // dimensionless
        const double var_t2 = var_chaste_interface__extracellular_potassium_concentration__Kc + 45.0; // dimensionless
        const double var_t3 = 1.0 / var_t2; // dimensionless
        const double var_t5 = (var_t1 * var_t3) * 3.0; // dimensionless
        const double var_t7 = (var_t1 * var_t3) * 3.0; // dimensionless
        const double var_t8 = var_chaste_interface__time_dependent_potassium_current_x_gate__x * 180.0; // dimensionless
        const double var_t20 = ((((0.0071428571428571426 * var_t8) * var_chaste_interface__extracellular_potassium_concentration__Kc) * 3.8797490106562429e-07) * 96485.341499999995) * _lt_0_row[0]; // dimensionless
        const double var_t21 = 920.0 * var_chaste_interface__extracellular_potassium_concentration__Kc; // dimensionless
        const double var_t22 = var_chaste_interface__extracellular_potassium_concentration__Kc + 210.0; // dimensionless
        const double var_t23 = 1.0 / var_t22; // dimensionless
        const double var_t26 = 1.0 / var_chaste_interface__intracellular_potassium_concentration__Ki; // dimensionless
        const double var_t30 = 26.713760659695648 * log(var_chaste_interface__extracellular_potassium_concentration__Kc * var_t26); // dimensionless
        const double var_t35 = exp(((2.0 * ((var_chaste_interface__membrane__V + 10.0) - var_t30)) * 0.00012027221933034354) * 311.24303709677417); // dimensionless
        const double var_t36 = 1.0 + var_t35; // dimensionless
        const double var_t37 = 1.0 / var_t36; // dimensionless
        const double var_t39 = (var_t21 * var_t23) * var_t37; // dimensionless
        const double var_t40 = var_chaste_interface__membrane__V - var_t30; // dimensionless
        const double var_t44 = 1.0 / pow(var_t36, 2.0); // dimensionless
        const double var_t49 = ((((((2.0 * var_t21) * var_t23) * var_t40) * var_t44) * 0.00012027221933034354) * 311.24303709677417) * var_t35; // dimensionless
        const double var_t50 = var_chaste_interface__transient_outward_current_s_gate__s * 0.28000000000000003; // dimensionless
        const double var_t51 = 10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc; // dimensionless
        const double var_t52 = 1.0 / var_t51; // dimensionless
        const double var_t54 = 0.20000000000000001 + (var_chaste_interface__extracellular_potassium_concentration__Kc * var_t52); // dimensionless
        const double var_t55 = var_t50 * var_t54; // dimensionless
        const double var_t56 = 0.00050000000000000001 + var_chaste_interface__intracellular_calcium_concentration__Cai; // dimensionless
        const double var_t57 = 1.0 / var_t56; // dimensionless
        const double var_t58 = var_chaste_interface__intracellular_calcium_concentration__Cai * var_t57; // dimensionless
        const double var_t69 = (var_chaste_interface__intracellular_potassium_concentration__Ki * _lt_0_row[1]) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[2]); // dimensionless
        const double var_t70 = _lt_0_row[3] * var_t69; // dimensionless
        const double var_t72 = (var_t55 * var_t58) * var_t70; // dimensionless
        const double var_t74 = (var_t50 * var_t54) * var_chaste_interface__intracellular_calcium_concentration__Cai; // dimensionless
        const double var_t76 = var_t57 * (var_chaste_interface__membrane__V + 10.0); // dimensionless
        const double var_t83 = ((((0.20000000000000001 * var_t74) * var_t76) / _lt_0_row[4]) * var_t69) * _lt_0_row[5]; // dimensionless
        const double var_t95 = ((var_t74 * var_t76) * _lt_0_row[3]) * (((((0.5 * var_chaste_interface__intracellular_potassium_concentration__Ki) * 0.00012027221933034354) * 311.24303709677417) * _lt_0_row[1]) + ((((0.5 * var_chaste_interface__extracellular_potassium_concentration__Kc) * 0.00012027221933034354) * 311.24303709677417) * _lt_0_row[2])); // dimensionless
        const double var_t105 = pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0); // dimensionless
        const double var_t106 = 2.0 * var_t105; // dimensionless
        const double var_t117 = var_chaste_interface__intracellular_calcium_concentration__Cai * 2744000.0; // dimensionless
        const double var_t121 = 0.02 * ((_lt_0_row[6] * var_t106) - (_lt_0_row[7] * var_t117)); // dimensionless
        const double var_t124 = 1.0 + (0.001 * (var_t117 + var_t106)); // dimensionless
        const double var_t125 = 1.0 / var_t124; // dimensionless
        const double var_t127 = 1.0 + (144.92753619999999 * var_chaste_interface__intracellular_calcium_concentration__Cai); // dimensionless
        const double var_t128 = 1.0 / var_t127; // dimensionless
        const double var_t129 = var_t125 * var_t128; // dimensionless
        const double var_t131 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t133 = (750.0 * var_t131) * var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_t134 = var_t133 * var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_t148 = (var_chaste_interface__intracellular_calcium_concentration__Cai * 42.240905756816083) - _lt_0_row[8]; // dimensionless
        const double var_t150 = var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f_gate__f; // dimensionless
        const double var_t151 = var_t150 * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t154 = (_lt_0_row[9] * var_t148) * var_t151; // dimensionless
        const double var_t168 = var_chaste_interface__second_inward_current_f_gate__f * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t172 = (((_lt_0_row[10] * var_t148) * var_chaste_interface__second_inward_current_d_gate__d) * var_t168) * _lt_0_row[11]; // dimensionless
        const double var_t177 = _lt_0_row[12] * var_t151; // dimensionless
        const double var_t185 = (var_chaste_interface__intracellular_potassium_concentration__Ki * 6.4993004051833214) - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[13]); // dimensionless
        const double var_t186 = _lt_0_row[14] * var_t185; // dimensionless
        const double var_t189 = (0.0056150836234118212 * var_t186) * var_t151; // dimensionless
        const double var_t194 = var_t168 * _lt_0_row[13]; // dimensionless
        const double var_t197 = ((_lt_0_row[15] * var_t185) * var_chaste_interface__second_inward_current_d_gate__d) * var_t194; // dimensionless
        const double var_t202 = ((_lt_0_row[16] * var_chaste_interface__extracellular_potassium_concentration__Kc) * _lt_0_row[13]) * var_t151; // dimensionless
        const double var_t205 = (var_chaste_interface__intracellular_sodium_concentration__Nai * 6.4993004051833214) - _lt_0_row[17]; // dimensionless
        const double var_t209 = (_lt_0_row[18] * var_t205) * var_t151; // dimensionless
        const double var_t214 = ((_lt_0_row[15] * var_t205) * var_chaste_interface__second_inward_current_d_gate__d) * var_t194; // dimensionless
        const double var_t219 = _lt_0_row[19] * var_t151; // dimensionless
        const double var_t222 = 1.0 / var_membrane__C; // dimensionless
        const double var_t224 = var_chaste_interface__extracellular_potassium_concentration__Kc * var_t3; // dimensionless
        const double var_t225 = 1.0 / var_chaste_interface__intracellular_sodium_concentration__Nai; // dimensionless
        const double var_t230 = var_chaste_interface__membrane__V - (26.713760659695648 * log(140.0 * var_t225)); // dimensionless
        const double var_t231 = 3.0 * var_t230; // dimensionless
        const double var_t232 = var_t224 * var_t231; // dimensionless
        const double var_t233 = 3.0 * var_t40; // dimensionless
        const double var_t234 = var_t224 * var_t233; // dimensionless
        const double var_t239 = 180.0 * (var_chaste_interface__intracellular_potassium_concentration__Ki - (var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[0])); // dimensionless
        const double var_t242 = 0.28000000000000003 * var_t54; // dimensionless
        const double var_t243 = var_t242 * var_t58; // dimensionless
        const double var_t248 = 750.0 * var_t131; // dimensionless
        const double var_t250 = 140.0 + (0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc); // dimensionless
        const double var_t253 = 1.0 / (var_chaste_interface__intracellular_sodium_concentration__Nai + (0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki)); // dimensionless
        const double var_t258 = var_chaste_interface__membrane__V - (26.713760659695648 * log(var_t250 * var_t253)); // dimensionless
        const double var_t259 = var_chaste_interface__fast_sodium_current_h_gate__h * var_t258; // dimensionless
        const double var_t268 = (var_t148 * var_chaste_interface__second_inward_current_f_gate__f) * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t274 = (var_t185 * var_chaste_interface__second_inward_current_f_gate__f) * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t279 = (var_t205 * var_chaste_interface__second_inward_current_f_gate__f) * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t285 = var_t148 * var_chaste_interface__second_inward_current_d_gate__d; // dimensionless
        const double var_t286 = var_t285 * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t290 = var_t185 * var_chaste_interface__second_inward_current_d_gate__d; // dimensionless
        const double var_t291 = var_t290 * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t295 = var_t205 * var_chaste_interface__second_inward_current_d_gate__d; // dimensionless
        const double var_t296 = var_t295 * var_chaste_interface__second_inward_current_f2_gate__f2; // dimensionless
        const double var_t302 = var_t285 * var_chaste_interface__second_inward_current_f_gate__f; // dimensionless
        const double var_t306 = var_t290 * var_chaste_interface__second_inward_current_f_gate__f; // dimensionless
        const double var_t310 = var_t295 * var_chaste_interface__second_inward_current_f_gate__f; // dimensionless
        const double var_t318 = ((var_t5 * 2577486.3199999998) * 1.0364268649036186e-05) * var_t225; // dimensionless
        const double var_t322 = 4.8084769187452165 * var_t225; // dimensionless
        const double var_t323 = 125.0 * var_chaste_interface__extracellular_potassium_concentration__Kc; // dimensionless
        const double var_t324 = 1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc; // dimensionless
        const double var_t325 = 1.0 / var_t324; // dimensionless
        const double var_t326 = 40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai; // dimensionless
        const double var_t327 = 1.0 / var_t326; // dimensionless
        const double var_t329 = (var_t323 * var_t325) * var_t327; // dimensionless
        const double var_t334 = ((var_t323 * var_t325) * var_chaste_interface__intracellular_sodium_concentration__Nai) / pow(var_t326, 2.0); // dimensionless
        const double var_t336 = var_t105 * 3.0; // dimensionless
        const double var_t337 = _lt_0_row[20] * var_t336; // dimensionless
        const double var_t338 = var_t225 * 2.0; // dimensionless
        const double var_t346 = 0.02 * (((_lt_0_row[21] * var_t105) * 2.0) - (_lt_0_row[22] * var_chaste_interface__intracellular_calcium_concentration__Cai)); // dimensionless
        const double var_t348 = 1.0 / pow(var_t124, 2.0); // dimensionless
        const double var_t349 = var_t348 * var_t128; // dimensionless
        const double var_t350 = var_t346 * var_t349; // dimensionless
        const double var_t353 = (0.002 * var_t336) * var_t225; // dimensionless
        const double var_t357 = ((var_t134 * 2577486.3199999998) * 1.0364268649036186e-05) * var_t253; // dimensionless
        const double var_t362 = _lt_0_row[23] * var_t151; // dimensionless
        const double var_t365 = var_t76 * var_t70; // dimensionless
        const double var_t366 = var_t55 * var_t365; // dimensionless
        const double var_t371 = ((var_t74 / pow(var_t56, 2.0)) * (var_chaste_interface__membrane__V + 10.0)) * var_t70; // dimensionless
        const double var_t373 = 1.0 / var_chaste_interface__intracellular_calcium_concentration__Cai; // dimensionless
        const double var_t376 = 0.26713760659695646 * var_t373; // dimensionless
        const double var_t381 = var_t346 * var_t348; // dimensionless
        const double var_t386 = 1.0 / pow(var_t127, 2.0); // dimensionless
        const double var_t387 = var_t125 * var_t386; // dimensionless
        const double var_t393 = _lt_0_row[24] * var_t151; // dimensionless
        const double var_t396 = var_chaste_interface__hyperpolarising_activated_current_y_gate__y * var_t3; // dimensionless
        const double var_t397 = var_t396 * var_t231; // dimensionless
        const double var_t399 = 1.0 / pow(var_t2, 2.0); // dimensionless
        const double var_t402 = ((var_t1 * var_t399) * 3.0) * var_t230; // dimensionless
        const double var_t403 = var_t396 * var_t233; // dimensionless
        const double var_t406 = ((var_t1 * var_t399) * 3.0) * var_t40; // dimensionless
        const double var_t409 = ((var_t396 * 3.0) * 2577486.3199999998) * 1.0364268649036186e-05; // dimensionless
        const double var_t411 = (0.0071428571428571426 * var_t8) * _lt_0_row[0]; // dimensionless
        const double var_t412 = 920.0 * var_t23; // dimensionless
        const double var_t414 = (var_t412 * var_t40) * var_t37; // dimensionless
        const double var_t419 = ((var_t21 / pow(var_t22, 2.0)) * var_t40) * var_t37; // dimensionless
        const double var_t422 = ((var_t412 * 8314.4719999999998) * 0.0032129232812012176) * var_t37; // dimensionless
        const double var_t423 = var_t40 * var_t44; // dimensionless
        const double var_t426 = ((2.0 * var_t412) * var_t423) * var_t35; // dimensionless
        const double var_t433 = ((var_t50 * (var_t52 - (var_chaste_interface__extracellular_potassium_concentration__Kc / pow(var_t51, 2.0)))) * var_chaste_interface__intracellular_calcium_concentration__Cai) * var_t365; // dimensionless
        const double var_t436 = ((var_t74 * var_t76) * _lt_0_row[3]) * _lt_0_row[2]; // dimensionless
        const double var_t439 = ((125.0 * var_t325) * var_chaste_interface__intracellular_sodium_concentration__Nai) * var_t327; // dimensionless
        const double var_t444 = ((var_t323 / pow(var_t324, 2.0)) * var_chaste_interface__intracellular_sodium_concentration__Nai) * var_t327; // dimensionless
        const double var_t449 = (((0.12 * var_t134) * 2577486.3199999998) * 1.0364268649036186e-05) / var_t250; // dimensionless
        const double var_t453 = _lt_0_row[25] * var_t151; // dimensionless
        const double var_t458 = ((var_t7 * 2577486.3199999998) * 1.0364268649036186e-05) * var_t26; // dimensionless
        const double var_t459 = 0.0071428571428571426 * var_t8; // dimensionless
        const double var_t464 = ((((var_t21 * var_t23) * 8314.4719999999998) * 0.0032129232812012176) * var_t26) * var_t37; // dimensionless
        const double var_t469 = ((((2.0 * var_t21) * var_t23) * var_t423) * var_t26) * var_t35; // dimensionless
        const double var_t472 = ((var_t74 * var_t76) * _lt_0_row[3]) * _lt_0_row[1]; // dimensionless
        const double var_t511 = 1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x; // dimensionless
        const double var_t730 = var_t129 * 1.0; // dimensionless
        const double var_t731 = var_t338 * var_t730; // dimensionless
        const double var_t812 = pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0); // dimensionless
        const double var_t816 = var_t812 + 9.9999999999999995e-07; // dimensionless
        const double var_t817 = 1.0 / var_t816; // dimensionless
        const double var_t821 = ((((1091.2235046176404 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel) * var_t812) * 2.0) * var_t373) * var_t817; // dimensionless
        const double var_t830 = ((((1091.2235046176404 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel) * pow(var_t812, 2.0)) / pow(var_t816, 2.0)) * 2.0) * var_t373; // dimensionless
        const double var_t835 = 5.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_up; // dimensionless
        const double var_t860 = 27.280587615441007 * var_chaste_interface__intracellular_calcium_concentration__p; // dimensionless
        const double var_t865 = 0.5 * var_chaste_interface__intracellular_calcium_concentration__p; // dimensionless
        const double var_t868 = 0.5 * (var_chaste_interface__intracellular_calcium_concentration__Ca_up - var_chaste_interface__intracellular_calcium_concentration__Ca_rel); // dimensionless
        const double var_t885 = 1.0 - var_chaste_interface__intracellular_calcium_concentration__p; // dimensionless
        const double var_t898 = ((((((((var_t39 - var_t49) + var_t20) + var_t7) + var_t189) - var_t197) + var_t202) + var_t72) - var_t83) + var_t95; // dimensionless
        const double var_t926 = (-var_t329) + var_t334; // dimensionless
        const double var_t929 = var_t366 - var_t371; // dimensionless
        const double var_t934 = (((((((((((var_t414 - var_t419) - var_t422) + var_t426) - var_t411) + var_t403) - var_t406) - var_t409) - var_t453) + var_t433) - var_t436) - (2.0 * var_t439)) + (2.0 * var_t444); // dimensionless
        const double var_t938 = ((((var_t464 - var_t469) + var_t459) + var_t458) + var_t362) + var_t472; // dimensionless
        
        // Matrix entries
        DENSE_ELEM(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((((((-var_t5) - var_t7) - var_t20) - var_t39) + var_t49) - var_t72) + var_t83) - var_t95) - 0.17999999999999999) - 0.02) + ((((((((((((-var_t121) * var_t129) - var_t134) - var_t154) + var_t172) - var_t177) - var_t189) + var_t197) - var_t202) - var_t209) + var_t214) - var_t219)) * var_t222));
        DENSE_ELEM(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[35] * (1.0 - var_chaste_interface__hyperpolarising_activated_current_y_gate__y)) - (_lt_0_row[36] * var_chaste_interface__hyperpolarising_activated_current_y_gate__y));
        DENSE_ELEM(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((((_lt_0_row[56] * var_t511) - ((_lt_0_row[57] * var_t511) * _lt_0_row[58])) + (_lt_0_row[59] * var_chaste_interface__time_dependent_potassium_current_x_gate__x)) - ((_lt_0_row[60] * var_chaste_interface__time_dependent_potassium_current_x_gate__x) * _lt_0_row[61]));
        DENSE_ELEM(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[63] * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s)) - ((_lt_0_row[64] * var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[65]));
        DENSE_ELEM(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[32] * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m)) + (_lt_0_row[33] * var_chaste_interface__fast_sodium_current_m_gate__m));
        DENSE_ELEM(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[28] * (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h)) - ((_lt_0_row[29] * var_chaste_interface__fast_sodium_current_h_gate__h) * _lt_0_row[30]));
        DENSE_ELEM(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[50] * (1.0 - var_chaste_interface__second_inward_current_d_gate__d)) - (_lt_0_row[51] * var_chaste_interface__second_inward_current_d_gate__d));
        DENSE_ELEM(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[53] * (1.0 - var_chaste_interface__second_inward_current_f_gate__f)) - ((_lt_0_row[54] * var_chaste_interface__second_inward_current_f_gate__f) * _lt_0_row[44]));
        DENSE_ELEM(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * ((((((var_t134 + 0.17999999999999999) + var_t5) + var_t209) - var_t214) + var_t219) + ((((var_t121 * var_t125) * var_t128) * 3.0) * 1.0))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * ((( -0.15915494299999999 * ((((var_t154 - var_t172) + var_t177) + 0.02) - ((2.0 * var_t121) * var_t730))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * (((_lt_0_row[40] * var_t885) - ((_lt_0_row[41] * var_t885) * _lt_0_row[42])) - ((_lt_0_row[43] * var_chaste_interface__intracellular_calcium_concentration__p) * _lt_0_row[44]));
        DENSE_ELEM(rJacobian, 14, 0) = var_chaste_interface__environment__fake_dt * ((var_t898 * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 0) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * var_t898) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t232) - var_t234) * var_t222));
        DENSE_ELEM(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * (_lt_0_row[34]);
        DENSE_ELEM(rJacobian, 9, 1) = var_chaste_interface__environment__fake_dt * (( -0.31830988609999999 * var_t232) * 0.0023031708108969301);
        DENSE_ELEM(rJacobian, 14, 1) = var_chaste_interface__environment__fake_dt * ((((var_t224 * 3.0) * var_t40) * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 1) = var_chaste_interface__environment__fake_dt * (( -0.31830988609999999 * var_t234) * 0.0023031708108969301);
        DENSE_ELEM(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (( -0.0071428571428571426 * var_t239) * var_t222));
        DENSE_ELEM(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (_lt_0_row[62]);
        DENSE_ELEM(rJacobian, 14, 2) = var_chaste_interface__environment__fake_dt * (((0.0071428571428571426 * var_t239) * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 2) = var_chaste_interface__environment__fake_dt * ((( -0.002273642044 * var_t239) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t243) * _lt_0_row[26]) * var_t69) * var_t222));
        DENSE_ELEM(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * (_lt_0_row[66]);
        DENSE_ELEM(rJacobian, 14, 3) = var_chaste_interface__environment__fake_dt * ((((var_t243 * _lt_0_row[26]) * var_t69) * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 3) = var_chaste_interface__environment__fake_dt * (((((( -0.31830988609999999 * var_t242) * var_t58) * (var_chaste_interface__membrane__V + 10.0)) * var_t70) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((( -3.0 * var_t248) * var_t259) * var_t222));
        DENSE_ELEM(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (_lt_0_row[31]);
        DENSE_ELEM(rJacobian, 9, 4) = var_chaste_interface__environment__fake_dt * ((( -0.95492965829999998 * var_t248) * var_t259) * 0.0023031708108969301);
        DENSE_ELEM(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t133) * var_t258) * var_t222));
        DENSE_ELEM(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (_lt_0_row[27]);
        DENSE_ELEM(rJacobian, 9, 5) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * var_t133) * var_t258) * 0.0023031708108969301);
        DENSE_ELEM(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((_lt_0_row[48] * var_t268) - (_lt_0_row[49] * var_t274)) - (_lt_0_row[49] * var_t279)) * var_t222));
        DENSE_ELEM(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * (_lt_0_row[52]);
        DENSE_ELEM(rJacobian, 9, 6) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[45] * var_t279) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 10, 6) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[38] * var_t268) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 14, 6) = var_chaste_interface__environment__fake_dt * ((((0.01 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07)) * var_t186) * var_t168) * 636.9426751592357);
        DENSE_ELEM(rJacobian, 15, 6) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[45] * var_t274) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((_lt_0_row[48] * var_t286) - (_lt_0_row[49] * var_t291)) - (_lt_0_row[49] * var_t296)) * var_t222));
        DENSE_ELEM(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (_lt_0_row[55]);
        DENSE_ELEM(rJacobian, 9, 7) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[45] * var_t296) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 10, 7) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[38] * var_t286) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 14, 7) = var_chaste_interface__environment__fake_dt * (((((0.01 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07)) * var_t186) * var_chaste_interface__second_inward_current_d_gate__d) * var_chaste_interface__second_inward_current_f2_gate__f2) * 636.9426751592357);
        DENSE_ELEM(rJacobian, 15, 7) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[45] * var_t291) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((_lt_0_row[48] * var_t302) - (_lt_0_row[49] * var_t306)) - (_lt_0_row[49] * var_t310)) * var_t222));
        DENSE_ELEM(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * ( -5.0 - ((var_chaste_interface__intracellular_calcium_concentration__Cai * 5.0) * 1000.0));
        DENSE_ELEM(rJacobian, 9, 8) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[45] * var_t310) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 10, 8) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[38] * var_t302) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 14, 8) = var_chaste_interface__environment__fake_dt * ((((0.01 * ((15.0 * (var_chaste_interface__membrane__V - 50.0)) * 3.8797490106562429e-07)) * var_t186) * var_t150) * 636.9426751592357);
        DENSE_ELEM(rJacobian, 15, 8) = var_chaste_interface__environment__fake_dt * ((_lt_0_row[45] * var_t306) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((((-var_t318) - var_t322) - var_t329) + var_t334) - ((var_t337 * var_t338) * var_t129)) + (var_t350 * var_t353)) - var_t357) - var_t362) * var_t222));
        DENSE_ELEM(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * (((((((var_t357 + var_t322) + var_t318) + var_t362) + (3.0 * var_t329)) - (3.0 * var_t334)) + (((_lt_0_row[20] * var_t105) * 9.0) * var_t731)) - ((((((var_t346 * var_t349) * 9.0) * 1.0) * 0.001) * var_t106) * var_t225))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 10, 9) = var_chaste_interface__environment__fake_dt * ((( -0.31830988599999999 * (((-var_t337) * var_t731) + (((var_t346 * var_t349) * 1.0) * var_t353))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 14, 9) = var_chaste_interface__environment__fake_dt * (((2.0 * var_t926) * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 9) = var_chaste_interface__environment__fake_dt * ((( -0.63661977219999999 * var_t926) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t366) + var_t371) - var_t376) + ((_lt_0_row[47] * var_t125) * var_t128)) + (((var_t381 * var_t128) * 0.001) * 2744000.0)) + ((144.92753619999999 * var_t346) * var_t387)) - var_t393) * var_t222));
        DENSE_ELEM(rJacobian, 8, 10) = var_chaste_interface__environment__fake_dt * (((-var_chaste_interface__second_inward_current_f2_gate__f2) * 5.0) * 1000.0);
        DENSE_ELEM(rJacobian, 9, 10) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * ((((_lt_0_row[46] * var_t129) * 3.0) - ((var_t350 * 3.0) * 2744.0)) - (((((144.92753619999999 * var_t346) * var_t125) * var_t386) * 3.0) * 1.0))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * ((( -0.15915494299999999 * (((((((var_t393 + var_t376) + (_lt_0_row[37] * var_t730)) + ((((2.0 * var_t381) * var_t128) * 1.0) * 2744.0)) + (((289.85507239999998 * var_t346) * var_t387) * 1.0)) - var_t821) + var_t830) + (21824.470085405861 * var_t835))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 11, 10) = var_chaste_interface__environment__fake_dt * (160.0 * var_t835);
        DENSE_ELEM(rJacobian, 12, 10) = var_chaste_interface__environment__fake_dt * (((7.9577471549999999 * ((-var_t821) + var_t830)) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 14, 10) = var_chaste_interface__environment__fake_dt * ((var_t929 * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 10) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * var_t929) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 10, 11) = var_chaste_interface__environment__fake_dt * (7.9999999967999997 * var_chaste_interface__intracellular_calcium_concentration__Cai);
        DENSE_ELEM(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (((3.183098862 * (( -21824.470085405861 * var_chaste_interface__intracellular_calcium_concentration__Cai) - var_t860)) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 12, 11) = var_chaste_interface__environment__fake_dt * (1.0 * var_t865);
        DENSE_ELEM(rJacobian, 10, 12) = var_chaste_interface__environment__fake_dt * ((0.40000000000000002 * var_t812) * var_t817);
        DENSE_ELEM(rJacobian, 11, 12) = var_chaste_interface__environment__fake_dt * (0.40000000019999998 * var_t865);
        DENSE_ELEM(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (((7.9577471549999999 * ((-var_t860) - ((1091.2235046176402 * var_t812) * var_t817))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 11, 13) = var_chaste_interface__environment__fake_dt * ( -0.40000000019999998 * var_t868);
        DENSE_ELEM(rJacobian, 12, 13) = var_chaste_interface__environment__fake_dt * (1.0 * var_t868);
        DENSE_ELEM(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (_lt_0_row[39]);
        DENSE_ELEM(rJacobian, 0, 14) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((((((((((((-var_t397) + var_t402) - var_t403) + var_t406) + var_t409) + var_t411) - var_t414) + var_t419) + var_t422) - var_t426) - var_t433) + var_t436) - var_t439) + var_t444) + var_t449) + var_t453) * var_t222));
        DENSE_ELEM(rJacobian, 9, 14) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * (((((-var_t449) + var_t397) - var_t402) + (3.0 * var_t439)) - (3.0 * var_t444))) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * ( -0.69999999999999996 + ((var_t934 * 636.9426751592357) * 1.0364268649036186e-05));
        DENSE_ELEM(rJacobian, 15, 14) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * var_t934) * 399.99999999999994) * 5.7579270272423262e-06);
        DENSE_ELEM(rJacobian, 0, 15) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t458) - var_t459) - var_t464) + var_t469) - var_t472) - (0.12 * var_t357)) - var_t362) * var_t222));
        DENSE_ELEM(rJacobian, 9, 15) = var_chaste_interface__environment__fake_dt * ((((((( -0.038197186330000001 * var_t133) * var_chaste_interface__fast_sodium_current_h_gate__h) * 8314.4719999999998) * 310.0) * 1.0741806462939436e-10) * var_t253) * 222.2222222222222);
        DENSE_ELEM(rJacobian, 14, 15) = var_chaste_interface__environment__fake_dt * ((var_t938 * 636.9426751592357) * 1.0364268649036186e-05);
        DENSE_ELEM(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * ((( -0.31830988609999999 * var_t938) * 399.99999999999994) * 5.7579270272423262e-06);
    }
    
template<>
void OdeSystemInformation<CellDiFrancescoNoble1985FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "difrancesco_noble_model_1985";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-87);

    this->mVariableNames.push_back("hyperpolarising_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2);

    this->mVariableNames.push_back("time_dependent_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01);

    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01);

    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8);

    this->mVariableNames.push_back("second_inward_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.005);

    this->mVariableNames.push_back("second_inward_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("second_inward_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("intracellular_sodium_concentration__Nai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Cai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5e-5);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2);

    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("intracellular_calcium_concentration__p");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    this->mVariableNames.push_back("extracellular_potassium_concentration__Kc");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4);

    this->mVariableNames.push_back("intracellular_potassium_concentration__Ki");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellDiFrancescoNoble1985FromCellMLCvodeOpt)
#endif // CHASTE_CVODE
