#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: mahajan_shiferaw_model_2008
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Wed May  4 17:42:27 2016
//! 
//! <autogenerated>

#include "Mahajan2008CvodeOpt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellMahajan2008FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellMahajan2008FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellMahajan2008FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<161; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__cell__V)
    {
        const double _offset_0 = var_chaste_interface__cell__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
#define COVERAGE_IGNORE
    bool CheckIndex0(double& var_chaste_interface__cell__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__cell__V>mTableMaxs[0] || var_chaste_interface__cell__V<mTableMins[0])
        {
#define COVERAGE_IGNORE
            _oob_0 = true;
#undef COVERAGE_IGNORE
        }
        return _oob_0;
    }
#undef COVERAGE_IGNORE

    ~CellMahajan2008FromCellMLCvodeOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellMahajan2008FromCellMLCvodeOpt_LookupTables(const CellMahajan2008FromCellMLCvodeOpt_LookupTables&);
    CellMahajan2008FromCellMLCvodeOpt_LookupTables& operator= (const CellMahajan2008FromCellMLCvodeOpt_LookupTables&);
    CellMahajan2008FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 161;
        mTableMins[0] = -120.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 289.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellMahajan2008FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][161];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 0.5 * (1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = exp(0.34999999999999998 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 0.00039049421860501144 * exp( -0.65000000000000002 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 1.0 / (1.0 + (0.20000000000000001 * exp( -0.65000000000000002 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = exp( -0.65000000000000002 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 1.0 / pow(1.0 + (0.20000000000000001 * exp( -0.65000000000000002 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144))), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 1.0 / (exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) - 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) * (1.0 / (exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = pow(exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) - 1.0, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = 1.0 + (0.1245 * exp( -0.10000000000000001 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = exp(-((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] =  -0.00046907825204670826 * exp( -0.10000000000000001 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) * 0.125) * (exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = 9.9000000000000004 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = 1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = (317.56410260000001 * exp(0.064102564099999995 * var_chaste_interface__cell__V)) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 0.25 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = 1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 0.088339222614840993 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331), 2.0)) * 0.33333333333333331) * (exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = (446.42857142857144 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] = 1.0 / (1.0 + exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] = 0.00039049421860501144 * (exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) * (1.0 / (exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) - 1.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0)) * (1.0 / (1.0 + exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] = exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = 1.0 / (1.0 + exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] = pow(exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] = pow(1.0 + exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][36] = ((2.0 * fabs((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) < 0.001) ? (0.00010420416882000002 * exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144))) : ((0.0040000000000000001 * ((0.00054000000000000001 * var_chaste_interface__cell__V) * 9309.4211243716236)) * (0.00039049421860501144 * (exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) * (1.0 / (exp(2.0 * ((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) - 1.0)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][37] = (( -3.0 - ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))) * 1.0)) - 0.29999999999999999) - 0.00413;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][38] = ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * 1.0) - 3.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][39] = (1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][40] = (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][41] = (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][42] = (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][43] = (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][44] = (1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0)) * 0.088339222614840993;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][45] = (((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0)) * 0.088339222614840993) * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][46] = (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 / pow((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0, 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][47] = ((317.56410260000001 * exp(0.064102564099999995 * var_chaste_interface__cell__V)) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) - ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25), 2.0))) * (0.25 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][48] = ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0)) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0))) * (0.088339222614840993 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][49] = ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))) * (1.0 / pow((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0, 2.0))) * (((317.56410260000001 * exp(0.064102564099999995 * var_chaste_interface__cell__V)) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) - ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25), 2.0))) * (0.25 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][50] = (( -0.0019499999999999999 - ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331)) - 0.0022399999999999998) - 0.00010576271186440676;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][51] = (((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 1.84375) * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) - 0.0019499999999999999;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][52] = (((-((((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331), 2.0)) * 0.33333333333333331) * (exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331) * 0.33333333333333331)) * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) * ((1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) * 0.00413)) * 446.42857142857144) * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][53] = (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 0.00413;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][54] = (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * (((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) / pow(1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))), 2.0))) * 0.00413;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][55] = (((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 0.00413) * 446.42857142857144) * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][56] = ((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 0.00413) * (446.42857142857144 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][57] = (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][58] = (((0.024167999999999999 * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331)) * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))) * ((1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) * 9651.1122906915025)) * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][59] = (( -0.024167999999999999 * ((((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331), 2.0)) * 0.33333333333333331) * (exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331) * 0.33333333333333331)) * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) * ((1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) * 9651.1122906915025)) * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][60] = ((0.024167999999999999 * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331)) * ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 9651.1122906915025;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][61] = ((0.024167999999999999 * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331)) * (((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) / pow(1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))), 2.0))) * 9651.1122906915025;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][62] = (0.024167999999999999 * (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))))))) * (9651.1122906915025 * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][63] = (0.024167999999999999 * (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))))))) * (9651.1122906915025 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][64] = (-((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0)))) - (((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 1.84375) * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][65] = (1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0)) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][66] = (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))) * (1.0 / pow((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0, 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][67] = ((((((-(((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0)) * (1.0 / ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0))) * (0.088339222614840993 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) - (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * (1.0 / pow((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) + 450.0, 2.0))) * (((317.56410260000001 * exp(0.064102564099999995 * var_chaste_interface__cell__V)) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25))))) - ((( -440.0 + (4954.0 * exp(0.064102564099999995 * var_chaste_interface__cell__V))) * (1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25), 2.0))) * (0.25 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.25)))))) - ((((((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331), 2.0)) * 0.33333333333333331) * (exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331) * 0.33333333333333331)) * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))) * ((1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) * 0.00413)) * ((446.42857142857144 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) + (((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 0.00413) * ((446.42857142857144 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (((1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)) * 0.125) * exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) + (((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * (((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) / pow(1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))), 2.0))) * 0.00413) * ((446.42857142857144 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (((1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)) * 0.125) * exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))) - (((((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 1.84375) * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))) * 0.088339222614840993) * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))) - (((((((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * 1.84375) * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * 0.088339222614840993) * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][68] = -((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993), 2.0)) * 0.088339222614840993);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][69] = ((((0.024167999999999999 * ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331), 2.0)) * 0.33333333333333331)) * (exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331) * 0.33333333333333331)) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * (9651.1122906915025 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))))) * (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][70] = ((0.024167999999999999 * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331)) * ((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))))))) * ((9651.1122906915025 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (((1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)) * 0.125) * exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][71] = ((0.024167999999999999 * ((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331)) * (((1.0 / pow(1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125), 2.0)) / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) / pow(1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))), 2.0))) * ((9651.1122906915025 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (((1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)) * 0.125) * exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][72] = ((0.024167999999999999 * (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))))))) * (9651.1122906915025 * (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993))))) * (0.088339222614840993 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][73] = ((0.024167999999999999 * (((1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125))) * (1.0 / (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) + 0.0) * 0.125)))))))) * (9651.1122906915025 * (1.0 - (1.0 / (1.0 + exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993)))))) * (0.088339222614840993 * exp(((-var_chaste_interface__cell__V) +  -40.0) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][74] = -(((0.001 < fabs(var_chaste_interface__cell__V + 7.0)) ? ((0.0013799999999999999 * (var_chaste_interface__cell__V + 7.0)) / (1.0 - exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999))) : 0.0112195122) + ((0.001 < fabs(var_chaste_interface__cell__V + 10.0)) ? ((0.00060999999999999997 * (var_chaste_interface__cell__V + 10.0)) / (exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45) - 1.0)) : 0.0042068965520000003));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][75] = ((0.1333333333 / pow(1.0 + exp(( -0.1333333333 * var_chaste_interface__cell__V) - 6.6666666650000002), 2.0)) * exp(( -0.1333333333 * var_chaste_interface__cell__V) - 6.6666666650000002)) * (((0.001 < fabs(var_chaste_interface__cell__V + 7.0)) ? ((0.0013799999999999999 * (var_chaste_interface__cell__V + 7.0)) / (1.0 - exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999))) : 0.0112195122) + ((0.001 < fabs(var_chaste_interface__cell__V + 10.0)) ? ((0.00060999999999999997 * (var_chaste_interface__cell__V + 10.0)) / (exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45) - 1.0)) : 0.0042068965520000003));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][76] = 1.0 / (1.0 + exp(( -0.1333333333 * var_chaste_interface__cell__V) - 6.6666666650000002));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][77] = ((var_chaste_interface__cell__V <=  -7.0010000000000003) ? ((0.0013799999999999999 / (1.0 - (1.0 * exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999)))) - (((0.00016974000000000001 * (var_chaste_interface__cell__V + 7.0)) / pow(1.0 - (1.0 * exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999)), 2.0)) * exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999))) : (var_chaste_interface__cell__V <=  -6.9989999999999997) ? 0.0 : ( -6.9989999999999997 < var_chaste_interface__cell__V) ? ((0.0013799999999999999 / (1.0 - (1.0 * exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999)))) - (((0.00016974000000000001 * (var_chaste_interface__cell__V + 7.0)) / pow(1.0 - (1.0 * exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999)), 2.0)) * exp(( -0.123 * var_chaste_interface__cell__V) - 0.86099999999999999))) : NAN) + ((var_chaste_interface__cell__V <=  -10.000999999999999) ? ((0.00060999999999999997 / (exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45) - 1.0)) - (((8.8449999999999995e-05 * (var_chaste_interface__cell__V + 10.0)) / pow(exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45) - 1.0, 2.0)) * exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45))) : (var_chaste_interface__cell__V <=  -9.9990000000000006) ? 0.0 : ( -9.9990000000000006 < var_chaste_interface__cell__V) ? ((0.00060999999999999997 / (exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45) - 1.0)) - (((8.8449999999999995e-05 * (var_chaste_interface__cell__V + 10.0)) / pow(exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45) - 1.0, 2.0)) * exp((0.14499999999999999 * var_chaste_interface__cell__V) + 1.45))) : NAN);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][78] = -(1.0 / ((fabs(var_chaste_interface__cell__V + 30.0) < 0.01455604076) ? 417.9462527 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][79] = 0.059880239520000003 * (((1.0 / pow(1.0 + exp(( -0.059880239520000003 * var_chaste_interface__cell__V) + 0.089820359279999998), 2.0)) * exp(( -0.059880239520000003 * var_chaste_interface__cell__V) + 0.089820359279999998)) * (1.0 / ((fabs(var_chaste_interface__cell__V + 30.0) < 0.01455604076) ? 417.9462527 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0)))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][80] = 1.0 / (1.0 + exp(( -0.059880239520000003 * var_chaste_interface__cell__V) + 0.089820359279999998));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][81] = 1.0 / pow((fabs(var_chaste_interface__cell__V + 30.0) < 0.01455604076) ? 417.9462527 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0)))), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][82] = (var_chaste_interface__cell__V <  -30.014556039999999) ? (-((1.0 / pow(((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) * (1.0 / (1.0 - (1.0 * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) * (1.0 / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0))), 2.0)) * ((((7.1899999999999999e-05 * (1.0 / (1.0 - (1.0 * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))))) - (((1.0641200000000001e-05 * (var_chaste_interface__cell__V + 30.0)) / pow(1.0 - (1.0 * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004)), 2.0)) * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + (0.00013100000000000001 * (1.0 / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0)))) - (((8.9996999999999996e-06 * (var_chaste_interface__cell__V + 30.0)) / pow(exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0, 2.0)) * exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999))))) : (var_chaste_interface__cell__V <=  -29.985443960000001) ? 0.0 : ( -29.985443960000001 < var_chaste_interface__cell__V) ? (-((1.0 / pow(((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) * (1.0 / (1.0 - (1.0 * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) * (1.0 / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0))), 2.0)) * ((((7.1899999999999999e-05 * (1.0 / (1.0 - (1.0 * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))))) - (((1.0641200000000001e-05 * (var_chaste_interface__cell__V + 30.0)) / pow(1.0 - (1.0 * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004)), 2.0)) * exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + (0.00013100000000000001 * (1.0 / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0)))) - (((8.9996999999999996e-06 * (var_chaste_interface__cell__V + 30.0)) / pow(exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0, 2.0)) * exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999))))) : NAN;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][83] =  -0.25 * (1.0 / ((fabs(var_chaste_interface__cell__V + 30.0) < 0.01455604076) ? 417.9462527 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][84] = 0.014970059880000001 * (((1.0 / pow(1.0 + exp(( -0.059880239520000003 * var_chaste_interface__cell__V) + 0.089820359279999998), 2.0)) * exp(( -0.059880239520000003 * var_chaste_interface__cell__V) + 0.089820359279999998)) * (1.0 / ((fabs(var_chaste_interface__cell__V + 30.0) < 0.01455604076) ? 417.9462527 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp(( -0.14799999999999999 * var_chaste_interface__cell__V) - 4.4400000000000004))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp((0.068699999999999997 * var_chaste_interface__cell__V) + 2.0609999999999999) - 1.0)))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][85] = (-((var_chaste_interface__cell__V <  -40.0) ? (0.13500000000000001 * exp( -11.764705879999999 - (0.14705882349999999 * var_chaste_interface__cell__V))) : 0.0)) - ((var_chaste_interface__cell__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : (1.0 / (0.13 + (0.13 * exp(( -0.090090090090000005 * var_chaste_interface__cell__V) - 0.96036036039999995)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][86] = (var_chaste_interface__cell__V <  -40.0) ? ( -0.01985294118 * exp( -11.764705879999999 - (0.14705882349999999 * var_chaste_interface__cell__V))) : ( -40.0 <= var_chaste_interface__cell__V) ? 0.0 : NAN;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][87] = (var_chaste_interface__cell__V <=  -40.0) ? ((0.28123999999999999 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (108500.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : ( -40.0 < var_chaste_interface__cell__V) ? ((0.011711711709999999 / pow(0.13 + (0.13 * exp(( -0.090090090090000005 * var_chaste_interface__cell__V) - 0.96036036039999995)), 2.0)) * exp(( -0.090090090090000005 * var_chaste_interface__cell__V) - 0.96036036039999995)) : NAN;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][88] = (-((var_chaste_interface__cell__V <  -40.0) ? (((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (var_chaste_interface__cell__V + 37.780000000000001)) / (1.0 + exp((0.311 * var_chaste_interface__cell__V) + 24.640529999999998))) : 0.0)) - ((var_chaste_interface__cell__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp(( -0.13780000000000001 * var_chaste_interface__cell__V) - 5.5312919999999997))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 3.2000000000000002))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][89] = (var_chaste_interface__cell__V <  -40.0) ? (((((( -31073.016 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) + (1.5254334000000001e-06 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (var_chaste_interface__cell__V + 37.780000000000001)) * (1.0 / (1.0 + exp((0.311 * var_chaste_interface__cell__V) + 24.640530009999999)))) + ((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (1.0 / (1.0 + exp((0.311 * var_chaste_interface__cell__V) + 24.640530009999999))))) - ((((0.311 * (( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V)))) * (var_chaste_interface__cell__V + 37.780000000000001)) / pow(1.0 + exp((0.311 * var_chaste_interface__cell__V) + 24.640530009999999), 2.0)) * exp((0.311 * var_chaste_interface__cell__V) + 24.640530009999999))) : ( -40.0 <= var_chaste_interface__cell__V) ? 0.0 : NAN;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][90] = (var_chaste_interface__cell__V <=  -40.0) ? ((( -0.001275024 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp(( -0.13780000000000001 * var_chaste_interface__cell__V) - 5.5312919950000001))) + (((0.016701359999999998 * exp( -0.01052 * var_chaste_interface__cell__V)) / pow(1.0 + exp(( -0.13780000000000001 * var_chaste_interface__cell__V) - 5.5312919950000001), 2.0)) * exp(( -0.13780000000000001 * var_chaste_interface__cell__V) - 5.5312919950000001))) : ( -40.0 < var_chaste_interface__cell__V) ? ((( -7.604999998e-08 * exp( -2.5349999990000002e-07 * var_chaste_interface__cell__V)) / (1.0 + exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 3.2000000000000002))) + (((0.029999999999999999 * exp( -2.5349999990000002e-07 * var_chaste_interface__cell__V)) / pow(1.0 + exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 3.2000000000000002), 2.0)) * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 3.2000000000000002))) : NAN;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][91] = (-((0.001 < fabs(var_chaste_interface__cell__V + 47.130000000000003)) ? ((0.32000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)) / (1.0 - exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001))) : 3.2000000000000002)) - (0.080000000000000002 * exp( -0.090909090909090912 * var_chaste_interface__cell__V));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][92] = (var_chaste_interface__cell__V <=  -47.131) ? ((0.32000000000000001 / (1.0 - (1.0 * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001)))) - (((0.032000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)) / pow(1.0 - (1.0 * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001)), 2.0)) * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001))) : (var_chaste_interface__cell__V <=  -47.128999999999998) ? 0.0 : ( -47.128999999999998 < var_chaste_interface__cell__V) ? ((0.32000000000000001 / (1.0 - (1.0 * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001)))) - (((0.032000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)) / pow(1.0 - (1.0 * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001)), 2.0)) * exp((-(0.10000000000000001 * var_chaste_interface__cell__V)) - 4.7130000000000001))) : NAN;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][93] = 0.0072727272729999999 * exp( -0.090909090909090912 * var_chaste_interface__cell__V);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][94] = exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0)) * (1.0 / (1.0 + exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][95] = pow(exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][96] = pow(1.0 + exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][97] = -(1.0 / ((3.5 * exp( -0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2.0))) + 1.5));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][98] = (0.066666666666666666 * ((1.0 / pow(1.0 + exp(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001), 2.0)) * exp(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001))) * (1.0 / ((3.5 * exp( -0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2.0))) + 1.5));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][99] = 1.0 / (1.0 + exp(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][100] = pow((3.5 * exp( -0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2.0))) + 1.5, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][101] = exp( -0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][102] = -(1.0 / ((9.0 / (1.0 + exp(-(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001)))) + 0.5));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][103] = (0.066666666666666666 * ((1.0 / pow(1.0 + exp(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001), 2.0)) * exp(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001))) * (1.0 / ((9.0 / (1.0 + exp(-(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001)))) + 0.5));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][104] = pow((9.0 / (1.0 + exp(-(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001)))) + 0.5, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][105] = pow(1.0 + exp(-(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001)), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][106] = exp(-(( -0.066666666666666666 * var_chaste_interface__cell__V) - 0.20000000000000001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][107] = -(0.050000000000000003 / ((1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001))) + 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][108] = ( -0.10000000000000001 * ((1.0 / pow(1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001), 2.0)) * exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001))) * (0.050000000000000003 / ((1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001))) + 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][109] = 1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][110] = pow((1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001))) + 1.0, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][111] = (1.0 / pow(1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001), 2.0)) * exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][112] = -(1.0 / ((3000.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 6.0))) + 30.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][113] = ( -0.10000000000000001 * ((1.0 / pow(1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001), 2.0)) * exp((0.10000000000000001 * var_chaste_interface__cell__V) + 3.3500000000000001))) * (1.0 / ((3000.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 6.0))) + 30.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][114] = pow((3000.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 6.0))) + 30.0, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][115] = pow(1.0 + exp((0.10000000000000001 * var_chaste_interface__cell__V) + 6.0), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][116] = exp((0.10000000000000001 * var_chaste_interface__cell__V) + 6.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][117] = 1.0 / (1.0 + exp((0.044642857139999999 * var_chaste_interface__cell__V) + 1.4732142859999999));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][118] = pow(1.0 + exp((0.044642857139999999 * var_chaste_interface__cell__V) + 1.4732142859999999), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][119] = exp((0.044642857139999999 * var_chaste_interface__cell__V) + 1.4732142859999999);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][120] = 1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.0) * 0.044642857142857144));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][121] = 0.5 * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][122] = exp(var_chaste_interface__cell__V * 0.075353936071760372);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][123] = exp(var_chaste_interface__cell__V * 0.075353936071760372) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][124] = 10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][125] = 1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][126] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][127] = 1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][128] = (((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125))) * 1.0)) / ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125)))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][129] = 0.1245 * exp(var_chaste_interface__cell__V *  -0.0037676968035880187);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][130] = exp((-var_chaste_interface__cell__V) * 0.037676968035880186);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][131] = exp(var_chaste_interface__cell__V * 0.013186938812558065);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][132] = exp(var_chaste_interface__cell__V *  -0.024490029223322121);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][133] = 1.0 + (0.20000000000000001 * exp(var_chaste_interface__cell__V *  -0.024490029223322121));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][134] = (fabs(var_chaste_interface__cell__V + 47.130000000000003) > 0.001) ? (((var_chaste_interface__cell__V + 47.130000000000003) * 0.32000000000000001) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)))) : 3.2000000000000002;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][135] = 0.080000000000000002 * exp((-var_chaste_interface__cell__V) * 0.090909090909090912);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][136] = (var_chaste_interface__cell__V <  -40.0) ? (0.13500000000000001 * exp((80.0 + var_chaste_interface__cell__V) *  -0.14705882352941177)) : 0.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][137] = (var_chaste_interface__cell__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : (1.0 / (0.13 * (1.0 + exp((var_chaste_interface__cell__V + 10.66) *  -0.0900900900900901))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][138] = (var_chaste_interface__cell__V <  -40.0) ? (((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * 1.0 * (var_chaste_interface__cell__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_chaste_interface__cell__V + 79.230000000000004)))) : 0.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][139] = (var_chaste_interface__cell__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__cell__V + 40.140000000000001)))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 32.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][140] = (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][141] = (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125)))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][142] = (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993)))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][143] = (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][144] = (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.33333333333333331)))) * 0.33333333333333331;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][145] = (((((((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125))) * 1.0)) / ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125)))) * 1.0)) * 0.00413) * 446.42857142857144) * ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993)))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0))) / ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][146] = ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.33333333333333331)))) * 0.33333333333333331) + 0.0023457627118644068;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][147] = ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993)))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0)) + ((((((((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.33333333333333331)))) * 0.33333333333333331) * ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125))) * 1.0)) / ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 0.0)) * 0.125)))) * 1.0)) * 0.00413) * 446.42857142857144) * ((1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993)))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0))) / ((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.088339222614840993))) / ((((10.0 + (4954.0 * exp(var_chaste_interface__cell__V * 0.064102564102564111))) - 450.0) * (1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V -  -40.0)) * 0.25))))) + 450.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][148] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 50.0)) * 0.13333333333333333));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][149] = 1.0 / (((fabs(var_chaste_interface__cell__V + 7.0) > 0.001) ? (((var_chaste_interface__cell__V + 7.0) * 0.0013799999999999999) / (1.0 - exp( -0.123 * (var_chaste_interface__cell__V + 7.0)))) : 0.011219512195121951) + ((fabs(var_chaste_interface__cell__V + 10.0) > 0.001) ? (((var_chaste_interface__cell__V + 10.0) * 0.00060999999999999997) / (exp(0.14499999999999999 * (var_chaste_interface__cell__V + 10.0)) - 1.0)) : 0.0042068965517241376));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][150] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 1.5)) * 0.059880239520958084));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][151] = (fabs(var_chaste_interface__cell__V + 30.0) < 0.014556040756914121) ? 417.94625266107982 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp( -0.14799999999999999 * (var_chaste_interface__cell__V + 30.0)))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp(0.068699999999999997 * (var_chaste_interface__cell__V + 30.0)) - 1.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][152] = 4.0 * ((fabs(var_chaste_interface__cell__V + 30.0) < 0.014556040756914121) ? 417.94625266107982 : (1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp( -0.14799999999999999 * (var_chaste_interface__cell__V + 30.0)))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp(0.068699999999999997 * (var_chaste_interface__cell__V + 30.0)) - 1.0)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][153] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 3.0)) * 0.066666666666666666));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][154] = (9.0 / (1.0 + exp(-((-(var_chaste_interface__cell__V + 3.0)) * 0.066666666666666666)))) + 0.5;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][155] = 1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][156] = (3000.0 / (1.0 + exp((var_chaste_interface__cell__V + 60.0) * 0.10000000000000001))) + 30.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][157] = (3.5 * exp((((-var_chaste_interface__cell__V) * 0.033333333333333333) * var_chaste_interface__cell__V) * 0.033333333333333333)) + 1.5;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][158] = (20.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001))) + 20.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][159] = exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0)) / (1.0 + exp( -0.050000000000000003 * (var_chaste_interface__cell__V + 30.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__cell__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][160] = 1.0 + exp( -0.35759999999999997 * (var_chaste_interface__cell__V + 30.0));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<CellMahajan2008FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[161];
    
    // Lookup tables
    double (*_lookup_table_0)[161];
    
};

std::auto_ptr<CellMahajan2008FromCellMLCvodeOpt_LookupTables> CellMahajan2008FromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> CellMahajan2008FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 400.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_amplitude =  -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double CellMahajan2008FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 22);
    }
    
    CellMahajan2008FromCellMLCvodeOpt::CellMahajan2008FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                26,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellMahajan2008FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        NV_Ith_S(this->mParameters, 0) = 1.0; // (c,IKr__ScaleFactorGkr) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (c,IKs__ScaleFactorGks) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 1.0; // (c,Ito__ScaleFactorIto) [dimensionless]
        NV_Ith_S(this->mParameters, 3) = 1.8; // (c,Environment__Ca_o) [mM]
        NV_Ith_S(this->mParameters, 4) = 5.4; // (c,Environment__K_o) [mM]
        NV_Ith_S(this->mParameters, 5) = 136; // (c,Environment__Na_o) [mM]
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    CellMahajan2008FromCellMLCvodeOpt::~CellMahajan2008FromCellMLCvodeOpt()
    {
    }
    
    AbstractLookupTableCollection* CellMahajan2008FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double CellMahajan2008FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.169816169406
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.000018211252
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000033616596
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.256752008084
        
        // Lookup table indexing
        const bool _oob_0 = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__cell__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__cell__V);
        
        const double var_reversal_potentials__ek = 26.541413816729868 * log(NV_Ith_S(mParameters, 4) * 0.0071428571428571426); // mV
        const double var_IK1__aki = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) - 59.215000000000003))); // per_ms
        const double var_INaK__xiNaK = (((1.5 * (1.0 / (1.0 + _lt_0_row[129] + (0.036499999999999998 * ((exp(NV_Ith_S(mParameters, 5) * 0.01485884101040119) - 1.0) * 0.14285714285714285) * _lt_0_row[130]))) * var_chaste_interface__Na__Na_i) / (var_chaste_interface__Na__Na_i + 12.0)) * NV_Ith_S(mParameters, 4)) / (NV_Ith_S(mParameters, 4) + 1.5); // nA_per_nF
        const double var_Ca__csm = var_chaste_interface__Ca__Ca_submem * 0.001; // mM
        const double var_INaCa__jNaCa = (0.83999999999999997 * (1.0 / (1.0 + pow(0.29999999999999999 / var_chaste_interface__Ca__Ca_submem, 3.0))) * ((pow(var_chaste_interface__Na__Na_i, 3.0) * NV_Ith_S(mParameters, 3) * _lt_0_row[131]) - (pow(NV_Ith_S(mParameters, 5), 3.0) * var_Ca__csm * _lt_0_row[132]))) / (_lt_0_row[133] * (((1.3 * pow(var_chaste_interface__Na__Na_i, 3.0)) + (669921.875 * var_Ca__csm)) + (1860.8670000000004 * NV_Ith_S(mParameters, 3) * (1.0 + (var_Ca__csm * 277.77777777777777))) + (0.0035999999999999999 * pow(NV_Ith_S(mParameters, 5), 3.0) * (1.0 + pow(var_chaste_interface__Na__Na_i * 0.081300813008130079, 3.0))) + ((pow(var_chaste_interface__Na__Na_i, 3.0) * NV_Ith_S(mParameters, 3)) + (pow(NV_Ith_S(mParameters, 5), 3.0) * var_Ca__csm)))); // uM_per_ms
        const double var_INaCa__xiNaCa = 8.0 * var_INaCa__jNaCa; // nA_per_nF
        const double var_ICaL__rxa = (fabs(var_chaste_interface__cell__V * 0.075353936071760372) < 0.001) ? ((((var_Ca__csm * _lt_0_row[122]) - (0.34100000000000003 * NV_Ith_S(mParameters, 3))) * 0.0078521942756732063) * 13.270706908364934) : ((var_chaste_interface__cell__V * ((var_Ca__csm * _lt_0_row[122]) - (0.34100000000000003 * NV_Ith_S(mParameters, 3))) * 0.0078521942756732063) / _lt_0_row[123]); // mA_per_cm2
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__po = (((((1.0 - var_chaste_interface__ICaL__xi1ca) - var_chaste_interface__ICaL__xi2ca) - var_chaste_interface__ICaL__xi1ba) - var_chaste_interface__ICaL__xi2ba) - var_chaste_interface__ICaL__c1) - var_chaste_interface__ICaL__c2; // dimensionless
        const double var_ICaL__jca = var_ICaL__gca * var_ICaL__po * var_ICaL__rxa; // uM_per_ms
        const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_INa__xina = var_INa__gna * var_chaste_interface__INa__xh * var_chaste_interface__INa__xj * var_chaste_interface__INa__xm * var_chaste_interface__INa__xm * var_chaste_interface__INa__xm * (var_chaste_interface__cell__V - (26.541413816729868 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__Na__Na_i))); // nA_per_nF
        const double var_cell__Itotal = -(var_INa__xina + (0.29999999999999999 * sqrt(NV_Ith_S(mParameters, 4) * 0.18518518518518517) * (var_IK1__aki / (var_IK1__aki + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) - 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__ek)) + (NV_Ith_S(mParameters, 0) * var_IKr__gkr * sqrt(NV_Ith_S(mParameters, 4) * 0.18518518518518517) * var_chaste_interface__IKr__xr * _lt_0_row[120] * (var_chaste_interface__cell__V - var_reversal_potentials__ek)) + (NV_Ith_S(mParameters, 1) * 0.1386 * (1.0 + (0.80000000000000004 / (1.0 + pow(0.5 / var_chaste_interface__Ca__Ca_i, 3.0)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__cell__V - (26.541413816729868 * log((NV_Ith_S(mParameters, 4) + (0.018329999999999999 * NV_Ith_S(mParameters, 5))) / (140.0 + (0.018329999999999999 * var_chaste_interface__Na__Na_i)))))) + ((NV_Ith_S(mParameters, 2) * 0.11 * var_chaste_interface__Ito__xtos * (var_chaste_interface__Ito__ytos + _lt_0_row[121]) * (var_chaste_interface__cell__V - var_reversal_potentials__ek)) + (0.040000000000000001 * var_chaste_interface__Ito__xtof * var_chaste_interface__Ito__ytof * (var_chaste_interface__cell__V - var_reversal_potentials__ek))) + var_INaCa__xiNaCa + (var_ICaL__jca * 16.0) + var_INaK__xiNaK + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // nA_per_nF
        const double var_chaste_interface__i_ionic = (var_cell__Itotal) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = -(var_chaste_interface__i_ionic);
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellMahajan2008FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.169816169406
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.000018211252
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000033616596
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Irel__Ca_JSR = NV_Ith_S(rY, 17);
        // Units: uM; Initial value: 97.505463697266
        double var_chaste_interface__Irel__xir = NV_Ith_S(rY, 18);
        // Units: uM_per_ms; Initial value: 0.006679257264
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_dyad = NV_Ith_S(rY, 20);
        // Units: uM; Initial value: 1.716573130685
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.256752008084
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 23);
        // Units: uM; Initial value: 104.450004990523
        double var_chaste_interface__Ca__tropi = NV_Ith_S(rY, 24);
        // Units: uM; Initial value: 22.171689894953
        double var_chaste_interface__Ca__trops = NV_Ith_S(rY, 25);
        // Units: uM; Initial value: 19.864701949854
        
        
        // Lookup table indexing
        const bool _oob_0 = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__cell__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__Environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__cell__V);
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_INaK__xiNaK = (((1.5 * (1.0 / (1.0 + _lt_0_row[129] + (0.036499999999999998 * ((exp(NV_Ith_S(mParameters, 5) * 0.01485884101040119) - 1.0) * 0.14285714285714285) * _lt_0_row[130]))) * var_chaste_interface__Na__Na_i) / (var_chaste_interface__Na__Na_i + 12.0)) * NV_Ith_S(mParameters, 4)) / (NV_Ith_S(mParameters, 4) + 1.5); // nA_per_nF
        const double var_Ca__csm = var_chaste_interface__Ca__Ca_submem * 0.001; // mM
        const double var_INaCa__jNaCa = (0.83999999999999997 * (1.0 / (1.0 + pow(0.29999999999999999 / var_chaste_interface__Ca__Ca_submem, 3.0))) * ((pow(var_chaste_interface__Na__Na_i, 3.0) * NV_Ith_S(mParameters, 3) * _lt_0_row[131]) - (pow(NV_Ith_S(mParameters, 5), 3.0) * var_Ca__csm * _lt_0_row[132]))) / (_lt_0_row[133] * (((1.3 * pow(var_chaste_interface__Na__Na_i, 3.0)) + (669921.875 * var_Ca__csm)) + (1860.8670000000004 * NV_Ith_S(mParameters, 3) * (1.0 + (var_Ca__csm * 277.77777777777777))) + (0.0035999999999999999 * pow(NV_Ith_S(mParameters, 5), 3.0) * (1.0 + pow(var_chaste_interface__Na__Na_i * 0.081300813008130079, 3.0))) + ((pow(var_chaste_interface__Na__Na_i, 3.0) * NV_Ith_S(mParameters, 3)) + (pow(NV_Ith_S(mParameters, 5), 3.0) * var_Ca__csm)))); // uM_per_ms
        const double var_INaCa__xiNaCa = 8.0 * var_INaCa__jNaCa; // nA_per_nF
        const double var_ICaL__rxa = (fabs(var_chaste_interface__cell__V * 0.075353936071760372) < 0.001) ? ((((var_Ca__csm * _lt_0_row[122]) - (0.34100000000000003 * NV_Ith_S(mParameters, 3))) * 0.0078521942756732063) * 13.270706908364934) : ((var_chaste_interface__cell__V * ((var_Ca__csm * _lt_0_row[122]) - (0.34100000000000003 * NV_Ith_S(mParameters, 3))) * 0.0078521942756732063) / _lt_0_row[123]); // mA_per_cm2
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__po = (((((1.0 - var_chaste_interface__ICaL__xi1ca) - var_chaste_interface__ICaL__xi2ca) - var_chaste_interface__ICaL__xi1ba) - var_chaste_interface__ICaL__xi2ba) - var_chaste_interface__ICaL__c1) - var_chaste_interface__ICaL__c2; // dimensionless
        const double var_ICaL__jca = var_ICaL__gca * var_ICaL__po * var_ICaL__rxa; // uM_per_ms
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_INa__xina = var_INa__gna * var_chaste_interface__INa__xh * var_chaste_interface__INa__xj * var_chaste_interface__INa__xm * var_chaste_interface__INa__xm * var_chaste_interface__INa__xm * (var_chaste_interface__cell__V - (26.541413816729868 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__Na__Na_i))); // nA_per_nF
        const double var_ICaL__fca = 1.0 / (1.0 + pow(3.0 / var_chaste_interface__Ca__Ca_dyad, 3.0)); // dimensionless
        const double var_ICaL__k1 = 0.024167999999999999 * var_ICaL__fca; // per_ms
        const double var_ICaL__tau_ca = (78.032899999999998 / (1.0 + pow(var_chaste_interface__Ca__Ca_dyad * 0.16410525711191157, 4.0))) + 0.10000000000000001; // ms
        const double var_ICaL__tauca = ((_lt_0_row[124] - var_ICaL__tau_ca) * _lt_0_row[125]) + var_ICaL__tau_ca; // ms
        const double var_ICaL__k6 = (var_ICaL__fca * _lt_0_row[126]) / var_ICaL__tauca; // per_ms
        const double var_ICaL__k5 = _lt_0_row[127] / var_ICaL__tauca; // per_ms
        const double var_ICaL__k4 = (((_lt_0_row[128] * var_ICaL__k1) * 9651.1122906915025) * var_ICaL__k5) / var_ICaL__k6; // per_ms
        const double var_ICaL__s1 = 0.018268800000000002 * var_ICaL__fca; // per_ms
        const double var_Ileak_Iup_Ixfer__jleak = ((2.069e-05 * var_chaste_interface__Ca__Ca_NSR * var_chaste_interface__Ca__Ca_NSR) / ((var_chaste_interface__Ca__Ca_NSR * var_chaste_interface__Ca__Ca_NSR) + 2500.0)) * ((var_chaste_interface__Ca__Ca_NSR * 16.667000000000002) - var_chaste_interface__Ca__Ca_i); // uM_per_ms
        const double var_Ileak_Iup_Ixfer__jup = (0.40000000000000002 * var_chaste_interface__Ca__Ca_i * var_chaste_interface__Ca__Ca_i) / ((var_chaste_interface__Ca__Ca_i * var_chaste_interface__Ca__Ca_i) + 0.25); // uM_per_ms
        const double var_Ca__dCa_JSR = ((-var_chaste_interface__Irel__xir) + var_Ileak_Iup_Ixfer__jup) - var_Ileak_Iup_Ixfer__jleak; // uM_per_ms
        const double var_Irel__Qr = (var_chaste_interface__Ca__Ca_NSR * (((var_chaste_interface__Irel__Ca_JSR > 50.0) && (var_chaste_interface__Irel__Ca_JSR < 90.0)) ? ((var_chaste_interface__Irel__Ca_JSR - 50.0) * 1.0) : (var_chaste_interface__Irel__Ca_JSR >= 90.0) ? ((11.300000000000001 * var_chaste_interface__Irel__Ca_JSR) +  -977.00000000000011) : 0.0)) * 0.011111111111111112; // uM_per_ms
        const double var_Ca__xbi = (0.0327 * var_chaste_interface__Ca__Ca_i * (70.0 - var_chaste_interface__Ca__tropi)) - (0.019599999999999999 * var_chaste_interface__Ca__tropi); // uM_per_ms
        const double var_Ca__xbs = (0.0327 * var_chaste_interface__Ca__Ca_submem * (70.0 - var_chaste_interface__Ca__trops)) - (0.019599999999999999 * var_chaste_interface__Ca__trops); // uM_per_ms
        const double var_Ca__jd = (var_chaste_interface__Ca__Ca_submem - var_chaste_interface__Ca__Ca_i) * 0.25; // uM_per_ms
        const double d_dt_chaste_interface__INa__xm = (_lt_0_row[134] * (1.0 - var_chaste_interface__INa__xm)) - (_lt_0_row[135] * var_chaste_interface__INa__xm); // 'per millisecond'
        const double d_dt_chaste_interface__INa__xh = (_lt_0_row[136] * (1.0 - var_chaste_interface__INa__xh)) - (_lt_0_row[137] * var_chaste_interface__INa__xh); // 'per millisecond'
        const double d_dt_chaste_interface__INa__xj = (_lt_0_row[138] * (1.0 - var_chaste_interface__INa__xj)) - (_lt_0_row[139] * var_chaste_interface__INa__xj); // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__c1 = ((_lt_0_row[140] * var_chaste_interface__ICaL__c2) + (0.000103615 * var_chaste_interface__ICaL__xi1ca) + (0.0022399999999999998 * var_chaste_interface__ICaL__xi1ba) + (3.0 * var_ICaL__po)) - ((_lt_0_row[141] + var_ICaL__k1 + 0.30413000000000001) * var_chaste_interface__ICaL__c1); // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__c2 = ((_lt_0_row[141] * var_chaste_interface__ICaL__c1) + (var_ICaL__k5 * var_chaste_interface__ICaL__xi2ca) + (_lt_0_row[142] * var_chaste_interface__ICaL__xi2ba)) - ((var_ICaL__k6 + _lt_0_row[143] + _lt_0_row[140]) * var_chaste_interface__ICaL__c2); // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi1ca = ((var_ICaL__k1 * var_chaste_interface__ICaL__c1) + (var_ICaL__k4 * var_chaste_interface__ICaL__xi2ca) + (var_ICaL__s1 * var_ICaL__po)) - ((_lt_0_row[144] + 0.000103615 + ((((var_ICaL__s1 * 0.29999999999999999) * 0.33333333333333331) * 0.000103615) / var_ICaL__k1)) * var_chaste_interface__ICaL__xi1ca); // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi1ba = ((0.00413 * var_chaste_interface__ICaL__c1) + (_lt_0_row[145] * var_chaste_interface__ICaL__xi2ba) + (0.0019499999999999999 * var_ICaL__po)) - (_lt_0_row[146] * var_chaste_interface__ICaL__xi1ba); // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi2ca = ((_lt_0_row[144] * var_chaste_interface__ICaL__xi1ca) + (var_ICaL__k6 * var_chaste_interface__ICaL__c2)) - ((var_ICaL__k5 + var_ICaL__k4) * var_chaste_interface__ICaL__xi2ca); // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi2ba = ((_lt_0_row[144] * var_chaste_interface__ICaL__xi1ba) + (_lt_0_row[143] * var_chaste_interface__ICaL__c2)) - (_lt_0_row[147] * var_chaste_interface__ICaL__xi2ba); // 'per millisecond'
        const double d_dt_chaste_interface__IKr__xr = (_lt_0_row[148] - var_chaste_interface__IKr__xr) / _lt_0_row[149]; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs1 = (_lt_0_row[150] - var_chaste_interface__IKs__xs1) / _lt_0_row[151]; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs2 = (_lt_0_row[150] - var_chaste_interface__IKs__xs2) / _lt_0_row[152]; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__xtos = (_lt_0_row[153] - var_chaste_interface__Ito__xtos) / _lt_0_row[154]; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__ytos = (_lt_0_row[155] - var_chaste_interface__Ito__ytos) / _lt_0_row[156]; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__xtof = (_lt_0_row[153] - var_chaste_interface__Ito__xtof) / _lt_0_row[157]; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__ytof = (_lt_0_row[155] - var_chaste_interface__Ito__ytof) / _lt_0_row[158]; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__Ca_JSR = (var_chaste_interface__Ca__Ca_NSR - var_chaste_interface__Irel__Ca_JSR) * 0.01; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Irel__xir = ((2.5807899999999999 * var_ICaL__po * fabs(var_ICaL__rxa) * _lt_0_row[159]) * var_Irel__Qr) - ((var_chaste_interface__Irel__xir * (1.0 - ((30.0 * var_Ca__dCa_JSR) / var_chaste_interface__Ca__Ca_NSR))) * 0.033333333333333333); // 'micromolar per_ms per millisecond'
        const double d_dt_chaste_interface__Na__Na_i = (-(var_INa__xina + (3.0 * var_INaK__xiNaK) + (3.0 * var_INaCa__xiNaCa))) * 0.000125; // 'millimolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_dyad = (((((var_ICaL__po * var_Irel__Qr * fabs(var_ICaL__rxa) * 26841.799999999999) * 1.0) * _lt_0_row[32]) / _lt_0_row[160]) + (var_ICaL__po * 9000.0 * fabs(var_ICaL__rxa))) - ((var_chaste_interface__Ca__Ca_dyad - var_chaste_interface__Ca__Ca_submem) * 2.0); // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_submem = (1.0 / (1.0 + (168.0 / ((7.0 + var_chaste_interface__Ca__Ca_submem) * (7.0 + var_chaste_interface__Ca__Ca_submem))) + (28.199999999999999 / ((0.59999999999999998 + var_chaste_interface__Ca__Ca_submem) * (0.59999999999999998 + var_chaste_interface__Ca__Ca_submem))) + (4.5 / ((0.29999999999999999 + var_chaste_interface__Ca__Ca_submem) * (0.29999999999999999 + var_chaste_interface__Ca__Ca_submem))) + (546.0 / ((13.0 + var_chaste_interface__Ca__Ca_submem) * (13.0 + var_chaste_interface__Ca__Ca_submem))))) * ((50.0 * (((var_chaste_interface__Irel__xir - var_Ca__jd) - var_ICaL__jca) + var_INaCa__jNaCa)) - var_Ca__xbs); // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_i = (1.0 / (1.0 + (168.0 / ((7.0 + var_chaste_interface__Ca__Ca_i) * (7.0 + var_chaste_interface__Ca__Ca_i))) + (28.199999999999999 / ((0.59999999999999998 + var_chaste_interface__Ca__Ca_i) * (0.59999999999999998 + var_chaste_interface__Ca__Ca_i))) + (4.5 / ((0.29999999999999999 + var_chaste_interface__Ca__Ca_i) * (0.29999999999999999 + var_chaste_interface__Ca__Ca_i))) + (546.0 / ((13.0 + var_chaste_interface__Ca__Ca_i) * (13.0 + var_chaste_interface__Ca__Ca_i))))) * (((var_Ca__jd - var_Ileak_Iup_Ixfer__jup) + var_Ileak_Iup_Ixfer__jleak) - var_Ca__xbi); // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_NSR = var_Ca__dCa_JSR; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__tropi = var_Ca__xbi; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__trops = var_Ca__xbs; // 'micromolar per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_reversal_potentials__ek = 26.541413816729868 * log(NV_Ith_S(mParameters, 4) * 0.0071428571428571426); // mV
            const double var_IK1__aki = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) - 59.215000000000003))); // per_ms
            const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
            const double var_cell__Itotal = -(var_INa__xina + (0.29999999999999999 * sqrt(NV_Ith_S(mParameters, 4) * 0.18518518518518517) * (var_IK1__aki / (var_IK1__aki + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) - 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__ek) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__ek)) + (NV_Ith_S(mParameters, 0) * var_IKr__gkr * sqrt(NV_Ith_S(mParameters, 4) * 0.18518518518518517) * var_chaste_interface__IKr__xr * _lt_0_row[120] * (var_chaste_interface__cell__V - var_reversal_potentials__ek)) + (NV_Ith_S(mParameters, 1) * 0.1386 * (1.0 + (0.80000000000000004 / (1.0 + pow(0.5 / var_chaste_interface__Ca__Ca_i, 3.0)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__cell__V - (26.541413816729868 * log((NV_Ith_S(mParameters, 4) + (0.018329999999999999 * NV_Ith_S(mParameters, 5))) / (140.0 + (0.018329999999999999 * var_chaste_interface__Na__Na_i)))))) + ((NV_Ith_S(mParameters, 2) * 0.11 * var_chaste_interface__Ito__xtos * (var_chaste_interface__Ito__ytos + _lt_0_row[121]) * (var_chaste_interface__cell__V - var_reversal_potentials__ek)) + (0.040000000000000001 * var_chaste_interface__Ito__xtof * var_chaste_interface__Ito__ytof * (var_chaste_interface__cell__V - var_reversal_potentials__ek))) + var_INaCa__xiNaCa + (var_ICaL__jca * 16.0) + var_INaK__xiNaK + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // nA_per_nF
            d_dt_chaste_interface__cell__V = var_cell__Itotal; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__INa__xm;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa__xh;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa__xj;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__ICaL__c1;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__ICaL__c2;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__ICaL__xi1ca;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__ICaL__xi1ba;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__ICaL__xi2ca;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__ICaL__xi2ba;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__IKr__xr;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__IKs__xs1;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__IKs__xs2;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__Ito__xtos;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__Ito__ytos;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__Ito__xtof;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Ito__ytof;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Irel__Ca_JSR;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__Irel__xir;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__Na__Na_i;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Ca__Ca_dyad;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Ca__Ca_submem;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Ca__Ca_i;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Ca__Ca_NSR;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__Ca__tropi;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__Ca__trops;
    }
    
    void CellMahajan2008FromCellMLCvodeOpt::EvaluateAnalyticJacobian(long int N, double var_chaste_interface__Environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.169816169406
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.000018211252
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000033616596
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Irel__Ca_JSR = NV_Ith_S(rY, 17);
        // Units: uM; Initial value: 97.505463697266
        double var_chaste_interface__Irel__xir = NV_Ith_S(rY, 18);
        // Units: uM_per_ms; Initial value: 0.006679257264
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_dyad = NV_Ith_S(rY, 20);
        // Units: uM; Initial value: 1.716573130685
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.256752008084
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 23);
        // Units: uM; Initial value: 104.450004990523
        double var_chaste_interface__Ca__tropi = NV_Ith_S(rY, 24);
        // Units: uM; Initial value: 22.171689894953
        double var_chaste_interface__Ca__trops = NV_Ith_S(rY, 25);
        // Units: uM; Initial value: 19.864701949854
        
        // Lookup table indexing
        const bool _oob_0 = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__cell__V);
#define COVERAGE_IGNORE
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__Environment__time));
#undef COVERAGE_IGNORE
        const double* const _lt_0_row = CellMahajan2008FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__cell__V);
        
        const double var_chaste_interface__Environment__fake_dt = 1.0; // ms
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_t1 = var_INa__gna * var_chaste_interface__INa__xh; // dimensionless
        const double var_t2 = pow(var_chaste_interface__INa__xm, 2.0); // dimensionless
        const double var_t3 = var_t2 * var_chaste_interface__INa__xm; // dimensionless
        const double var_t5 = (var_t1 * var_chaste_interface__INa__xj) * var_t3; // dimensionless
        const double var_t6 = pow(NV_Ith_S(mParameters, 4), 0.5); // dimensionless
        const double var_t7 = 0.29999999999999999 * var_t6; // dimensionless
        const double var_t15 = 26.541413816729868 * log(NV_Ith_S(mParameters, 4) * 0.0071428571428571426); // dimensionless
        const double var_t18 = exp(((0.23849999999999999 * var_chaste_interface__cell__V) - (0.23849999999999999 * var_t15)) - 14.1227775); // dimensionless
        const double var_t19 = 1.0 + var_t18; // dimensionless
        const double var_t21 = 1.0 / pow(var_t19, 2.0); // dimensionless
        const double var_t23 = 1.0 / var_t19; // dimensionless
        const double var_t28 = exp(((0.080320000000000003 * var_chaste_interface__cell__V) - (0.080320000000000003 * var_t15)) + 0.43983232); // dimensionless
        const double var_t33 = exp(((0.061749999999999999 * var_chaste_interface__cell__V) - (0.061749999999999999 * var_t15)) - 36.698642499999998); // dimensionless
        const double var_t34 = (0.49124000000000001 * var_t28) + var_t33; // dimensionless
        const double var_t38 = exp((( -0.51429999999999998 * var_chaste_interface__cell__V) + (0.51429999999999998 * var_t15)) - 2.4444678999999998); // dimensionless
        const double var_t39 = 1.0 + var_t38; // dimensionless
        const double var_t40 = 1.0 / var_t39; // dimensionless
        const double var_t42 = (1.02 * var_t23) + (var_t34 * var_t40); // dimensionless
        const double var_t43 = 1.0 / var_t42; // dimensionless
        const double var_t44 = var_chaste_interface__cell__V - var_t15; // dimensionless
        const double var_t71 = NV_Ith_S(mParameters, 0) * var_IKr__gkr; // dimensionless
        const double var_t89 = NV_Ith_S(mParameters, 1) * 0.1386; // dimensionless
        const double var_t90 = pow(var_chaste_interface__Ca__Ca_i, 2.0); // dimensionless
        const double var_t91 = var_t90 * var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t94 = 1.0 + (0.125 / var_t91); // dimensionless
        const double var_t97 = 1.0 + (0.80000000000000004 / var_t94); // dimensionless
        const double var_t98 = var_t97 * var_chaste_interface__IKs__xs1; // dimensionless
        const double var_t100 = (var_t89 * var_t98) * var_chaste_interface__IKs__xs2; // dimensionless
        const double var_t101 = NV_Ith_S(mParameters, 2) * 0.11; // dimensionless
        const double var_t115 = var_chaste_interface__Ito__ytos + _lt_0_row[0]; // dimensionless
        const double var_t118 = 0.040000000000000001 * var_chaste_interface__Ito__xtof; // dimensionless
        const double var_t123 = pow(var_chaste_interface__Ca__Ca_submem, 2.0); // dimensionless
        const double var_t127 = 1.0 + ((0.027 / var_t123) / var_chaste_interface__Ca__Ca_submem); // dimensionless
        const double var_t128 = 1.0 / var_t127; // dimensionless
        const double var_t129 = 6.7199999999999998 * var_t128; // dimensionless
        const double var_t130 = pow(var_chaste_interface__Na__Na_i, 2.0); // dimensionless
        const double var_t131 = var_t130 * var_chaste_interface__Na__Na_i; // dimensionless
        const double var_t132 = var_t131 * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_t145 = pow(NV_Ith_S(mParameters, 5), 2.0) * NV_Ith_S(mParameters, 5); // dimensionless
        const double var_t146 = var_t145 * var_chaste_interface__Ca__Ca_submem; // dimensionless
        const double var_t165 = 1860.8670000000004 * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_t171 = 0.0035999999999999999 * var_t145; // dimensionless
        const double var_t177 = (((((1.3 * var_t131) + (669.921875 * var_chaste_interface__Ca__Ca_submem)) + (var_t165 * (1.0 + ((0.001 * var_chaste_interface__Ca__Ca_submem) * 277.77777777777777)))) + (var_t171 * (1.0 + (var_t131 * 0.00053738391835633597)))) + var_t132) + (0.001 * var_t146); // dimensionless
        const double var_t178 = 1.0 / var_t177; // dimensionless
        const double var_t179 = ((((((0.34999999999999998 * var_t132) * 96.485341500000004) * 0.00039049421860501144) * _lt_0_row[1]) + (((0.00064999999999999997 * var_t146) * 96.485341500000004) * _lt_0_row[2])) * _lt_0_row[3]) * var_t178; // dimensionless
        const double var_t180 = var_t129 * var_t179; // dimensionless
        const double var_t184 = (var_t132 * _lt_0_row[1]) - ((0.001 * var_t146) * _lt_0_row[4]); // dimensionless
        const double var_t191 = (var_t178 * 96.485341500000004) * _lt_0_row[2]; // dimensionless
        const double var_t192 = (((6.7199999999999998 * var_t128) * var_t184) * _lt_0_row[5]) * var_t191; // dimensionless
        const double var_t194 = 8.0 * var_ICaL__gca; // dimensionless
        const double var_t195 = (((((1.0 - var_chaste_interface__ICaL__xi1ca) - var_chaste_interface__ICaL__xi2ca) - var_chaste_interface__ICaL__xi1ba) - var_chaste_interface__ICaL__xi2ba) - var_chaste_interface__ICaL__c1) - var_chaste_interface__ICaL__c2; // dimensionless
        const double var_t211 = ((0.001 * var_chaste_interface__Ca__Ca_submem) * _lt_0_row[6]) - (0.34100000000000003 * NV_Ith_S(mParameters, 3)); // dimensionless
        const double var_t216 = (0.0019630485689183016 * var_t211) * _lt_0_row[7]; // dimensionless
        const double var_t229 = ((((((0.00054000000000000001 * var_chaste_interface__cell__V) * 9309.4211243716236) * 96.485341500000004) * 0.014465406742646259) * 1.0541406645302749e-05) * var_chaste_interface__Ca__Ca_submem) * _lt_0_row[8]; // dimensionless
        const double var_t236 = (((((((0.00054000000000000001 * var_chaste_interface__cell__V) * 9309.4211243716236) * 96.485341500000004) * 0.014465406742646259) * 1.0541406645302749e-05) * var_t211) / _lt_0_row[9]) * _lt_0_row[6]; // dimensionless
        const double var_t239 = ((2.0 * fabs((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) < 0.001) ? (((0.020108349628642708 * var_chaste_interface__Ca__Ca_submem) * 0.00039049421860501144) * _lt_0_row[6]) : (((4.0 * var_t216) + (0.0080000000000000002 * var_t229)) - (8.0 * var_t236)); // dimensionless
        const double var_t248 = exp(0.01485884101 * NV_Ith_S(mParameters, 5)) - 1.0; // dimensionless
        const double var_t252 = _lt_0_row[10] + ((0.0052142857139999997 * var_t248) * _lt_0_row[11]); // dimensionless
        const double var_t257 = var_chaste_interface__Na__Na_i + 12.0; // dimensionless
        const double var_t259 = (1.0 / var_t257) * NV_Ith_S(mParameters, 4); // dimensionless
        const double var_t261 = 1.0 / (NV_Ith_S(mParameters, 4) + 1.5); // dimensionless
        const double var_t273 = ((((1.5 / pow(var_t252, 2.0)) * var_chaste_interface__Na__Na_i) * var_t259) * var_t261) * (_lt_0_row[12] - ((((0.0052142857139999997 * var_t248) * 96.485341500000004) * 0.00039049421860501144) * _lt_0_row[11])); // dimensionless
        const double var_t276 = 1.0 / var_chaste_interface__Na__Na_i; // dimensionless
        const double var_t281 = var_chaste_interface__cell__V - (26.541413816729868 * log(NV_Ith_S(mParameters, 5) * var_t276)); // dimensionless
        const double var_t285 = var_INa__gna * var_chaste_interface__INa__xj; // dimensionless
        const double var_t286 = var_t3 * var_t281; // dimensionless
        const double var_t290 = 0.052102084410000006 * var_t211; // dimensionless
        const double var_t295 = ((((0.00054000000000000001 * var_chaste_interface__cell__V) * 9309.4211243716236) * 0.00039049421860501144) * var_t211) * _lt_0_row[7]; // dimensionless
        const double var_t297 = ((2.0 * fabs((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) < 0.001) ? (2.0 * var_t290) : (4.0 * var_t295); // dimensionless
        const double var_t299 = (2.0 * var_t194) * var_t297; // dimensionless
        const double var_t309 = 1.0 / (140.0 + (0.018329999999999999 * var_chaste_interface__Na__Na_i)); // dimensionless
        const double var_t314 = var_chaste_interface__cell__V - (26.541413816729868 * log((NV_Ith_S(mParameters, 4) + (0.018329999999999999 * NV_Ith_S(mParameters, 5))) * var_t309)); // dimensionless
        const double var_t328 = ((var_t5 * 0.086173421482889187) * 308.0) * var_t276; // dimensionless
        const double var_t336 = _lt_0_row[3] * var_t178; // dimensionless
        const double var_t337 = (NV_Ith_S(mParameters, 3) * _lt_0_row[1]) * var_t336; // dimensionless
        const double var_t338 = ((6.7199999999999998 * var_t128) * var_t130) * var_t337; // dimensionless
        const double var_t340 = var_t184 * _lt_0_row[3]; // dimensionless
        const double var_t342 = 1.0 / pow(var_t177, 2.0); // dimensionless
        const double var_t347 = ((1.3 * var_t130) + ((var_t171 * var_t130) * 0.00053738391835633597)) + (var_t130 * NV_Ith_S(mParameters, 3)); // dimensionless
        const double var_t350 = (((3.0 * var_t129) * var_t340) * var_t342) * var_t347; // dimensionless
        const double var_t352 = 1.5 / var_t252; // dimensionless
        const double var_t354 = (var_t352 * var_t259) * var_t261; // dimensionless
        const double var_t360 = (((var_t352 * var_chaste_interface__Na__Na_i) / pow(var_t257, 2.0)) * NV_Ith_S(mParameters, 4)) * var_t261; // dimensionless
        const double var_t363 = 1.0 / pow(var_t127, 2.0); // dimensionless
        const double var_t369 = (var_t336 * 0.027) / pow(var_t123, 2.0); // dimensionless
        const double var_t370 = ((6.7199999999999998 * var_t363) * var_t184) * var_t369; // dimensionless
        const double var_t374 = ((var_t129 * var_t145) * _lt_0_row[4]) * var_t336; // dimensionless
        const double var_t377 = (669921.875 + (var_t165 * 277.77777777777777)) + var_t145; // dimensionless
        const double var_t380 = (((0.001 * var_t129) * var_t340) * var_t342) * var_t377; // dimensionless
        const double var_t596 = _lt_0_row[13] * var_chaste_interface__ICaL__c1; // dimensionless
        const double var_t603 = pow(var_chaste_interface__Ca__Ca_dyad, 2.0); // dimensionless
        const double var_t604 = var_t603 * var_chaste_interface__Ca__Ca_dyad; // dimensionless
        const double var_t607 = 1.0 + (27.0 / var_t604); // dimensionless
        const double var_t608 = 1.0 / var_t607; // dimensionless
        const double var_t616 = 1.0 / pow(var_t607, 2.0); // dimensionless
        const double var_t618 = pow(var_t603, 2.0); // dimensionless
        const double var_t619 = 1.0 / var_t618; // dimensionless
        const double var_t622 = (((0.072503999999999999 * var_t616) * 27.0) * var_t619) * var_chaste_interface__ICaL__c1; // dimensionless
        const double var_t638 = 1.0 + (var_t618 * 0.00072525373756441517); // dimensionless
        const double var_t640 = 78.032899999999998 / var_t638; // dimensionless
        const double var_t641 = _lt_0_row[14] - var_t640; // dimensionless
        const double var_t650 = ((var_t641 * _lt_0_row[15]) + var_t640) + 0.10000000000000001; // dimensionless
        const double var_t651 = 1.0 / var_t650; // dimensionless
        const double var_t652 = _lt_0_row[16] * var_t651; // dimensionless
        const double var_t658 = 1.0 / pow(var_t650, 2.0); // dimensionless
        const double var_t659 = _lt_0_row[17] * var_t658; // dimensionless
        const double var_t667 = _lt_0_row[18] - ((var_t641 * _lt_0_row[19]) * _lt_0_row[20]); // dimensionless
        const double var_t685 = var_t608 * _lt_0_row[21]; // dimensionless
        const double var_t689 = var_t608 * _lt_0_row[22]; // dimensionless
        const double var_t701 = var_t689 * var_t651; // dimensionless
        const double var_t704 = _lt_0_row[17] * var_t651; // dimensionless
        const double var_t708 = 78.032899999999998 / pow(var_t638, 2.0); // dimensionless
        const double var_t709 = var_t604 * 0.00072525373756441517; // dimensionless
        const double var_t713 = ((var_t708 * var_t709) * _lt_0_row[15]) - (var_t708 * var_t709); // dimensionless
        const double var_t715 = ((4.0 * var_t659) * var_chaste_interface__ICaL__xi2ca) * var_t713; // dimensionless
        const double var_t716 = var_t616 * _lt_0_row[22]; // dimensionless
        const double var_t754 = ((_lt_0_row[23] * var_chaste_interface__ICaL__xi2ca) * 0.125) * _lt_0_row[24]; // dimensionless
        const double var_t769 = _lt_0_row[25] * var_chaste_interface__ICaL__xi2ca; // dimensionless
        const double var_t778 = _lt_0_row[26] * var_chaste_interface__ICaL__xi1ca; // dimensionless
        const double var_t781 = 0.018268800000000002 * var_t608; // dimensionless
        const double var_t809 = ((_lt_0_row[27] * var_chaste_interface__ICaL__xi2ba) * 0.125) * _lt_0_row[24]; // dimensionless
        const double var_t817 = _lt_0_row[25] * var_chaste_interface__ICaL__xi2ba; // dimensionless
        const double var_t823 = _lt_0_row[26] * var_chaste_interface__ICaL__xi1ba; // dimensionless
        const double var_t838 = (var_chaste_interface__ICaL__c2 * 0.088339222614840993) * _lt_0_row[16]; // dimensionless
        const double var_t840 = var_t658 * var_chaste_interface__ICaL__c2; // dimensionless
        const double var_t1131 = 2.5807899999999999 * var_t195; // dimensionless
        const double var_t1133 = Signum(var_t290) * 0.00054000000000000001; // dimensionless
        const double var_t1140 = Signum(var_t295); // dimensionless
        const double var_t1146 = ((2.0 * fabs((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) < 0.001) ? ((((((0.0040000000000000001 * var_t1133) * 9309.4211243716236) * var_chaste_interface__Ca__Ca_submem) * 0.12027221933034352) * 0.003246753246753247) * _lt_0_row[6]) : ((4.0 * var_t1140) * ((var_t216 + (0.002 * var_t229)) - (2.0 * var_t236))); // dimensionless
        const double var_t1153 = _lt_0_row[28] * var_chaste_interface__Ca__Ca_NSR; // dimensionless
        const double var_t1156 = (50.0 < var_chaste_interface__Irel__Ca_JSR) && (var_chaste_interface__Irel__Ca_JSR < 90.0); // dimensionless
        const double var_t1158 = 90.0 <= var_chaste_interface__Irel__Ca_JSR; // dimensionless
        const double var_t1163 = var_t1156 ? (var_chaste_interface__Irel__Ca_JSR - 50.0) : var_t1158 ? (((11.300000000000001 * var_chaste_interface__Irel__Ca_JSR) +  -927.00000000000011) - 50.0) : 0.0; // dimensionless
        const double var_t1165 = var_t1163 * 0.011111111111111112; // dimensionless
        const double var_t1166 = var_t1153 * var_t1165; // dimensionless
        const double var_t1172 = ((2.0 * fabs((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) < 0.001) ? (2.0 * fabs(var_t290)) : (4.0 * fabs(var_t295)); // dimensionless
        const double var_t1177 = (var_chaste_interface__Ca__Ca_NSR * var_t1163) * 0.011111111111111112; // dimensionless
        const double var_t1192 = ((2.5807899999999999 * var_t1172) * _lt_0_row[29]) * var_t1166; // dimensionless
        const double var_t1196 = (var_t1156 ? 1.0 : var_t1158 ? 11.300000000000001 : 0.0) * 0.011111111111111112; // dimensionless
        const double var_t1201 = var_t90 + 0.25; // dimensionless
        const double var_t1202 = 1.0 / var_t1201; // dimensionless
        const double var_t1203 = (0.40000000000000002 * var_t90) * var_t1202; // dimensionless
        const double var_t1204 = pow(var_chaste_interface__Ca__Ca_NSR, 2.0); // dimensionless
        const double var_t1205 = 2.069e-05 * var_t1204; // dimensionless
        const double var_t1207 = var_t1204 + 2500.0; // dimensionless
        const double var_t1208 = 1.0 / var_t1207; // dimensionless
        const double var_t1210 = (16.667000000000002 * var_chaste_interface__Ca__Ca_NSR) - var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t1211 = var_t1208 * var_t1210; // dimensionless
        const double var_t1212 = var_t1205 * var_t1211; // dimensionless
        const double var_t1214 = 30.0 * (((-var_chaste_interface__Irel__xir) + var_t1203) - var_t1212); // dimensionless
        const double var_t1215 = 1.0 / var_chaste_interface__Ca__Ca_NSR; // dimensionless
        const double var_t1230 = ((2.0 * fabs((var_chaste_interface__cell__V * 96.485341500000004) * 0.00039049421860501144)) < 0.001) ? (((0.002 * var_t1133) * 96.485341500000004) * _lt_0_row[6]) : (((((0.0040000000000000001 * var_t1140) * 0.00054000000000000001) * var_chaste_interface__cell__V) * 9309.4211243716236) * _lt_0_row[30]); // dimensionless
        const double var_t1236 = (0.80000000000000004 * var_chaste_interface__Ca__Ca_i) * var_t1202; // dimensionless
        const double var_t1241 = (0.80000000000000004 * var_t91) / pow(var_t1201, 2.0); // dimensionless
        const double var_t1242 = var_t1205 * var_t1208; // dimensionless
        const double var_t1243 = (var_t1236 - var_t1241) + var_t1242; // dimensionless
        const double var_t1260 = ((( -4.138e-05 * var_chaste_interface__Ca__Ca_NSR) * var_t1211) + ((((4.138e-05 * var_t1204) * var_chaste_interface__Ca__Ca_NSR) / pow(var_t1207, 2.0)) * var_t1210)) - (16.667000000000002 * var_t1242); // dimensionless
        const double var_t1281 = var_t286 * 0.125; // dimensionless
        const double var_t1299 = var_t195 * var_chaste_interface__Ca__Ca_NSR; // dimensionless
        const double var_t1300 = var_t1299 * var_t1165; // dimensionless
        const double var_t1309 = var_t1172 * 26841.799999999999; // dimensionless
        const double var_t1321 = var_t195 * 9000.0; // dimensionless
        const double var_t1324 = var_t1309 * _lt_0_row[31]; // dimensionless
        const double var_t1327 = ((-var_t1177) * var_t1324) - (9000.0 * var_t1172); // dimensionless
        const double var_t1340 = 7.0 + var_chaste_interface__Ca__Ca_submem; // dimensionless
        const double var_t1341 = pow(var_t1340, 2.0); // dimensionless
        const double var_t1345 = 0.59999999999999998 + var_chaste_interface__Ca__Ca_submem; // dimensionless
        const double var_t1346 = pow(var_t1345, 2.0); // dimensionless
        const double var_t1350 = 0.29999999999999999 + var_chaste_interface__Ca__Ca_submem; // dimensionless
        const double var_t1351 = pow(var_t1350, 2.0); // dimensionless
        const double var_t1355 = 13.0 + var_chaste_interface__Ca__Ca_submem; // dimensionless
        const double var_t1356 = pow(var_t1355, 2.0); // dimensionless
        const double var_t1359 = (((1.0 + (168.0 / var_t1341)) + (28.199999999999999 / var_t1346)) + (4.5 / var_t1351)) + (546.0 / var_t1356); // dimensionless
        const double var_t1360 = 1.0 / var_t1359; // dimensionless
        const double var_t1361 = var_ICaL__gca * var_t195; // dimensionless
        const double var_t1364 = 0.83999999999999997 * var_t128; // dimensionless
        const double var_t1375 = ((50.0 * var_t1360) * var_ICaL__gca) * var_t297; // dimensionless
        const double var_t1380 = var_t1364 * var_t184; // dimensionless
        const double var_t1381 = _lt_0_row[3] * var_t342; // dimensionless
        const double var_t1392 = (var_chaste_interface__Ca__Ca_submem - var_chaste_interface__Ca__Ca_i) * 0.25; // dimensionless
        const double var_t1399 = 0.0327 * var_chaste_interface__Ca__Ca_submem; // dimensionless
        const double var_t1400 = 70.0 - var_chaste_interface__Ca__trops; // dimensionless
        const double var_t1434 = 0.0327 * var_t1400; // dimensionless
        const double var_t1440 = var_t1399 + 0.019599999999999999; // dimensionless
        const double var_t1442 = 7.0 + var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t1443 = pow(var_t1442, 2.0); // dimensionless
        const double var_t1446 = 0.59999999999999998 + var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t1447 = pow(var_t1446, 2.0); // dimensionless
        const double var_t1450 = 0.29999999999999999 + var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t1451 = pow(var_t1450, 2.0); // dimensionless
        const double var_t1454 = 13.0 + var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t1455 = pow(var_t1454, 2.0); // dimensionless
        const double var_t1458 = (((1.0 + (168.0 / var_t1443)) + (28.199999999999999 / var_t1447)) + (4.5 / var_t1451)) + (546.0 / var_t1455); // dimensionless
        const double var_t1459 = 1.0 / var_t1458; // dimensionless
        const double var_t1463 = 0.0327 * var_chaste_interface__Ca__Ca_i; // dimensionless
        const double var_t1464 = 70.0 - var_chaste_interface__Ca__tropi; // dimensionless
        const double var_t1483 = 0.0327 * var_t1464; // dimensionless
        const double var_t1488 = var_t1463 + 0.019599999999999999; // dimensionless
        
        // Matrix entries
        DENSE_ELEM(rJacobian, 0, 0) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((((((((-var_t5) + (((((0.10468673990000001 * var_t7) * var_t21) * var_t43) * var_t44) * var_t18)) + (((((0.43893811259999999 * var_t7) * var_t23) / pow(var_t42, 2.0)) * var_t44) * (((( -0.24326999999999999 * var_t21) * var_t18) + (((0.039456396800000001 * var_t28) + (0.061749999999999999 * var_t33)) * var_t40)) + (((0.51429999999999998 * var_t34) / pow(var_t39, 2.0)) * var_t38)))) - (((0.43893811259999999 * var_t7) * var_t23) * var_t43)) + ((((((0.01921122691 * var_t71) * var_t6) * var_chaste_interface__IKr__xr) / _lt_0_row[118]) * var_t44) * _lt_0_row[119])) - ((((0.43033148290000001 * var_t71) * var_t6) * var_chaste_interface__IKr__xr) * _lt_0_row[117])) - var_t100) + ((((0.050000000000000003 * var_t101) * var_chaste_interface__Ito__xtos) * _lt_0_row[111]) * var_t44)) - ((var_t101 * var_chaste_interface__Ito__xtos) * var_t115)) - (var_t118 * var_chaste_interface__Ito__ytof)) - var_t180) - (0.13 * var_t192)) - (((2.0 * var_t194) * var_t195) * var_t239)) + var_t273));
        DENSE_ELEM(rJacobian, 1, 0) = var_chaste_interface__Environment__fake_dt * ((_lt_0_row[92] * (1.0 - var_chaste_interface__INa__xm)) + (_lt_0_row[93] * var_chaste_interface__INa__xm));
        DENSE_ELEM(rJacobian, 2, 0) = var_chaste_interface__Environment__fake_dt * ((_lt_0_row[86] * (1.0 - var_chaste_interface__INa__xh)) - (_lt_0_row[87] * var_chaste_interface__INa__xh));
        DENSE_ELEM(rJacobian, 3, 0) = var_chaste_interface__Environment__fake_dt * ((_lt_0_row[89] * (1.0 - var_chaste_interface__INa__xj)) - (_lt_0_row[90] * var_chaste_interface__INa__xj));
        DENSE_ELEM(rJacobian, 4, 0) = var_chaste_interface__Environment__fake_dt * ((((_lt_0_row[39] * var_chaste_interface__ICaL__c2) * 0.125) * _lt_0_row[24]) + var_t596);
        DENSE_ELEM(rJacobian, 5, 0) = var_chaste_interface__Environment__fake_dt * ((((((-var_t596) - ((_lt_0_row[44] * var_t652) * var_chaste_interface__ICaL__xi2ca)) - ((var_t659 * var_chaste_interface__ICaL__xi2ca) * var_t667)) - (_lt_0_row[45] * var_chaste_interface__ICaL__xi2ba)) - ((_lt_0_row[46] * var_chaste_interface__ICaL__xi2ba) * _lt_0_row[47])) - ((((((((var_t685 * var_t651) * 0.088339222614840993) * _lt_0_row[16]) - ((var_t689 * var_t658) * var_t667)) + _lt_0_row[48]) - _lt_0_row[49]) + _lt_0_row[13]) * var_chaste_interface__ICaL__c2));
        DENSE_ELEM(rJacobian, 6, 0) = var_chaste_interface__Environment__fake_dt * ((((((_lt_0_row[59] * var_chaste_interface__ICaL__xi2ca) + (_lt_0_row[60] * var_t754)) + (_lt_0_row[61] * var_t754)) - (_lt_0_row[62] * var_t769)) - (_lt_0_row[63] * var_t769)) + var_t778);
        DENSE_ELEM(rJacobian, 7, 0) = var_chaste_interface__Environment__fake_dt * ((((((_lt_0_row[52] * var_chaste_interface__ICaL__xi2ba) + (_lt_0_row[53] * var_t809)) + (_lt_0_row[54] * var_t809)) - (_lt_0_row[55] * var_t817)) - (_lt_0_row[56] * var_t817)) + var_t823);
        DENSE_ELEM(rJacobian, 8, 0) = var_chaste_interface__Environment__fake_dt * ((((-var_t778) + ((var_t685 * var_t651) * var_t838)) - ((var_t689 * var_t840) * var_t667)) - ((((((((_lt_0_row[68] * var_t652) - (var_t659 * var_t667)) - _lt_0_row[69]) + _lt_0_row[70]) + _lt_0_row[71]) - _lt_0_row[72]) - _lt_0_row[73]) * var_chaste_interface__ICaL__xi2ca));
        DENSE_ELEM(rJacobian, 9, 0) = var_chaste_interface__Environment__fake_dt * ((((-var_t823) + (_lt_0_row[65] * var_t838)) - ((_lt_0_row[66] * var_chaste_interface__ICaL__c2) * _lt_0_row[47])) - (_lt_0_row[67] * var_chaste_interface__ICaL__xi2ba));
        DENSE_ELEM(rJacobian, 10, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[75] + ((_lt_0_row[76] - var_chaste_interface__IKr__xr) * _lt_0_row[77]));
        DENSE_ELEM(rJacobian, 11, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[79] - (((_lt_0_row[80] - var_chaste_interface__IKs__xs1) * _lt_0_row[81]) * _lt_0_row[82]));
        DENSE_ELEM(rJacobian, 12, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[84] - (((0.25 * (_lt_0_row[80] - var_chaste_interface__IKs__xs2)) * _lt_0_row[81]) * _lt_0_row[82]));
        DENSE_ELEM(rJacobian, 13, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[103] + ((((0.59999999999999998 * (_lt_0_row[99] - var_chaste_interface__Ito__xtos)) / _lt_0_row[104]) / _lt_0_row[105]) * _lt_0_row[106]));
        DENSE_ELEM(rJacobian, 14, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[113] + ((((300.0 * (_lt_0_row[109] - var_chaste_interface__Ito__ytos)) / _lt_0_row[114]) / _lt_0_row[115]) * _lt_0_row[116]));
        DENSE_ELEM(rJacobian, 15, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[98] + ((((0.007777777778 * (_lt_0_row[99] - var_chaste_interface__Ito__xtof)) / _lt_0_row[100]) * var_chaste_interface__cell__V) * _lt_0_row[101]));
        DENSE_ELEM(rJacobian, 16, 0) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[108] + (((0.0050000000000000001 * (_lt_0_row[109] - var_chaste_interface__Ito__ytof)) / _lt_0_row[110]) * _lt_0_row[111]));
        DENSE_ELEM(rJacobian, 18, 0) = var_chaste_interface__Environment__fake_dt * (((((var_t1131 * var_t1146) * _lt_0_row[29]) * var_t1166) - ((((var_t1131 * var_t1172) * 0.050000000000000003) * _lt_0_row[94]) * var_t1177)) + ((((((var_t1131 * var_t1172) * _lt_0_row[95]) / _lt_0_row[96]) * var_chaste_interface__Ca__Ca_NSR) * var_t1165) * 0.050000000000000003));
        DENSE_ELEM(rJacobian, 19, 0) = var_chaste_interface__Environment__fake_dt * ((0.001 * ((((-var_t5) + (3.0 * var_t273)) - (3.0 * var_t180)) - (0.39000000000000001 * var_t192))) * 0.125);
        DENSE_ELEM(rJacobian, 20, 0) = var_chaste_interface__Environment__fake_dt * ((((((var_t1300 * var_t1146) * 26841.799999999999) * _lt_0_row[31]) - ((((var_t1300 * var_t1309) * 0.35759999999999997) * _lt_0_row[32]) * _lt_0_row[33])) + ((((var_t1300 * var_t1309) * _lt_0_row[34]) / _lt_0_row[35]) * 0.35759999999999997)) + (var_t1321 * var_t1146));
        DENSE_ELEM(rJacobian, 21, 0) = var_chaste_interface__Environment__fake_dt * (var_t1360 * (((( -50.0 * var_t1361) * var_t239) + ((50.0 * var_t1364) * var_t179)) + ((((6.5 * var_t1364) * var_t184) * _lt_0_row[5]) * var_t191)));
        DENSE_ELEM(rJacobian, 0, 1) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((( -3.0 * var_t1) * var_chaste_interface__INa__xj) * var_t2) * var_t281));
        DENSE_ELEM(rJacobian, 1, 1) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[91]);
        DENSE_ELEM(rJacobian, 19, 1) = var_chaste_interface__Environment__fake_dt * ((((( -0.0030000000000000001 * var_t1) * var_chaste_interface__INa__xj) * var_t2) * var_t281) * 0.125);
        DENSE_ELEM(rJacobian, 0, 2) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t285) * var_t286));
        DENSE_ELEM(rJacobian, 2, 2) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[85]);
        DENSE_ELEM(rJacobian, 19, 2) = var_chaste_interface__Environment__fake_dt * (( -0.001 * var_t285) * var_t1281);
        DENSE_ELEM(rJacobian, 0, 3) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t1) * var_t286));
        DENSE_ELEM(rJacobian, 3, 3) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[88]);
        DENSE_ELEM(rJacobian, 19, 3) = var_chaste_interface__Environment__fake_dt * (( -0.001 * var_t1) * var_t1281);
        DENSE_ELEM(rJacobian, 0, 4) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        DENSE_ELEM(rJacobian, 4, 4) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[37] - (0.024167999999999999 * var_t608));
        DENSE_ELEM(rJacobian, 5, 4) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[40]);
        DENSE_ELEM(rJacobian, 6, 4) = var_chaste_interface__Environment__fake_dt * (0.0058992000000000003 * var_t608);
        DENSE_ELEM(rJacobian, 7, 4) = var_chaste_interface__Environment__fake_dt * (0.0021800000000000001);
        DENSE_ELEM(rJacobian, 18, 4) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        DENSE_ELEM(rJacobian, 20, 4) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        DENSE_ELEM(rJacobian, 21, 4) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        DENSE_ELEM(rJacobian, 0, 5) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        DENSE_ELEM(rJacobian, 4, 5) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[38]);
        DENSE_ELEM(rJacobian, 5, 5) = var_chaste_interface__Environment__fake_dt * (((-var_t701) - _lt_0_row[41]) - _lt_0_row[42]);
        DENSE_ELEM(rJacobian, 6, 5) = var_chaste_interface__Environment__fake_dt * (-var_t781);
        DENSE_ELEM(rJacobian, 7, 5) = var_chaste_interface__Environment__fake_dt * ( -0.0019499999999999999);
        DENSE_ELEM(rJacobian, 8, 5) = var_chaste_interface__Environment__fake_dt * (var_t701);
        DENSE_ELEM(rJacobian, 9, 5) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[41]);
        DENSE_ELEM(rJacobian, 18, 5) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        DENSE_ELEM(rJacobian, 20, 5) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        DENSE_ELEM(rJacobian, 21, 5) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        DENSE_ELEM(rJacobian, 0, 6) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        DENSE_ELEM(rJacobian, 4, 6) = var_chaste_interface__Environment__fake_dt * ( -2.999896385);
        DENSE_ELEM(rJacobian, 6, 6) = var_chaste_interface__Environment__fake_dt * ((((-var_t781) - _lt_0_row[57]) - 0.000103615) - 7.8323473681792485e-06);
        DENSE_ELEM(rJacobian, 7, 6) = var_chaste_interface__Environment__fake_dt * ( -0.0019499999999999999);
        DENSE_ELEM(rJacobian, 8, 6) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[57]);
        DENSE_ELEM(rJacobian, 18, 6) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        DENSE_ELEM(rJacobian, 20, 6) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        DENSE_ELEM(rJacobian, 21, 6) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        DENSE_ELEM(rJacobian, 0, 7) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        DENSE_ELEM(rJacobian, 4, 7) = var_chaste_interface__Environment__fake_dt * ( -2.99776);
        DENSE_ELEM(rJacobian, 6, 7) = var_chaste_interface__Environment__fake_dt * (-var_t781);
        DENSE_ELEM(rJacobian, 7, 7) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[50]);
        DENSE_ELEM(rJacobian, 9, 7) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[57]);
        DENSE_ELEM(rJacobian, 18, 7) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        DENSE_ELEM(rJacobian, 20, 7) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        DENSE_ELEM(rJacobian, 21, 7) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        DENSE_ELEM(rJacobian, 0, 8) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        DENSE_ELEM(rJacobian, 4, 8) = var_chaste_interface__Environment__fake_dt * ( -3.0);
        DENSE_ELEM(rJacobian, 5, 8) = var_chaste_interface__Environment__fake_dt * (var_t704);
        DENSE_ELEM(rJacobian, 6, 8) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[58] - var_t781);
        DENSE_ELEM(rJacobian, 7, 8) = var_chaste_interface__Environment__fake_dt * ( -0.0019499999999999999);
        DENSE_ELEM(rJacobian, 8, 8) = var_chaste_interface__Environment__fake_dt * ((-var_t704) - _lt_0_row[58]);
        DENSE_ELEM(rJacobian, 18, 8) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        DENSE_ELEM(rJacobian, 20, 8) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        DENSE_ELEM(rJacobian, 21, 8) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        DENSE_ELEM(rJacobian, 0, 9) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        DENSE_ELEM(rJacobian, 4, 9) = var_chaste_interface__Environment__fake_dt * ( -3.0);
        DENSE_ELEM(rJacobian, 5, 9) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[43]);
        DENSE_ELEM(rJacobian, 6, 9) = var_chaste_interface__Environment__fake_dt * (-var_t781);
        DENSE_ELEM(rJacobian, 7, 9) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[51]);
        DENSE_ELEM(rJacobian, 9, 9) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[64]);
        DENSE_ELEM(rJacobian, 18, 9) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        DENSE_ELEM(rJacobian, 20, 9) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        DENSE_ELEM(rJacobian, 21, 9) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        DENSE_ELEM(rJacobian, 0, 10) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((( -0.43033148290000001 * var_t71) * var_t6) * _lt_0_row[117]) * var_t44));
        DENSE_ELEM(rJacobian, 10, 10) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[74]);
        DENSE_ELEM(rJacobian, 0, 11) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t89) * var_t97) * var_chaste_interface__IKs__xs2) * var_t314));
        DENSE_ELEM(rJacobian, 11, 11) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[78]);
        DENSE_ELEM(rJacobian, 0, 12) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t89) * var_t98) * var_t314));
        DENSE_ELEM(rJacobian, 12, 12) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[83]);
        DENSE_ELEM(rJacobian, 0, 13) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t101) * var_t115) * var_t44));
        DENSE_ELEM(rJacobian, 13, 13) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[102]);
        DENSE_ELEM(rJacobian, 0, 14) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t101) * var_chaste_interface__Ito__xtos) * var_t44));
        DENSE_ELEM(rJacobian, 14, 14) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[112]);
        DENSE_ELEM(rJacobian, 0, 15) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (( -0.040000000000000001 * var_chaste_interface__Ito__ytof) * var_t44));
        DENSE_ELEM(rJacobian, 15, 15) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[97]);
        DENSE_ELEM(rJacobian, 0, 16) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t118) * var_t44));
        DENSE_ELEM(rJacobian, 16, 16) = var_chaste_interface__Environment__fake_dt * (_lt_0_row[107]);
        DENSE_ELEM(rJacobian, 17, 17) = var_chaste_interface__Environment__fake_dt * ( -0.01);
        DENSE_ELEM(rJacobian, 18, 17) = var_chaste_interface__Environment__fake_dt * ((((var_t1131 * var_t1172) * _lt_0_row[29]) * var_t1153) * var_t1196);
        DENSE_ELEM(rJacobian, 20, 17) = var_chaste_interface__Environment__fake_dt * ((var_t1299 * var_t1196) * var_t1324);
        DENSE_ELEM(rJacobian, 18, 18) = var_chaste_interface__Environment__fake_dt * (((-(1.0 - (var_t1214 * var_t1215))) * 0.033333333333333333) - (var_chaste_interface__Irel__xir * var_t1215));
        DENSE_ELEM(rJacobian, 21, 18) = var_chaste_interface__Environment__fake_dt * (50.0 * var_t1360);
        DENSE_ELEM(rJacobian, 23, 18) = var_chaste_interface__Environment__fake_dt * ( -1.0);
        DENSE_ELEM(rJacobian, 0, 19) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t328) - ((((var_t100 * 0.086173421482889187) * 308.0) * var_t309) * 0.018329999999999999)) - (3.0 * var_t338)) + var_t350) - var_t354) + var_t360));
        DENSE_ELEM(rJacobian, 19, 19) = var_chaste_interface__Environment__fake_dt * ((0.001 * (((((-var_t328) - (3.0 * var_t354)) + (3.0 * var_t360)) - (9.0 * var_t338)) + (3.0 * var_t350))) * 0.125);
        DENSE_ELEM(rJacobian, 21, 19) = var_chaste_interface__Environment__fake_dt * (var_t1360 * ((((150.0 * var_t1364) * var_t130) * var_t337) - (((150.0 * var_t1380) * var_t1381) * var_t347)));
        DENSE_ELEM(rJacobian, 4, 20) = var_chaste_interface__Environment__fake_dt * (-var_t622);
        DENSE_ELEM(rJacobian, 5, 20) = var_chaste_interface__Environment__fake_dt * ((-var_t715) - ((((((3.0 * var_t716) * var_t651) * 27.0) * var_t619) - (((4.0 * var_t689) * var_t658) * var_t713)) * var_chaste_interface__ICaL__c2));
        DENSE_ELEM(rJacobian, 6, 20) = var_chaste_interface__Environment__fake_dt * (var_t622 + ((((0.054806399999999998 * var_t616) * var_t195) * 27.0) * var_t619));
        DENSE_ELEM(rJacobian, 8, 20) = var_chaste_interface__Environment__fake_dt * (((((((3.0 * var_t716) * var_t651) * var_chaste_interface__ICaL__c2) * 27.0) * var_t619) - (((4.0 * var_t689) * var_t840) * var_t713)) + var_t715);
        DENSE_ELEM(rJacobian, 20, 20) = var_chaste_interface__Environment__fake_dt * ( -2.0);
        DENSE_ELEM(rJacobian, 0, 21) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((( -3.0 * var_t370) + (0.001 * var_t374)) + var_t380) - (((2.0 * var_t194) * var_t195) * _lt_0_row[36])));
        DENSE_ELEM(rJacobian, 18, 21) = var_chaste_interface__Environment__fake_dt * (((var_t1131 * var_t1230) * _lt_0_row[29]) * var_t1166);
        DENSE_ELEM(rJacobian, 19, 21) = var_chaste_interface__Environment__fake_dt * ((0.001 * ((( -9.0 * var_t370) + (0.0030000000000000001 * var_t374)) + (3.0 * var_t380))) * 0.125);
        DENSE_ELEM(rJacobian, 20, 21) = var_chaste_interface__Environment__fake_dt * (((((var_t1300 * var_t1230) * 26841.799999999999) * _lt_0_row[31]) + (var_t1321 * var_t1230)) + 2.0);
        DENSE_ELEM(rJacobian, 21, 21) = var_chaste_interface__Environment__fake_dt * (((( -2.0 / pow(var_t1359, 2.0)) * ((((((50.0 * var_chaste_interface__Irel__xir) - (50.0 * var_t1392)) - ((50.0 * var_t1361) * var_t297)) + (((50.0 * var_t1364) * var_t340) * var_t178)) - (var_t1399 * var_t1400)) + (0.019599999999999999 * var_chaste_interface__Ca__trops))) * ((((( -168.0 / var_t1341) / var_t1340) - ((28.199999999999999 / var_t1346) / var_t1345)) - ((4.5 / var_t1351) / var_t1350)) - ((546.0 / var_t1356) / var_t1355))) + (var_t1360 * ((((( -12.5 - ((50.0 * var_t1361) * _lt_0_row[36])) + (((126.0 * var_t363) * var_t184) * var_t369)) - (((((0.050000000000000003 * var_t1364) * var_t145) * _lt_0_row[4]) * _lt_0_row[3]) * var_t178)) - (((0.050000000000000003 * var_t1380) * var_t1381) * var_t377)) - var_t1434)));
        DENSE_ELEM(rJacobian, 22, 21) = var_chaste_interface__Environment__fake_dt * (var_t1459 * 0.25);
        DENSE_ELEM(rJacobian, 25, 21) = var_chaste_interface__Environment__fake_dt * (var_t1434);
        DENSE_ELEM(rJacobian, 0, 22) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((( -0.29999999999999999 * var_t89) / pow(var_t94, 2.0)) / pow(var_t90, 2.0)) * var_chaste_interface__IKs__xs1) * var_chaste_interface__IKs__xs2) * var_t314));
        DENSE_ELEM(rJacobian, 18, 22) = var_chaste_interface__Environment__fake_dt * ((var_chaste_interface__Irel__xir * var_t1243) * var_t1215);
        DENSE_ELEM(rJacobian, 21, 22) = var_chaste_interface__Environment__fake_dt * ((50.0 * var_t1360) * 0.25);
        DENSE_ELEM(rJacobian, 22, 22) = var_chaste_interface__Environment__fake_dt * (((( -2.0 / pow(var_t1458, 2.0)) * ((((var_t1392 - var_t1203) + var_t1212) - (var_t1463 * var_t1464)) + (0.019599999999999999 * var_chaste_interface__Ca__tropi))) * ((((( -168.0 / var_t1443) / var_t1442) - ((28.199999999999999 / var_t1447) / var_t1446)) - ((4.5 / var_t1451) / var_t1450)) - ((546.0 / var_t1455) / var_t1454))) + (var_t1459 * (((( -0.25 - var_t1236) + var_t1241) - var_t1242) - var_t1483)));
        DENSE_ELEM(rJacobian, 23, 22) = var_chaste_interface__Environment__fake_dt * (var_t1243);
        DENSE_ELEM(rJacobian, 24, 22) = var_chaste_interface__Environment__fake_dt * (var_t1483);
        DENSE_ELEM(rJacobian, 17, 23) = var_chaste_interface__Environment__fake_dt * (0.01);
        DENSE_ELEM(rJacobian, 18, 23) = var_chaste_interface__Environment__fake_dt * ((((var_t1131 * var_t1172) * _lt_0_row[94]) * var_t1165) - ((var_chaste_interface__Irel__xir * ((( -30.0 * var_t1260) * var_t1215) + (var_t1214 / var_t1204))) * 0.033333333333333333));
        DENSE_ELEM(rJacobian, 20, 23) = var_chaste_interface__Environment__fake_dt * (((var_t195 * var_t1163) * 0.011111111111111112) * var_t1324);
        DENSE_ELEM(rJacobian, 22, 23) = var_chaste_interface__Environment__fake_dt * ((-var_t1459) * var_t1260);
        DENSE_ELEM(rJacobian, 23, 23) = var_chaste_interface__Environment__fake_dt * (var_t1260);
        DENSE_ELEM(rJacobian, 22, 24) = var_chaste_interface__Environment__fake_dt * (var_t1459 * var_t1488);
        DENSE_ELEM(rJacobian, 24, 24) = var_chaste_interface__Environment__fake_dt * (-var_t1488);
        DENSE_ELEM(rJacobian, 21, 25) = var_chaste_interface__Environment__fake_dt * (var_t1360 * var_t1440);
        DENSE_ELEM(rJacobian, 25, 25) = var_chaste_interface__Environment__fake_dt * (-var_t1440);
    }
    
template<>
void OdeSystemInformation<CellMahajan2008FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "mahajan_shiferaw_model_2008";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-87.169816169406);

    this->mVariableNames.push_back("INa__xm");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001075453357);

    this->mVariableNames.push_back("INa__xh");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.990691306716);

    this->mVariableNames.push_back("INa__xj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993888937283);

    this->mVariableNames.push_back("ICaL__c1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000018211252);

    this->mVariableNames.push_back("ICaL__c2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.979322592773);

    this->mVariableNames.push_back("ICaL__xi1ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001208153482);

    this->mVariableNames.push_back("ICaL__xi1ba");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000033616596);

    this->mVariableNames.push_back("ICaL__xi2ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004173008466);

    this->mVariableNames.push_back("ICaL__xi2ba");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015242594688);

    this->mVariableNames.push_back("IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007074239331);

    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.048267587131);

    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.105468807033);

    this->mVariableNames.push_back("Ito__xtos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00364776906);

    this->mVariableNames.push_back("Ito__ytos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.174403618112);

    this->mVariableNames.push_back("Ito__xtof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003643592594);

    this->mVariableNames.push_back("Ito__ytof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993331326442);

    this->mVariableNames.push_back("Irel__Ca_JSR");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(97.505463697266);

    this->mVariableNames.push_back("Irel__xir");
    this->mVariableUnits.push_back("uM_per_ms");
    this->mInitialConditions.push_back(0.006679257264);

    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(11.441712311614);

    this->mVariableNames.push_back("Ca__Ca_dyad");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(1.716573130685);

    this->mVariableNames.push_back("Ca__Ca_submem");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(0.226941113355);

    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(0.256752008084);

    this->mVariableNames.push_back("Ca__Ca_NSR");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(104.450004990523);

    this->mVariableNames.push_back("Ca__tropi");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(22.171689894953);

    this->mVariableNames.push_back("Ca__trops");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(19.864701949854);

    this->mParameterNames.push_back("ScaleFactorGkr");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorGks");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("ScaleFactorIto");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("mM");
    
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("mM");
    
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("mM");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellMahajan2008FromCellMLCvodeOpt)
#endif // CHASTE_CVODE
