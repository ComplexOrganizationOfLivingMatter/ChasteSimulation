#ifdef CHASTE_CVODE
#ifndef CELLSHANNON2004FROMCELLMLCVODE_HPP_
#define CELLSHANNON2004FROMCELLMLCVODE_HPP_

//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: shannon_2004
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 25950, pycml: 25949, optimize: 25790)
//! on Wed May  4 17:40:28 2016
//! 
//! <autogenerated>

#include "ChasteSerialization.hpp"
#include <boost/serialization/base_object.hpp>
#include "AbstractCvodeCell.hpp"
#include "AbstractCardiacCellWithModifiers.hpp"
#include "AbstractModifier.hpp"
#include "AbstractStimulusFunction.hpp"

class CellShannon2004FromCellMLCvode : public AbstractCardiacCellWithModifiers<AbstractCvodeCell >
{
    friend class boost::serialization::access;
    template<class Archive>
    void serialize(Archive & archive, const unsigned int version)
    {
        archive & boost::serialization::base_object<AbstractCardiacCellWithModifiers<AbstractCvodeCell > >(*this);
        // Despite this class having modifier member variables, they are all added to the
        // abstract class by the constructor, and archived via that, instead of here.
    }
    
    // 
    // Settable parameters and readable variables
    // 
    boost::shared_ptr<AbstractModifier> mp_JSR_calcium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_SR_leak_current_max_modifier;
    boost::shared_ptr<AbstractModifier> mp_SR_release_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_SR_release_current_max_modifier;
    boost::shared_ptr<AbstractModifier> mp_SR_uptake_current_max_modifier;
    boost::shared_ptr<AbstractModifier> mp_cytosolic_calcium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_cytosolic_potassium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_cytosolic_sodium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_extracellular_calcium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_extracellular_potassium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_extracellular_sodium_concentration_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_L_type_calcium_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_L_type_calcium_current_conductance_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_L_type_calcium_current_d_gate_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_L_type_calcium_current_fCa_gate_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_L_type_calcium_current_f_gate_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_L_type_calcium_current_f_gate_tau_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_fast_sodium_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_fast_sodium_current_conductance_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_fast_sodium_current_h_gate_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_fast_sodium_current_j_gate_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_fast_sodium_current_m_gate_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_inward_rectifier_potassium_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_rapid_delayed_rectifier_potassium_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_rapid_delayed_rectifier_potassium_current_conductance_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_slow_delayed_rectifier_potassium_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_slow_delayed_rectifier_potassium_current_conductance_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_sodium_calcium_exchanger_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_sodium_calcium_exchanger_current_conductance_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_transient_outward_current_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_transient_outward_current_conductance_modifier;
    boost::shared_ptr<AbstractModifier> mp_membrane_voltage_modifier;
    
public:
    boost::shared_ptr<RegularStimulus> UseCellMLDefaultStimulus();
    double GetIntracellularCalciumConcentration();
    CellShannon2004FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus);
    ~CellShannon2004FromCellMLCvode();
    double GetIIonic(const std::vector<double>* pStateVariables=NULL);
    void EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY);
    void EvaluateAnalyticJacobian(long int N, double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3);
    N_Vector ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY);
};


// Needs to be included last
#include "SerializationExportWrapper.hpp"
CHASTE_CLASS_EXPORT(CellShannon2004FromCellMLCvode)

namespace boost
{
    namespace serialization
    {
        template<class Archive>
        inline void save_construct_data(
            Archive & ar, const CellShannon2004FromCellMLCvode * t, const unsigned int fileVersion)
        {
            const boost::shared_ptr<AbstractIvpOdeSolver> p_solver = t->GetSolver();
            const boost::shared_ptr<AbstractStimulusFunction> p_stimulus = t->GetStimulusFunction();
            ar << p_solver;
            ar << p_stimulus;
        }
        
        template<class Archive>
        inline void load_construct_data(
            Archive & ar, CellShannon2004FromCellMLCvode * t, const unsigned int fileVersion)
        {
            boost::shared_ptr<AbstractIvpOdeSolver> p_solver;
            boost::shared_ptr<AbstractStimulusFunction> p_stimulus;
            ar >> p_solver;
            ar >> p_stimulus;
            ::new(t)CellShannon2004FromCellMLCvode(p_solver, p_stimulus);
        }
        
    }
    
}

#endif // CELLSHANNON2004FROMCELLMLCVODE_HPP_
#endif // CHASTE_CVODE
